// Code generated by go-bindata.
// sources:
// layout.html
// assets/styles.css
// templates/factoid-info.html
// templates/factoid-list.html
// templates/home.html
// templates/logs-index.html
// templates/user-manage.html
// DO NOT EDIT!

package weblogin

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _layoutHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x5d\x77\x9b\x38\x10\x7d\xcf\xaf\x50\x69\xdf\xb2\xa0\xda\x4e\xd2\x6c\x8a\xd9\xe3\xc6\x6e\xe2\xc6\x75\x9c\xda\x75\x77\xf3\xb2\x47\x80\x00\xd9\x42\x22\x92\xf0\xc7\x72\xf8\xef\x7b\x10\xe0\xaf\xba\x6d\x4e\x4e\xfd\x82\x98\x19\xee\xcc\xd5\x8c\xae\x9c\x65\xc0\xc7\x01\x61\x18\x18\x14\xad\x79\xaa\x0c\x90\xe7\x27\xf6\xab\xee\xfd\xf5\xe4\x9f\x51\x0f\x44\x2a\xa6\xce\x89\x5d\x3f\x30\xf2\x9d\x13\x00\x00\xc8\x32\xe0\x52\xee\xcd\x81\xa1\x88\xa2\xd8\x00\x16\xc8\x73\x5b\xaf\x9d\x2c\x23\x01\xb0\x26\xc5\x3a\xcf\xb3\x6c\xbb\xc2\x54\xe2\x3c\xff\x8c\xc4\x82\x30\xf0\x0d\xbb\xa0\xcf\x14\x16\x01\xf2\x70\x96\x61\xe6\xe7\xb9\x0d\x6b\x04\x80\x99\x5f\x54\xb2\x9f\xcb\xc7\x01\x4a\xa9\x32\xa5\x5a\x53\x2c\x8b\xa4\x66\x15\x63\x53\xc2\xe6\x40\x60\xda\x36\x4a\x67\x84\xb1\x32\x40\x24\x70\xd0\x36\x22\xa5\x12\x79\x05\xa1\xe7\xb3\x99\xb4\x3c\xca\x53\x3f\xa0\x48\x60\xcb\xe3\x31\x44\x33\xb4\x82\x94\xb8\x12\xaa\x25\x51\x0a\x0b\xd3\xe5\x5c\x49\x25\x50\x02\x5b\x56\xcb\xba\x80\x9e\x94\x70\x63\xb3\x62\xc2\x2c\x4f\x4a\x43\xa7\x2d\x7f\x84\x29\x1c\x0a\xa2\xd6\x6d\x43\x46\xa8\x75\x79\x66\x36\x9e\x2e\xe3\xc9\xa7\xfb\xce\x78\x75\x39\x6b\x74\xd2\x53\x74\xfe\xad\x3b\x65\x23\xd2\xa4\xf3\x8f\xc1\x72\xd9\xeb\xa0\xcb\xa8\xdb\xf5\x67\x8f\x34\x19\xe0\x70\x15\xcd\xa6\x9f\x7b\x8d\x20\x9c\x7d\x1b\xdd\xc4\xf3\xff\xe4\x3b\x03\x78\x82\x4b\xc9\x05\x09\x09\x6b\x1b\x88\x71\xb6\x8e\x79\x2a\x0d\xe7\xb7\xb1\x0d\x38\x53\x26\x5a\x62\xc9\x63\x0c\xcf\xac\x77\xd6\x5b\x4d\x74\xd7\xfc\x3c\xae\xcb\x45\xf0\x77\xf2\x94\x3c\x3e\x4e\x1f\x6e\xee\x2e\x26\x9d\xe8\x7c\x34\xa5\x37\xf7\xc1\xc3\xf0\x76\xcc\xbb\xcd\x95\xdb\x3b\x7d\x98\x8f\x56\xd7\x9d\x8f\x74\xd8\xc3\x0b\xde\xbb\x6d\x8d\xe9\x5b\x49\xdc\xa9\x77\xff\x30\x65\xc3\x5f\x71\x95\x9e\x20\x89\x02\x52\x78\xcf\xe6\x36\x7b\x4a\xb1\x58\xc3\xa6\xd5\xb4\x5a\xd5\x8b\xe6\x32\xfb\x05\x95\xfe\xc5\xc7\xf3\xfb\xbb\xde\xf5\x60\xaa\xee\xe0\x87\xc1\xe9\x25\x19\x0f\xba\xbd\x5b\xbe\x1c\x77\x82\xaf\xfc\xdd\xc5\xe3\xe0\xcf\xd3\xf9\x4d\x27\x9c\x7c\xf1\xc9\x87\x75\x7f\x78\xf7\x09\x3d\x4d\x46\xb7\xf0\x61\x3a\x1c\x37\xa6\x5d\xf7\xc7\x54\x6c\x58\xd2\xd8\xed\xdf\x7e\xbb\x8a\x8d\x97\x56\xc8\x79\x48\x31\x4a\x88\xd4\x94\x3c\x29\xff\x0a\x50\x4c\xe8\xba\xdd\xa1\x38\x14\x78\x8d\x4e\xc7\x88\xc9\xd3\xf1\xb5\xf1\x5d\xff\x9f\x31\x1b\x10\x49\x89\x95\x84\xa5\x47\xf7\xb6\x3e\xcf\xe6\xf1\x23\xb7\x3d\x6a\xc5\x09\xae\x63\x6c\x58\x4a\x81\xed\x72\x7f\xed\x9c\x6c\xc3\x19\x5a\xb8\x48\xd4\x27\xd3\x66\x68\x01\x3c\x8a\xa4\x6c\x57\x1e\x50\x3e\x4c\xc2\x16\x58\x48\x5c\xd7\xec\x93\x4d\x9c\xc7\x99\x42\x84\x61\x61\x06\x34\x25\xfe\x91\x88\x0a\xa2\xa8\x00\x8b\xca\xaf\x63\xd0\x41\x84\x2b\x10\xf3\x37\xd4\x0d\xa7\x54\x1e\x1b\xa2\x0a\x13\xfa\x64\xb1\x03\x4f\xfc\xf6\xa6\xfe\x4d\x31\x94\xa2\x44\xe2\xba\xec\xfa\x7d\x37\x6b\x4a\x77\xd2\xd6\x81\x0c\x2d\x76\x62\xb2\x0c\x2c\x89\x8a\xea\x4d\x7c\xe3\xa5\x42\x60\xa6\xc0\x55\x1b\x58\x43\xfd\xc1\x75\x65\xd1\x7e\x81\x58\x88\x6b\x4f\x5f\xe1\x58\xd6\x7d\xd9\x01\x24\x01\xc0\x4f\x45\x50\x8c\xb7\x80\xe6\x41\x9c\x4d\x49\x5d\x1c\xf2\x14\x59\x60\xc3\xb1\x51\xb5\x21\x59\x66\x7d\xfd\x32\xc8\x73\xc3\xc9\x32\x0d\x53\xe8\x2f\x72\x6c\x48\x89\x73\x90\xcc\x04\x85\x74\x1f\x43\x7f\x29\xdc\x76\xd4\x2a\x3a\xa5\x65\x5f\xf8\xcb\x26\xa5\xf4\x19\x9b\x5d\x2f\x05\x09\x23\x65\x1c\x26\x2c\x36\xcb\x1a\x53\xe4\xcd\xbf\x4a\x2c\x8e\xf2\xd8\x33\x68\x23\x89\x43\x10\xe1\x02\xaf\x6d\xb4\x9a\x06\x58\x12\x5f\x45\xe5\x52\x6b\x51\x96\x6d\x21\xad\xce\x02\x29\x24\x40\xab\x99\xe7\xc6\x77\x50\xfa\x27\x85\x27\xb1\xfa\xf1\x67\xa0\xb1\xfa\x03\x1c\x73\x5e\x9c\xe5\x39\x68\xfe\xc0\xd9\x68\x5e\xe6\x39\x38\x5b\x19\x00\x1e\xa1\x50\xf7\xe6\xb5\xe1\xd8\x9b\x41\x08\x10\x08\x90\x29\x0b\xa4\x42\x97\x48\xd1\xaf\x6e\x35\x7f\x1a\x5a\x27\xd9\x76\x70\x7f\xab\x5e\x3e\x1d\x63\x85\x84\x2a\x09\x94\x73\xf2\x93\x92\x80\x8e\x03\x03\x1e\x82\x3e\xfb\xe9\x18\x1d\x19\x78\x2d\x59\xfa\xec\x72\x71\x05\x5e\xfb\xbe\xff\x1e\x24\xc8\xf7\x09\x0b\x4d\xc5\x93\x2b\xd0\x38\x4f\x56\xef\x6b\x8b\xcb\x95\xe2\xf1\x95\xb6\x7d\x5f\x13\x12\x82\x2f\xa5\x19\x95\x65\x1d\xab\x42\xcf\xd6\xde\xfe\xf5\x99\x12\x68\xc0\x43\xc2\x5e\x38\x69\x87\x57\x9d\x45\x0a\x44\xeb\xac\x69\x05\x02\xa6\x12\x0b\x09\x63\xec\x93\x34\xfe\xf7\xb0\x75\xdb\xd4\x79\x6e\xcd\x12\x1c\xfe\x72\x2e\x7e\x86\xf0\xdb\xbb\xaf\xc1\xab\xee\xeb\xf5\x73\x3a\x7c\x5c\x0d\x76\xc5\xbb\x5c\xda\x90\xa1\x45\x71\x17\x6d\xbe\xaa\x65\xf7\x4d\x48\xb9\x8b\xa8\x96\xdb\x52\x64\xaa\xdb\xaa\xb8\x6b\x30\x53\x06\xb0\x3e\x70\x7f\xdd\x45\x0a\xe9\xcb\x2d\x6a\x38\x9f\x89\x94\x84\x85\xa0\x8a\x78\x65\xc3\xa8\xa1\xef\xb9\x43\x9d\xb2\x61\x79\x05\xda\xb0\xfc\x8f\xbc\xf1\xfc\x1f\x00\x00\xff\xff\xa9\x35\x4e\xb0\x5a\x0b\x00\x00"

func layoutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_layoutHtml,
		"layout.html",
	)
}

func layoutHtml() (*asset, error) {
	bytes, err := layoutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layout.html", size: 2906, mode: os.FileMode(420), modTime: time.Unix(1482051160, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsStylesCss = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xd1\x6e\xd3\x30\x14\x7d\xef\x57\x5c\x6d\x0f\x93\xba\xa5\x4d\xbb\x6e\x94\x4c\x4c\x1a\x05\x09\x24\xc4\x03\x9b\x78\x41\x3c\xdc\xd8\x37\x89\x35\xc7\x37\xb3\x9d\x75\x05\xed\xdf\x91\x9d\xb4\x2b\xa5\x9d\x78\x8c\x7d\xcf\xb9\xc7\xe7\x9c\x8c\x87\xf0\x89\x50\x92\x85\xe1\x78\x90\xb3\x5c\xc1\xef\x01\x00\x40\x8e\xe2\xbe\xb4\xdc\x1a\x99\x08\xd6\x6c\x33\x38\x2e\xa8\x10\x85\xb8\x1a\x3c\x0f\x46\x06\x1f\x73\xb4\x89\xc1\xc7\x6b\xad\xae\x55\x5d\xfe\xa8\x48\x95\x95\x7f\x77\x74\x3e\x3d\xfa\xd9\x53\xd4\x68\x4b\x65\x12\x1b\x2e\x32\xb8\x68\x9e\xae\xe2\xb1\x54\xae\xd1\xb8\xca\x40\x19\xad\x0c\x25\xb9\x66\x71\xff\x3f\xac\xa7\x80\x3d\xf3\x01\x8a\x70\xd5\xa0\x94\xca\x94\x89\xa6\xc2\x67\x90\x5e\x6d\x2b\xe9\xce\xa2\x90\xe7\xc1\x78\x08\x77\xdc\x00\x17\x20\xd8\x78\x32\x3e\x18\x30\x6a\xb0\xa4\xa4\xea\x0c\xa9\x26\xaf\xaf\x7b\xfe\x7b\xdc\xd5\xa8\x75\x8f\x28\xd8\xf8\xc4\xa9\x5f\x94\xc1\x64\xbe\x7e\xf8\xda\xc7\xf9\x7c\xbe\x47\xd6\x66\x2c\x62\x0b\xac\x95\x5e\x65\x70\x72\xa3\xa9\xb4\xb4\x42\xb8\x45\xe3\xe0\x76\x71\x72\x06\x0e\x8d\x4b\x1c\x59\x55\x04\x0d\xe1\x21\xb7\x24\xbc\x62\x93\xc1\x02\xb5\xe6\xd6\xbb\x40\xf4\x9e\xd9\x3b\x6f\xb1\x81\x0f\x2c\xe2\xc9\x82\x9b\x55\x4c\x03\xa6\xe9\x64\x92\x4c\xd3\xc9\x25\xdc\x2d\x95\xf7\x64\xcf\xe0\xb3\x11\xa3\x30\xf4\x45\x09\x32\x8e\x32\x58\x2c\xe0\xc6\x7b\xab\xf2\x36\x70\xc3\xf9\x28\x0d\x0e\x0d\xc6\xc3\x01\x0c\xb7\x16\xc5\xcf\xaf\xec\xe1\xa1\x55\x9e\x00\x35\x59\xef\xce\x20\x6f\x3d\x88\xd6\x79\xae\x01\x8d\x84\x8a\x74\x53\xb4\x1a\x0c\x7b\x72\x50\xb0\x85\x82\xf5\xbd\x03\x4b\x18\xe2\x02\x5f\x11\x48\x16\x6e\x14\xd8\xbe\xd1\x43\xab\x2c\x39\x40\xc8\xd1\x51\x24\xa8\x59\xaa\x42\x91\x05\xa1\xd1\xc5\xb1\xa8\x05\x16\x5c\xd7\x6c\xc0\xf9\x95\xee\x89\x43\x0a\x7e\xd5\x90\x8b\x81\xe6\x2e\x11\x9d\xd6\x18\x4d\x5f\x8f\x0c\xa6\x69\xe7\x77\x97\x41\xf7\xdd\xd5\x25\x67\x2b\xc9\x66\x30\x69\x9e\xc0\xb1\x56\x12\x8e\x89\xe8\xe5\x26\xe6\x95\x2c\x95\xf4\xd5\xa6\xd5\xfd\x8d\x45\xa9\x5a\x97\xc1\x79\x57\xb1\xed\xe5\xd5\x2c\xee\xef\x23\xf7\xdc\xf4\xe5\xec\x0f\x72\xf6\x9e\xeb\x4d\x39\xb7\x91\x4d\xa6\xd1\xf9\x44\x54\x4a\xcb\x6d\x8e\x35\x24\xdd\x05\x08\x96\x14\x07\xf7\xab\x8a\xcd\x0f\x2d\x20\x03\x6d\x03\xae\x41\x41\x90\x93\x5f\x12\x19\xa8\x5b\xed\x55\xa3\x09\x7a\xb2\x7f\x4c\x3c\x85\x5d\x4b\xb7\x9f\x94\x5c\xbc\xec\xf8\x8e\x56\x61\xa8\xce\x2e\x47\x22\xd1\x94\x64\xb7\x25\x46\x4b\xd7\xff\x87\xa0\xd9\x7c\x36\xdb\x79\xd5\x1a\xd4\xfb\xf8\xfa\xec\x12\xad\x09\xad\x3a\xb4\x01\xf1\xf2\x4d\x3a\x3f\x84\xda\x59\xb1\x7f\x58\x99\x82\x0f\xf2\x4f\xf2\x79\xfa\x96\xf6\x42\x76\xc8\x5f\x26\xc7\x43\xf8\x68\xe4\xe6\xc7\x82\xe1\xf8\x4f\x00\x00\x00\xff\xff\xe4\x31\x71\x04\x9b\x05\x00\x00"

func assetsStylesCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsStylesCss,
		"assets/styles.css",
	)
}

func assetsStylesCss() (*asset, error) {
	bytes, err := assetsStylesCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/styles.css", size: 1435, mode: os.FileMode(420), modTime: time.Unix(1481243193, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFactoidInfoHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x83\xd9\xeb\xda\xe4\x1a\xb4\x62\x61\x61\xa1\x50\x7a\x68\xd3\x73\x19\xa4\x97\x5a\xd4\x96\x8d\xa4\x24\x84\x41\xff\xbd\x44\x56\x92\xb6\xbe\x78\xf4\xe6\x7b\xe8\xf1\x24\x62\xb1\x77\x1e\xd4\xc6\x74\x1e\x11\xdb\x9c\x1b\x55\x46\xdd\x34\xaa\xaf\x93\x08\xbc\xcd\xb9\xb9\xd3\x66\xf6\x09\x3e\x15\xdc\xba\x23\x99\x91\x63\xfc\x53\x64\x76\x1e\xa1\xbd\x98\x4e\x2e\x0d\xd4\xfd\x67\x93\x66\x67\x7f\x90\x0b\xbf\xe3\xf7\x00\xb6\x85\x25\x22\x52\xc3\x46\x57\x76\x4b\x22\x57\xdf\x13\x4f\xc8\x59\xf5\xc3\x46\x37\xaa\xb7\xee\xa8\x9b\x15\x5f\xf4\xe3\x6c\x3e\x50\x60\xb7\xa7\xee\x21\xae\xe7\x9c\xcf\x88\x22\x18\x23\x72\xf6\x73\xcd\xae\xfa\x45\xdf\x7c\x1c\x13\xc1\xba\xb4\xa5\xbf\x35\xe5\x21\x22\xd0\xaf\x6e\x07\x9e\xa8\xbb\xec\x5f\x23\x42\xce\x22\xdd\x7a\xff\xb5\x01\xaa\x9f\xf3\x24\x62\x06\xf6\x1e\xe3\x9b\xe7\x09\xdf\xcc\xff\xd6\xc5\x17\x9e\x13\x89\x04\x8c\xc9\x4d\x58\x99\x9d\x9b\x10\x13\x4f\x4b\xcd\x56\xc3\x05\x5c\x1b\x8a\xf3\x21\x18\xb4\x5a\x99\xd9\x42\x8b\x74\xcf\x7c\x7a\x29\xda\xc5\x51\x44\xd5\x2f\x01\xb7\x5a\xee\xaf\x54\xfe\x9f\x01\x00\x00\xff\xff\xf6\x34\xd0\xe9\xdb\x01\x00\x00"

func templatesFactoidInfoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesFactoidInfoHtml,
		"templates/factoid-info.html",
	)
}

func templatesFactoidInfoHtml() (*asset, error) {
	bytes, err := templatesFactoidInfoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/factoid-info.html", size: 475, mode: os.FileMode(420), modTime: time.Unix(1481245502, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFactoidListHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x55\x4d\x6f\xdc\x36\x10\xbd\xeb\x57\x4c\x16\x45\xd0\x02\x2b\xa9\xf9\x38\x39\x8c\x90\x20\x40\x01\x03\x4e\x0f\xb5\x8d\xa2\xa7\x78\x56\x1a\x49\xac\xf9\xa1\x92\xd4\xae\x05\x42\xff\xbd\x20\x45\xad\xb5\x75\x72\xe9\x4d\x1a\xce\xcc\x7b\xf3\xe6\x89\xf2\xbe\xa1\x96\x2b\x82\x9d\x75\x93\x20\xbb\x9b\xe7\x8c\xc5\xc7\x2a\x1b\x45\xd1\x62\xed\x34\x6f\x72\xc1\xad\x03\x9f\x01\x00\x0c\xd8\x34\x5c\x75\x57\xf0\xeb\x87\x6c\x7e\x91\x23\x78\x4a\x0b\x6f\x79\x6c\x74\x05\x4a\x2b\xfa\x10\xa3\x12\x4d\xc7\x55\x2e\xa8\x75\x57\xf0\x76\x78\xba\x88\x1a\xde\xf5\x6b\x78\xce\x5e\xf4\x2d\x04\x5a\x97\x4b\xdd\xf0\x96\x53\x93\x60\x5a\xa1\xd1\x5d\x41\x2c\x0d\x55\xac\x4c\xe4\xbd\x27\xd5\xcc\x73\xf6\x3c\x60\xad\x95\x23\xe5\xe2\x84\x0d\x3f\x42\x2d\xd0\xda\x8f\x31\x8c\x5c\x91\xd9\x55\x17\xf1\x01\x3b\xca\x7b\xc2\x26\x9e\x04\x2c\xd6\xbf\xa9\x7e\x5b\x48\x59\x56\xf6\x6f\x2a\x66\x25\x0a\x51\x7d\x86\x13\x4e\xe0\x34\x58\xa7\x0d\x01\xaa\x06\x0c\x39\xc3\xe9\x48\xe0\xe8\xc9\xb1\x72\xc9\xcb\x58\xd9\xf0\xe3\x25\xca\xc1\xe6\x35\x0a\xa1\x47\x07\xcf\x8f\x39\x57\xad\x3e\x83\xbe\xaf\xee\x2d\x57\x1d\x6c\xa0\xdf\xa7\xb3\xa1\xba\xc5\x09\x58\xad\x1b\xaa\x5e\x25\xbd\x14\x4a\x62\x65\x0c\x01\x57\x80\x6a\x82\xba\x47\xa5\x48\xc0\xa9\x27\x43\xf0\x15\xcd\x91\x2b\xe0\x36\x50\x36\xa3\x02\x84\x54\x5a\xc0\x75\x0b\xae\xa7\xf5\x1d\x1c\x3e\x92\x05\x34\xdd\x28\x49\x39\xbb\x5f\x0c\x60\xf4\x91\x37\x14\x12\x25\x60\xeb\xc8\xc4\x9a\x80\xbb\x07\x3b\x60\x4d\xb9\xa5\x01\x0d\x3a\x6a\x0a\xb8\xeb\x69\x25\xb8\xb2\x62\x24\x2b\x39\x5a\xc7\x4a\x92\x15\x1c\x08\xd0\xc5\x0e\x47\x32\x13\x1c\xa8\xe3\x4a\x85\x79\x75\xe4\xb2\x18\x84\xac\xc5\x8e\x42\x37\x6e\x03\x73\x14\x56\x43\x50\x8b\x1a\x40\x38\xa0\xea\xf2\x75\x06\x56\x0e\x67\x75\xfe\xd2\x23\xd4\xa8\x96\xf4\x8b\x51\xe1\x30\x81\xc5\x29\xe0\x2c\xec\x3e\xc9\x45\x96\xf5\xbc\x23\x07\x2f\x15\x2d\xe0\xb3\x85\x03\xb5\xda\xd0\xfe\x2c\xc4\x59\x9f\x08\x8b\x16\x94\x36\x12\xc5\xc2\xe4\xff\xee\xfc\x4f\xc3\xdd\x0f\xb7\x7e\x6f\xa3\xfc\xff\xa1\x6e\x48\x92\x3c\x90\xd9\xf2\x86\xe4\xfa\x55\xfb\x5a\x4b\x19\x0c\x1a\xdc\x4a\x6e\xb3\xfa\xad\x6c\xd7\x2d\x4c\x7a\x04\x45\xd4\x5c\xd8\x21\xf5\x0a\xc5\xe9\xab\x01\x45\x27\xc1\x15\xd9\x3d\x34\x1a\x5c\xcf\xed\xd5\x32\xf5\x60\xa8\xfa\x01\x3b\x7a\x42\x39\x08\x82\xd7\x6f\xb2\x87\x87\x87\xec\xeb\x28\x1c\x0f\x3d\xb2\x2f\x4b\xfb\x10\x4d\x74\x59\x19\xfa\x7c\x8f\x96\x0c\x55\xa1\x8b\x5c\xcb\x61\x40\xe3\xec\x1e\xfe\x1e\xad\x03\x6c\x82\x2f\x5e\xbf\x4d\x8e\x39\x69\xf3\x68\xa1\xd5\x06\x50\x88\x55\x03\x1b\x3e\x8f\xf4\x31\xe4\x70\x18\x1d\x28\xed\x42\x52\xc4\xdb\x7a\xca\xee\xc3\x56\x5d\x4f\x13\xa0\x38\xe1\x64\x61\x4c\x0b\x20\xe5\xb8\xa1\xd5\x9f\xaf\xb6\x1b\xcf\x58\xff\x6e\xbd\x2e\xe0\x86\x07\xbb\xf7\xef\xaa\x8c\x8d\x62\xf5\xc1\xf6\x82\xdb\x85\x1b\x0b\x0c\xaa\x8e\xa0\x08\xd9\x30\xcf\x19\x00\x13\xbc\x62\x08\xbd\xa1\xf6\xe3\xae\x5c\xe9\x94\xde\xf3\x16\xe8\x1f\x28\x6e\x6b\x3d\xd0\x97\xf4\x79\xef\x76\xf3\xfc\xcd\x7b\x12\x96\xe6\xd9\xfb\x8b\xc3\x10\x88\x17\x62\xe9\x7d\x91\x58\xfd\x8e\x92\xe6\x39\x79\x0e\x92\x99\xbc\x87\xed\x39\xcc\x73\xda\x45\xc4\x54\xf4\x1d\x4c\x66\x07\x54\xeb\x50\xdc\xe6\xe9\xba\xc9\xb5\x12\xd3\xae\x7a\x41\x84\x95\x21\xbf\x4a\x7c\x58\x89\x2b\x81\x88\x50\x5c\xdb\x1b\x5d\x3f\x52\x33\xcf\x3f\x8b\xf8\xf0\xcb\x7a\x95\x27\x9a\x5b\xb4\x8b\x5f\xc2\xae\x0a\xaf\x70\xfe\x43\x1c\x26\xf8\xe4\xfd\x89\xbb\x3e\xec\xcb\xc0\x4f\xc5\x1d\xa1\x84\xe2\x06\xad\xbb\xb7\x64\xa2\x48\x8b\x08\x97\x10\x10\x9c\xe1\x7d\x9a\xe3\x5b\xfc\x8e\xb6\xc5\xe7\x51\xc0\x7b\x43\xc2\x71\x49\xcb\xc1\x1d\x97\x64\x1d\xca\xe1\x3c\xe5\x4a\x7a\x30\xb4\x72\xb6\x7a\x34\x35\xed\xaa\x55\xef\xe2\x0f\x3c\xdd\xc6\xd8\x59\xeb\xb3\xef\x59\x29\x78\x74\x06\xa9\x26\x38\x82\x95\xe3\xf3\x7f\x24\x91\xfe\x37\x00\x00\xff\xff\x43\xa3\x15\x02\xc3\x07\x00\x00"

func templatesFactoidListHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesFactoidListHtml,
		"templates/factoid-list.html",
	)
}

func templatesFactoidListHtml() (*asset, error) {
	bytes, err := templatesFactoidListHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/factoid-list.html", size: 1987, mode: os.FileMode(420), modTime: time.Unix(1481245557, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHomeHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x92\x4d\x8b\xdb\x30\x10\x86\xef\xf9\x15\x83\xcf\x69\xd4\xec\xb1\x78\x05\x4b\xa1\x74\xa1\x86\x85\x2e\xbd\x2e\x13\x79\x6c\x4d\x23\x4b\x46\x1a\x3b\x4d\x43\xfe\x7b\x91\xed\x64\x3f\x4a\x6e\x62\x3e\x9e\x79\xe7\xd5\x9c\x4e\x35\x35\xec\x09\x0a\x13\xbc\x90\x97\xe2\x7c\x5e\x95\x35\x8f\x60\x1c\xa6\x74\x3f\x85\x91\x3d\xc5\x42\xaf\x00\x00\xde\xe6\x7a\x6c\xe9\x93\x25\xac\xaf\xd9\xa9\xc2\x6e\xf5\xf7\xd0\x51\xa9\xec\x56\x97\xa9\x43\xe7\x34\x27\x38\x58\x8a\x04\x62\x09\x2c\x61\x14\xe0\x54\xaa\x39\x39\x73\x55\xcd\xa3\x5e\xcd\xef\x5e\x3f\x5b\x4e\xc0\x69\xaa\x3f\xd0\x0e\xd8\x0b\xc5\x06\x0d\x41\x13\x22\x54\x18\x47\xf6\x9b\x52\xf5\x4b\xb3\xbd\xd3\x25\x82\x8d\xd4\xdc\x17\xaa\x41\x23\x81\xeb\x54\xe8\x6f\xcb\xab\x54\xa8\x4b\x65\xef\xf4\x05\xff\x8b\xe9\x00\x29\x0c\xd1\xd0\x1a\x2c\x27\x09\xf1\xb8\x06\xf4\x35\xe0\x50\xb3\x80\x0b\x6d\x9a\x26\x5d\x58\xb7\x66\xe5\xc2\x42\xff\x08\xed\x8d\x19\xc1\xd5\x33\x2c\x34\xd3\x2e\x3f\x1d\x9a\x3d\x18\x8b\xde\x93\x4b\xd0\x63\x92\x29\xbe\xfd\xbc\x87\x8e\x52\xc2\x96\xc0\x71\xc7\xb2\x29\x77\xf1\xd5\xd3\xe7\x00\x63\xc6\xf5\x91\x47\x14\xba\x02\xd6\x70\x0c\x03\x74\x43\x12\xd8\x11\x24\x6e\x3d\xd5\xc0\x1e\x0e\x2c\x76\x9e\x75\x4b\x38\xfb\x91\x85\x52\xa1\x9f\x16\xe4\xd7\x19\x09\x8f\x39\x81\xc2\xc1\xff\xbf\x52\x85\x3e\x0b\x9c\xed\x87\x05\x01\x12\xb2\x8a\xf8\x51\xdc\x1a\x42\x04\xc1\x3d\x01\x42\x3f\xec\x1c\x1b\x77\x04\x1c\x91\x1d\xee\x1c\x2d\xdd\xb9\x19\x3f\x76\xbe\xd7\x5c\x85\x38\x95\x99\xf9\xa6\x2e\x6a\x06\xf7\xe6\xe4\x1c\xe7\x3f\xb8\x6e\xfe\xe8\x25\x62\xee\x69\x49\x16\xcb\x9f\xaa\xe9\x04\xfd\x64\x98\xc5\x31\xab\x32\x21\x46\x32\x79\xd5\x52\x39\x7e\x8f\xbb\x3a\x65\x45\xfa\x2f\x4a\x1d\x78\xcf\x1b\x72\x64\x24\x44\xec\x70\x63\x42\x37\xc5\x54\x85\x7f\xb8\xe3\xbf\xf4\xf2\xd0\x34\x1c\x3b\xaa\x5f\x2a\xfc\x1d\x22\x0b\x67\x77\xab\x87\x2a\xbb\x08\x7d\x70\x8e\x7d\xfb\x3a\xa7\x54\x79\x81\xe5\xea\x4f\x27\xf2\xf5\xf9\xfc\x2f\x00\x00\xff\xff\xef\xcd\xfc\xf5\x8d\x03\x00\x00"

func templatesHomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHomeHtml,
		"templates/home.html",
	)
}

func templatesHomeHtml() (*asset, error) {
	bytes, err := templatesHomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/home.html", size: 909, mode: os.FileMode(420), modTime: time.Unix(1482043355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLogsIndexHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x0c\xb4\x28\x72\xa9\x24\xdb\x59\xa4\x80\x56\x11\x8a\xee\x1e\x5a\x20\x5b\x2c\xba\x6d\x81\x1e\x47\xe2\x48\x62\x43\x91\x02\x49\xc9\x31\x08\xfd\xf7\x82\xfa\x88\x15\xd7\x41\x90\xa0\x5d\xfb\x42\xcd\x90\xef\xbd\x79\x33\x94\x9c\x63\x54\x72\x49\x10\x18\x7b\x14\x64\x82\x61\xd8\xa4\xe3\x32\xdb\x44\x45\x8d\x52\x92\x08\x73\xf5\x10\x16\x4a\x5a\xe4\x92\x34\xb8\x0d\x00\x00\xe3\xa6\x15\x78\x4c\xa0\x14\xf4\xf0\x61\x0c\xf9\x55\x58\x0a\x75\x48\x40\xab\x03\x1c\x34\xb6\x53\xe2\xef\xce\x58\x5e\x1e\x47\x0c\x92\x76\x3a\x13\x1a\x8b\xda\x7e\xd8\x0c\xcf\xf1\x64\xc0\x78\x3f\xb3\x35\xa8\x2b\x2e\x13\xb8\x6e\x67\xae\x29\x10\x6a\x5e\xd5\x36\x81\xdd\xd6\xc7\x5f\x40\x5a\xe3\xe5\x58\xdc\x57\x5a\x75\x92\x85\x85\x12\x4a\x27\xf0\xae\xdc\xfa\xff\x84\x9e\x2b\xcd\x48\x87\x1a\x19\xef\x4c\x02\x37\x0b\x6b\x8b\x8c\x71\x59\x25\xb0\x8d\x76\xed\xc3\x14\x7f\x81\x15\xcf\xfd\xca\x85\x2a\xee\x27\xb8\x03\x67\xb6\xf6\xea\xb7\xdf\x4d\x81\x45\xcb\xcd\xfe\xfa\x3a\xff\xe1\xad\x95\x46\x52\x85\x0d\xea\x9e\xcb\x99\x5b\xb5\x58\x70\x7b\xf4\xb2\x6f\x9e\x12\xed\xf7\xfb\x57\xa0\x2d\xb5\xbc\xf1\x74\xd2\x73\xc3\x2d\xb1\xcb\x28\x69\x3c\x8f\x9d\x73\x24\xd9\x30\x6c\x4e\xa3\x39\xcf\xcd\x38\x9b\xde\xd3\x42\xa0\x31\xb7\xc1\x23\x55\x90\x8d\x80\xeb\x5c\x8b\x15\x85\x35\x21\xf3\xd9\xb4\xde\x65\x1f\x27\x8d\x70\xa7\x2a\x93\xc6\xf5\x2e\x4b\x4d\x83\x42\x64\x3f\x51\x81\x9d\x21\xf8\x2a\xb0\xb8\x87\x56\x53\xc3\xbb\x06\xb8\x81\x9c\x0b\x41\x0c\x5a\xd2\xd0\x19\xd2\x69\x3c\xed\x4f\x63\xc6\xfb\x6c\x33\x11\xd6\xfb\xec\x4b\x97\x0b\x5e\xc0\x0c\xef\xa1\xf7\xff\x56\x73\xd1\xa0\x59\xb5\xff\x39\xa7\x51\x56\x04\xd1\x02\x33\x0c\x8f\xb9\x11\x67\xb4\xe6\x36\x18\xc7\x32\x81\xd0\x39\x41\x12\xa2\xcf\xd4\xe4\xa4\xcd\x30\xac\xa0\x96\x23\x67\x91\xfa\x7d\x96\x22\xd4\x9a\xca\xdb\x20\x16\xaa\x32\xb1\x73\xd1\x2f\x9f\xfc\xd1\x77\xce\x45\xbf\x62\x43\xc3\x90\xc6\x98\xa5\x71\xfd\xfe\xec\x6c\x9b\x39\x17\x7d\xe9\x74\xab\x0c\x45\x7f\xa2\xe8\xc6\xad\xed\xd9\xae\xf8\x09\xe9\xd9\xe3\xd2\xd3\x55\xea\xe4\xa0\xe6\x3d\x5a\xba\x60\xa1\x73\xc0\x4b\x88\xfe\x52\x9d\x9e\x37\x2d\x7b\x20\x5c\xc0\x5e\xe5\x72\x08\xb3\xcf\x97\x20\x5f\xeb\xf9\x42\xeb\x1c\x2f\x41\x2a\x0b\xd1\xcf\x68\x3e\x8f\xb3\x3e\x0c\xab\x2b\x38\x95\xfe\xbf\xb6\xe8\xa2\x84\xb4\xcd\x52\x6a\x32\x3f\xf0\x80\x9a\xc6\x3c\xf6\xc8\x05\xe6\x82\xa0\x54\x1a\x6c\xcd\x0d\xcc\xae\x41\x3e\x5f\x04\x6e\x81\x29\x32\xf2\xca\x42\x8d\x3d\xc1\x8f\x53\x1d\x51\x1a\x53\x93\xf9\xb6\xaf\x7b\xf9\xdf\xce\x08\x90\x64\xa7\xce\x9e\xb2\x3e\x23\x0c\xad\x3b\xe4\x7b\xe9\x67\xe3\x0e\x8f\xaa\xb3\xd1\xa7\x8f\x9d\xd6\x24\xed\x1f\x86\x74\x34\x5e\x65\xbf\x7a\xc4\x9a\x25\xfe\xae\xa0\xe7\x74\x00\x5b\x13\x78\x83\x47\x13\xda\x79\xfc\x66\x1f\xcc\xf7\xb0\x74\xe1\xca\xb9\x05\xff\xab\xff\x56\x4d\xb8\xbf\xdd\x41\xe0\x3f\x1d\xad\x49\x34\x21\x0b\x86\xe1\x2a\xab\x34\x4a\x0b\x58\x14\x64\x8c\xef\x50\xf4\xa4\x74\xaf\x75\xd4\xff\xad\xe4\x18\x5e\x49\xe0\xf2\x19\x25\x2b\x8f\x97\x67\xff\x62\x9d\xec\x9e\x9b\xfb\x4f\x00\x00\x00\xff\xff\xfc\x57\x79\x34\x17\x08\x00\x00"

func templatesLogsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLogsIndexHtml,
		"templates/logs-index.html",
	)
}

func templatesLogsIndexHtml() (*asset, error) {
	bytes, err := templatesLogsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/logs-index.html", size: 2071, mode: os.FileMode(420), modTime: time.Unix(1482044464, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUserManageHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4f\x6b\xdc\x3e\x10\xbd\xe7\x53\x0c\xfe\x1d\x72\xf9\x59\x26\x21\xa7\xa0\x88\x42\x72\x68\x61\xb7\x2c\x4d\x5b\xe8\x71\xd6\x1e\xdb\xa2\xb2\x64\x24\xd9\x6d\x10\xfa\xee\x45\xfe\xb3\xbb\xd9\xee\x25\x50\xb2\xa7\x95\x66\xf4\xe6\xcd\x7b\x33\x0e\xa1\xa2\x5a\x6a\x82\xac\x34\xda\x93\xf6\x59\x8c\x57\xbc\x92\x23\x94\x0a\x9d\x7b\x98\xae\x51\x6a\xb2\x99\xb8\x02\x00\x38\x8d\xf5\xd8\x50\xde\x12\x56\x29\xca\xdb\x1b\xf1\xcd\x91\x85\x9d\x35\xb5\x54\xc4\x8b\xf6\x46\x70\xd7\xa1\x52\x62\x8b\x1a\x1b\x82\xd2\x68\x4d\xa5\x97\x46\x3b\x40\x5d\x81\x32\x0d\x98\xc1\xf3\x62\xce\xe2\x45\x25\x47\x71\x35\x97\x69\x6f\xc5\xb3\xc2\xf2\x27\x2f\xda\xdb\xbf\x2b\x97\x2d\x6a\x4d\x2a\xdf\x9b\xdf\xf9\x39\xc3\xf4\x0b\xc1\xa2\x6e\x08\xd8\xe3\x9c\xe8\x62\x3c\xc4\x26\x1c\xe7\x5f\x14\x3d\x64\xc6\x56\x64\xef\x21\x0f\x41\x91\x06\xb6\xa5\x6e\x4f\xd6\xc5\x78\x02\xb5\x3e\x79\x7d\x33\x73\xbc\x13\x1c\xa1\xb5\x54\x3f\x64\x85\x32\x8d\x2b\x42\x60\x9f\x9e\xd2\xf3\xff\x42\x60\x9f\xb1\xa3\x18\x79\x81\x82\x17\xed\xdd\x85\xf7\xbd\x08\x81\xed\x06\xdb\x1b\x47\xec\x3b\xaa\x61\x4a\xef\xcf\x6a\x17\xaf\x8a\x9f\x1d\x43\x20\x5d\x2d\xcd\x9d\xeb\xb7\xb3\x72\x44\x4f\xb0\x6a\x70\x94\x32\x04\x90\x35\xb0\x1f\x66\xb0\x4b\xd2\x9a\x03\xf9\x0a\xf6\x26\xb5\x73\x58\xf4\xbe\x04\xf9\x56\xed\xd7\xb2\x21\xc8\x1a\xb4\xf1\xc0\x3e\xa2\xdb\xa2\x1d\xa5\x8e\x51\x9b\xbc\x9b\xfe\xae\xad\xbf\x8b\x55\x17\xa9\xf0\x5e\x70\xea\xc4\xc6\x34\x0e\xd0\xd2\x14\xc7\x11\xa5\xc2\xbd\x22\xa8\x8d\x05\xdf\x4a\x07\x8b\x7a\xb0\xa7\x12\x07\x47\x20\x3d\x54\x86\x9c\xbe\xf6\xd0\xe2\x48\xf0\x61\xee\x87\xf1\x82\x3a\x91\xec\x3f\xf5\xf4\xdf\xcf\x0b\x90\xae\x8e\x2e\x1f\xa3\x29\xa2\x1c\xad\x6e\x25\x4f\xd3\x8c\x6c\xf0\xc5\x0c\x9e\x3d\x3d\x0e\xd6\x92\xf6\x69\xc3\xd9\xb4\x98\xd3\xae\x1f\x70\x7a\xf1\xd5\xc0\x28\xe9\x17\xf8\x96\xd2\x62\xbb\x49\x80\x7e\x19\xc1\x45\x03\xf7\x3f\xac\x2e\x5c\x87\xb0\x62\x3f\x7b\xb4\x7e\xc6\xfc\xb2\x81\xac\xb1\x66\xe8\xdd\xbd\x25\xac\xb2\x18\xaf\x45\x63\x51\x7b\xc0\xb2\x24\xe7\x92\x43\xec\xd0\x72\xe2\x38\x71\x7e\x0f\x1a\x4e\x36\x1a\xa4\xbe\xc0\xe0\x44\xcf\xf5\x9c\x3e\xa2\xb3\xb4\x8b\x99\x7f\x02\x00\x00\xff\xff\x5d\xf8\x1a\x40\x68\x05\x00\x00"

func templatesUserManageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesUserManageHtml,
		"templates/user-manage.html",
	)
}

func templatesUserManageHtml() (*asset, error) {
	bytes, err := templatesUserManageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/user-manage.html", size: 1384, mode: os.FileMode(420), modTime: time.Unix(1482050678, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"layout.html":                 layoutHtml,
	"assets/styles.css":           assetsStylesCss,
	"templates/factoid-info.html": templatesFactoidInfoHtml,
	"templates/factoid-list.html": templatesFactoidListHtml,
	"templates/home.html":         templatesHomeHtml,
	"templates/logs-index.html":   templatesLogsIndexHtml,
	"templates/user-manage.html":  templatesUserManageHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"styles.css": &bintree{assetsStylesCss, map[string]*bintree{}},
	}},
	"layout.html": &bintree{layoutHtml, map[string]*bintree{}},
	"templates": &bintree{nil, map[string]*bintree{
		"factoid-info.html": &bintree{templatesFactoidInfoHtml, map[string]*bintree{}},
		"factoid-list.html": &bintree{templatesFactoidListHtml, map[string]*bintree{}},
		"home.html":         &bintree{templatesHomeHtml, map[string]*bintree{}},
		"logs-index.html":   &bintree{templatesLogsIndexHtml, map[string]*bintree{}},
		"user-manage.html":  &bintree{templatesUserManageHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

// Code generated by go-bindata.
// sources:
// layout.html
// assets/styles.css
// templates/factoid-info.html
// templates/factoid-list.html
// templates/home.html
// templates/invite-list.html
// templates/login-altslack.html
// templates/logs-index.html
// templates/user-manage.html
// DO NOT EDIT!

package weblogin

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _layoutHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x57\x5d\x77\xda\x38\x13\xbe\xcf\xaf\x50\xdd\x5e\x24\x27\xaf\xad\x02\x49\x9a\x37\x35\xec\xa1\x81\x7c\x34\x34\x1f\x85\xd2\xdd\xdc\xec\x11\xf6\xd8\x16\xc8\x12\x91\x64\x3e\xd6\xc7\xff\x7d\x8f\x65\x1b\x08\xa5\x6d\xb6\xa7\xbe\xb1\x3c\x33\x7a\x66\x46\xf3\x68\x06\xd2\x14\xf9\x10\x50\x0e\xc8\x62\x64\x29\x12\x6d\xa1\x2c\xdb\x73\x5f\x75\xee\xce\x07\x7f\xdd\x77\x51\xa4\x63\xd6\xda\x73\xab\x17\x10\xbf\xb5\x87\x10\x42\x69\x8a\x46\x4c\x78\x13\x64\x69\xaa\x19\x58\xc8\x41\x59\xe6\x9a\x75\x2b\x4d\x69\x80\x9c\x41\xbe\xce\xb2\x34\x5d\xaf\x80\x29\xc8\xb2\x4f\x44\xce\x28\x47\x5f\x61\x84\xae\xb9\x06\x19\x10\x0f\xd2\x14\xb8\x9f\x65\x2e\xae\x10\x10\x70\x3f\x8f\xe4\xb9\x2f\x1f\x02\x92\x30\x6d\x2b\xbd\x64\xa0\x72\xa7\x76\x69\xe3\x32\xca\x27\x48\x02\x6b\x5a\x85\x32\x02\xd0\x16\x8a\x24\x04\x4d\x2b\xd2\x7a\xaa\xce\x30\xf6\x7c\x3e\x56\x8e\xc7\x44\xe2\x07\x8c\x48\x70\x3c\x11\x63\x32\x26\x0b\xcc\xe8\x48\x61\x3d\xa7\x5a\x83\xb4\x47\x42\x68\xa5\x25\x99\xe2\x86\xd3\x70\x4e\xb0\xa7\x14\x5e\xc9\x9c\x98\x72\xc7\x53\xca\x32\x6e\x8b\x87\x72\x0d\xa1\xa4\x7a\xd9\xb4\x54\x44\x1a\xa7\x47\x76\xed\xe9\x34\x1e\x7c\xbc\x6b\xf7\x17\xa7\xe3\x5a\x3b\x39\x24\xc7\x5f\x3b\x43\x7e\x4f\xeb\x6c\x72\x11\xcc\xe7\xdd\x36\x39\x8d\x3a\x1d\x7f\xfc\xc8\xa6\x3d\x08\x17\xd1\x78\xf8\xa9\x5b\x0b\xc2\xf1\xd7\xfb\xcb\x78\xf2\x8f\x7a\x67\x21\x4f\x0a\xa5\x84\xa4\x21\xe5\x4d\x8b\x70\xc1\x97\xb1\x48\x94\xd5\xfa\x6d\xd9\x06\x82\x6b\x9b\xcc\x41\x89\x18\xf0\x91\xf3\xce\x79\x6b\x12\xdd\x14\xbf\x2c\xd7\xf9\x2c\xf8\x73\xfa\x34\x7d\x7c\x1c\x3e\x5c\xde\x9c\x0c\xda\xd1\xf1\xfd\x90\x5d\xde\x05\x0f\xb7\x57\x7d\xd1\xa9\x2f\x46\xdd\xc3\x87\xc9\xfd\xe2\xbc\x7d\xc1\x6e\xbb\x30\x13\xdd\xab\x46\x9f\xbd\x55\x74\x34\xf4\xee\x1e\x86\xfc\xf6\x67\xb9\x2a\x4f\xd2\xa9\x46\x4a\x7a\x2f\xce\x6d\xfc\x94\x80\x5c\xe2\xba\x53\x77\x1a\xe5\x87\xc9\x65\xfc\x93\x54\xae\x4f\x2e\x8e\xef\x6e\xba\xe7\xbd\xa1\xbe\xc1\x1f\x7a\x87\xa7\xb4\xdf\xeb\x74\xaf\xc4\xbc\xdf\x0e\xbe\x88\x77\x27\x8f\xbd\xff\x1f\x4e\x2e\xdb\xe1\xe0\xb3\x4f\x3f\x2c\xaf\x6f\x6f\x3e\x92\xa7\xc1\xfd\x15\x7e\x18\xde\xf6\x6b\xc3\xce\xe8\xfb\xa9\xb8\xb8\x48\x63\xb3\x7e\xcf\xcb\x95\x1f\xbc\x72\x42\x21\x42\x06\x64\x4a\x95\x49\xc9\x53\xea\x8f\x80\xc4\x94\x2d\x9b\x6d\x06\xa1\x84\x25\x39\xec\x13\xae\x0e\xfb\xe7\xd6\xb7\xf5\xff\x75\xce\x60\xa2\x14\x68\x85\x0b\x8d\xa9\x79\x75\xcf\xed\xdd\x57\x71\x7d\x05\xf3\x9b\x5d\xd9\xb8\x55\x96\x41\xc2\x3d\x4d\x05\x47\x21\xe8\xf3\xfe\xe7\x8b\x81\x98\x00\xdf\x3f\x40\xa9\x81\x91\xa0\x13\xc9\x51\x00\xda\x8b\xf6\x2d\xac\x40\x29\x2a\x38\xf6\x94\x0c\x9c\xb1\x12\xdc\x3a\x70\x56\x75\xd2\x11\xf0\xfd\x0a\x6e\x5f\x82\x9a\x1e\xa0\xb4\x42\xc8\x3f\xcd\x8e\xfd\x83\xf7\x28\xfb\x4f\xbb\x74\x1e\x51\xbe\xe9\xfd\x5e\xb6\xb7\x2e\x8f\x8b\x8b\x26\xe7\x8e\x84\xbf\x6c\xed\xad\x13\xe6\x64\x36\x22\xb2\xea\x39\x2e\x27\x33\xe4\x31\xa2\x54\xb3\xd4\xa0\xe2\x65\x53\x3e\x03\xa9\xa0\x3a\x75\x9f\xae\xec\x3c\xc1\x35\xa1\x1c\xa4\x1d\xb0\x84\xfa\x3b\x2c\x4a\x88\x3c\x02\x90\xa5\xde\xd8\x90\x2d\x8b\x91\x24\xdc\x5f\x15\xcf\x6a\x15\x3d\xd5\xc5\xa4\xc4\xc4\x3e\x9d\x6d\xc0\x53\xbf\xb9\x8a\x7f\x15\x0c\x63\x64\xaa\xa0\x0a\xbb\xfa\xde\xf4\x9a\xb0\x0d\xb7\x95\x21\x27\xb3\x0d\x9b\x34\x45\x73\xaa\xa3\x8a\x06\x6f\xbc\x44\x4a\xe0\x1a\x9d\x35\x91\x73\x6b\x36\x9c\x97\x12\xa3\x97\x84\x87\x50\x69\xae\x35\xc4\xaa\x62\xd6\x06\x20\x0d\x10\x3c\xe5\x46\x31\xac\x01\xed\x2d\x3b\x97\xd1\x2a\x38\xe2\x69\x3a\x03\xab\xe5\x92\xf2\x40\xd2\xd4\xf9\xf2\xb9\x97\x65\x56\x2b\x4d\x0d\x4c\x3e\x59\x48\xcb\xc5\x8c\xb6\xb6\x9c\xd9\x28\x1f\x4a\xbb\xd0\x7f\x15\x6e\x7d\x59\xca\x74\x0a\xc9\xf3\x91\x56\x14\x29\x61\x2f\x38\xec\x6a\x29\x69\x18\x69\x6b\xdb\x61\x7e\x58\x4e\x9f\x11\x6f\xf2\x45\x81\xdc\x99\xc7\x33\x81\x11\xd2\x38\x44\x11\xe4\x78\x4d\xab\x51\xb7\xd0\x9c\xfa\x3a\x2a\x96\xa6\xcb\xa6\xe9\x1a\xd2\x69\xcf\x88\x26\x12\x35\xea\x59\x66\x7d\x03\x65\x1e\x25\x3d\x05\xfa\xfb\xdb\x50\x6d\xf1\x3f\xb4\x4b\x79\x72\x94\x65\xa8\xfe\x1d\x65\xad\x7e\x9a\x65\xe8\x68\x61\x21\xbc\x23\x85\xaa\x36\xaf\xad\x96\xbb\x22\x42\x40\x50\x40\x6c\x95\x23\xe5\x1d\x97\xb6\x72\xe0\x4e\x49\x40\x83\x6d\xbc\xac\x4b\xf8\xfc\xac\x7e\x9d\x1e\x7d\x4d\xa4\x2e\x32\x28\x88\xf2\xa3\x98\x8c\x1d\xea\x89\x10\x5d\xf3\x1f\xf2\x68\x07\xe3\x4d\xd7\x35\x97\x57\xc8\xb3\xd7\xbe\xef\xbf\x9f\x12\xdf\xa7\x3c\xb4\xb5\x98\x9e\xd5\x8e\xa7\x8b\x95\x60\x24\xb4\x16\x71\x21\x8b\x89\x0c\x29\x2f\x28\x54\x48\xbe\x0d\x91\x48\x29\xe6\xca\x8e\x8a\x28\x77\x05\x65\xb8\xf6\xec\x38\xaf\xb9\x96\xa4\x27\x42\xca\x5f\xc8\xbc\x57\xb6\x8d\x06\x11\x55\x28\xce\x43\x41\x23\x40\x73\x29\x78\x88\x6c\xfb\x05\x34\xdd\xfe\x05\xe0\xd0\xdc\xbd\x73\x54\x77\x02\x89\x13\x05\x52\xe1\x18\x7c\x9a\xc4\x7f\x6f\x97\x7d\x1d\x67\x96\x39\xe3\x29\x84\x3f\x25\xd5\x8f\x10\x7e\x3b\x73\x0c\x78\xc9\x1c\xb3\x7e\x09\x3b\x76\xb7\x92\xcd\xce\x5f\x2c\x5d\xcc\xc9\x2c\x1f\x64\xab\x5d\x55\xcf\x7e\x13\x32\x31\x22\xcc\xf4\xea\xa2\x43\x95\xa3\x2e\x1f\x54\xc0\xb5\x85\x9c\x0f\xc2\x5f\x76\x88\x26\x66\xb6\x47\xb5\xd6\x27\xaa\x14\xe5\x21\x2a\x2d\x5e\xb9\x38\xaa\x99\x21\xb9\xdd\xe4\x5c\x5c\xcc\x4f\x17\x17\x7f\x1d\x56\x9a\x7f\x03\x00\x00\xff\xff\x68\xc4\x05\x6b\x71\x0c\x00\x00"

func layoutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_layoutHtml,
		"layout.html",
	)
}

func layoutHtml() (*asset, error) {
	bytes, err := layoutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layout.html", size: 3185, mode: os.FileMode(436), modTime: time.Unix(1482974236, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsStylesCss = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xd1\x6e\xd3\x30\x14\x7d\xef\x57\x5c\x6d\x0f\x93\xba\xa5\x4d\xbb\x6e\x94\x4c\x4c\x1a\x05\x09\x24\xc4\x03\x9b\x78\x41\x3c\xdc\xd8\x37\x89\x35\xc7\x37\xb3\x9d\x75\x05\xed\xdf\x91\x9d\xb4\x2b\xa5\x9d\x78\x8c\x7d\xcf\xb9\xc7\xe7\x9c\x8c\x87\xf0\x89\x50\x92\x85\xe1\x78\x90\xb3\x5c\xc1\xef\x01\x00\x40\x8e\xe2\xbe\xb4\xdc\x1a\x99\x08\xd6\x6c\x33\x38\x2e\xa8\x10\x85\xb8\x1a\x3c\x0f\x46\x06\x1f\x73\xb4\x89\xc1\xc7\x6b\xad\xae\x55\x5d\xfe\xa8\x48\x95\x95\x7f\x77\x74\x3e\x3d\xfa\xd9\x53\xd4\x68\x4b\x65\x12\x1b\x2e\x32\xb8\x68\x9e\xae\xe2\xb1\x54\xae\xd1\xb8\xca\x40\x19\xad\x0c\x25\xb9\x66\x71\xff\x3f\xac\xa7\x80\x3d\xf3\x01\x8a\x70\xd5\xa0\x94\xca\x94\x89\xa6\xc2\x67\x90\x5e\x6d\x2b\xe9\xce\xa2\x90\xe7\xc1\x78\x08\x77\xdc\x00\x17\x20\xd8\x78\x32\x3e\x18\x30\x6a\xb0\xa4\xa4\xea\x0c\xa9\x26\xaf\xaf\x7b\xfe\x7b\xdc\xd5\xa8\x75\x8f\x28\xd8\xf8\xc4\xa9\x5f\x94\xc1\x64\xbe\x7e\xf8\xda\xc7\xf9\x7c\xbe\x47\xd6\x66\x2c\x62\x0b\xac\x95\x5e\x65\x70\x72\xa3\xa9\xb4\xb4\x42\xb8\x45\xe3\xe0\x76\x71\x72\x06\x0e\x8d\x4b\x1c\x59\x55\x04\x0d\xe1\x21\xb7\x24\xbc\x62\x93\xc1\x02\xb5\xe6\xd6\xbb\x40\xf4\x9e\xd9\x3b\x6f\xb1\x81\x0f\x2c\xe2\xc9\x82\x9b\x55\x4c\x03\xa6\xe9\x64\x92\x4c\xd3\xc9\x25\xdc\x2d\x95\xf7\x64\xcf\xe0\xb3\x11\xa3\x30\xf4\x45\x09\x32\x8e\x32\x58\x2c\xe0\xc6\x7b\xab\xf2\x36\x70\xc3\xf9\x28\x0d\x0e\x0d\xc6\xc3\x01\x0c\xb7\x16\xc5\xcf\xaf\xec\xe1\xa1\x55\x9e\x00\x35\x59\xef\xce\x20\x6f\x3d\x88\xd6\x79\xae\x01\x8d\x84\x8a\x74\x53\xb4\x1a\x0c\x7b\x72\x50\xb0\x85\x82\xf5\xbd\x03\x4b\x18\xe2\x02\x5f\x11\x48\x16\x6e\x14\xd8\xbe\xd1\x43\xab\x2c\x39\x40\xc8\xd1\x51\x24\xa8\x59\xaa\x42\x91\x05\xa1\xd1\xc5\xb1\xa8\x05\x16\x5c\xd7\x6c\xc0\xf9\x95\xee\x89\x43\x0a\x7e\xd5\x90\x8b\x81\xe6\x2e\x11\x9d\xd6\x18\x4d\x5f\x8f\x0c\xa6\x69\xe7\x77\x97\x41\xf7\xdd\xd5\x25\x67\x2b\xc9\x66\x30\x69\x9e\xc0\xb1\x56\x12\x8e\x89\xe8\xe5\x26\xe6\x95\x2c\x95\xf4\xd5\xa6\xd5\xfd\x8d\x45\xa9\x5a\x97\xc1\x79\x57\xb1\xed\xe5\xd5\x2c\xee\xef\x23\xf7\xdc\xf4\xe5\xec\x0f\x72\xf6\x9e\xeb\x4d\x39\xb7\x91\x4d\xa6\xd1\xf9\x44\x54\x4a\xcb\x6d\x8e\x35\x24\xdd\x05\x08\x96\x14\x07\xf7\xab\x8a\xcd\x0f\x2d\x20\x03\x6d\x03\xae\x41\x41\x90\x93\x5f\x12\x19\xa8\x5b\xed\x55\xa3\x09\x7a\xb2\x7f\x4c\x3c\x85\x5d\x4b\xb7\x9f\x94\x5c\xbc\xec\xf8\x8e\x56\x61\xa8\xce\x2e\x47\x22\xd1\x94\x64\xb7\x25\x46\x4b\xd7\xff\x87\xa0\xd9\x7c\x36\xdb\x79\xd5\x1a\xd4\xfb\xf8\xfa\xec\x12\xad\x09\xad\x3a\xb4\x01\xf1\xf2\x4d\x3a\x3f\x84\xda\x59\xb1\x7f\x58\x99\x82\x0f\xf2\x4f\xf2\x79\xfa\x96\xf6\x42\x76\xc8\x5f\x26\xc7\x43\xf8\x68\xe4\xe6\xc7\x82\xe1\xf8\x4f\x00\x00\x00\xff\xff\xe4\x31\x71\x04\x9b\x05\x00\x00"

func assetsStylesCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsStylesCss,
		"assets/styles.css",
	)
}

func assetsStylesCss() (*asset, error) {
	bytes, err := assetsStylesCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/styles.css", size: 1435, mode: os.FileMode(436), modTime: time.Unix(1481510073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFactoidInfoHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x83\xd9\xeb\xda\xe4\x1a\xb4\x62\x61\x61\xa1\x50\x7a\x68\xd3\x73\x19\xa4\x97\x5a\xd4\x96\x8d\xa4\x24\x84\x41\xff\xbd\x44\x56\x92\xb6\xbe\x78\xf4\xe6\x7b\xe8\xf1\x24\x62\xb1\x77\x1e\xd4\xc6\x74\x1e\x11\xdb\x9c\x1b\x55\x46\xdd\x34\xaa\xaf\x93\x08\xbc\xcd\xb9\xb9\xd3\x66\xf6\x09\x3e\x15\xdc\xba\x23\x99\x91\x63\xfc\x53\x64\x76\x1e\xa1\xbd\x98\x4e\x2e\x0d\xd4\xfd\x67\x93\x66\x67\x7f\x90\x0b\xbf\xe3\xf7\x00\xb6\x85\x25\x22\x52\xc3\x46\x57\x76\x4b\x22\x57\xdf\x13\x4f\xc8\x59\xf5\xc3\x46\x37\xaa\xb7\xee\xa8\x9b\x15\x5f\xf4\xe3\x6c\x3e\x50\x60\xb7\xa7\xee\x21\xae\xe7\x9c\xcf\x88\x22\x18\x23\x72\xf6\x73\xcd\xae\xfa\x45\xdf\x7c\x1c\x13\xc1\xba\xb4\xa5\xbf\x35\xe5\x21\x22\xd0\xaf\x6e\x07\x9e\xa8\xbb\xec\x5f\x23\x42\xce\x22\xdd\x7a\xff\xb5\x01\xaa\x9f\xf3\x24\x62\x06\xf6\x1e\xe3\x9b\xe7\x09\xdf\xcc\xff\xd6\xc5\x17\x9e\x13\x89\x04\x8c\xc9\x4d\x58\x99\x9d\x9b\x10\x13\x4f\x4b\xcd\x56\xc3\x05\x5c\x1b\x8a\xf3\x21\x18\xb4\x5a\x99\xd9\x42\x8b\x74\xcf\x7c\x7a\x29\xda\xc5\x51\x44\xd5\x2f\x01\xb7\x5a\xee\xaf\x54\xfe\x9f\x01\x00\x00\xff\xff\xf6\x34\xd0\xe9\xdb\x01\x00\x00"

func templatesFactoidInfoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesFactoidInfoHtml,
		"templates/factoid-info.html",
	)
}

func templatesFactoidInfoHtml() (*asset, error) {
	bytes, err := templatesFactoidInfoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/factoid-info.html", size: 475, mode: os.FileMode(436), modTime: time.Unix(1481510073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFactoidListHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x55\x4d\x6f\xdc\x36\x10\xbd\xeb\x57\x4c\x16\x45\xd0\x02\x2b\xa9\xf9\x38\x39\x8c\x90\x20\x40\x01\x03\x4e\x0f\xb5\x8d\xa2\xa7\x78\x56\x1a\x49\xac\xf9\xa1\x92\xd4\xae\x05\x42\xff\xbd\x20\x45\xad\xb5\x75\x72\xe9\x4d\x1a\xce\xcc\x7b\xf3\xe6\x89\xf2\xbe\xa1\x96\x2b\x82\x9d\x75\x93\x20\xbb\x9b\xe7\x8c\xc5\xc7\x2a\x1b\x45\xd1\x62\xed\x34\x6f\x72\xc1\xad\x03\x9f\x01\x00\x0c\xd8\x34\x5c\x75\x57\xf0\xeb\x87\x6c\x7e\x91\x23\x78\x4a\x0b\x6f\x79\x6c\x74\x05\x4a\x2b\xfa\x10\xa3\x12\x4d\xc7\x55\x2e\xa8\x75\x57\xf0\x76\x78\xba\x88\x1a\xde\xf5\x6b\x78\xce\x5e\xf4\x2d\x04\x5a\x97\x4b\xdd\xf0\x96\x53\x93\x60\x5a\xa1\xd1\x5d\x41\x2c\x0d\x55\xac\x4c\xe4\xbd\x27\xd5\xcc\x73\xf6\x3c\x60\xad\x95\x23\xe5\xe2\x84\x0d\x3f\x42\x2d\xd0\xda\x8f\x31\x8c\x5c\x91\xd9\x55\x17\xf1\x01\x3b\xca\x7b\xc2\x26\x9e\x04\x2c\xd6\xbf\xa9\x7e\x5b\x48\x59\x56\xf6\x6f\x2a\x66\x25\x0a\x51\x7d\x86\x13\x4e\xe0\x34\x58\xa7\x0d\x01\xaa\x06\x0c\x39\xc3\xe9\x48\xe0\xe8\xc9\xb1\x72\xc9\xcb\x58\xd9\xf0\xe3\x25\xca\xc1\xe6\x35\x0a\xa1\x47\x07\xcf\x8f\x39\x57\xad\x3e\x83\xbe\xaf\xee\x2d\x57\x1d\x6c\xa0\xdf\xa7\xb3\xa1\xba\xc5\x09\x58\xad\x1b\xaa\x5e\x25\xbd\x14\x4a\x62\x65\x0c\x01\x57\x80\x6a\x82\xba\x47\xa5\x48\xc0\xa9\x27\x43\xf0\x15\xcd\x91\x2b\xe0\x36\x50\x36\xa3\x02\x84\x54\x5a\xc0\x75\x0b\xae\xa7\xf5\x1d\x1c\x3e\x92\x05\x34\xdd\x28\x49\x39\xbb\x5f\x0c\x60\xf4\x91\x37\x14\x12\x25\x60\xeb\xc8\xc4\x9a\x80\xbb\x07\x3b\x60\x4d\xb9\xa5\x01\x0d\x3a\x6a\x0a\xb8\xeb\x69\x25\xb8\xb2\x62\x24\x2b\x39\x5a\xc7\x4a\x92\x15\x1c\x08\xd0\xc5\x0e\x47\x32\x13\x1c\xa8\xe3\x4a\x85\x79\x75\xe4\xb2\x18\x84\xac\xc5\x8e\x42\x37\x6e\x03\x73\x14\x56\x43\x50\x8b\x1a\x40\x38\xa0\xea\xf2\x75\x06\x56\x0e\x67\x75\xfe\xd2\x23\xd4\xa8\x96\xf4\x8b\x51\xe1\x30\x81\xc5\x29\xe0\x2c\xec\x3e\xc9\x45\x96\xf5\xbc\x23\x07\x2f\x15\x2d\xe0\xb3\x85\x03\xb5\xda\xd0\xfe\x2c\xc4\x59\x9f\x08\x8b\x16\x94\x36\x12\xc5\xc2\xe4\xff\xee\xfc\x4f\xc3\xdd\x0f\xb7\x7e\x6f\xa3\xfc\xff\xa1\x6e\x48\x92\x3c\x90\xd9\xf2\x86\xe4\xfa\x55\xfb\x5a\x4b\x19\x0c\x1a\xdc\x4a\x6e\xb3\xfa\xad\x6c\xd7\x2d\x4c\x7a\x04\x45\xd4\x5c\xd8\x21\xf5\x0a\xc5\xe9\xab\x01\x45\x27\xc1\x15\xd9\x3d\x34\x1a\x5c\xcf\xed\xd5\x32\xf5\x60\xa8\xfa\x01\x3b\x7a\x42\x39\x08\x82\xd7\x6f\xb2\x87\x87\x87\xec\xeb\x28\x1c\x0f\x3d\xb2\x2f\x4b\xfb\x10\x4d\x74\x59\x19\xfa\x7c\x8f\x96\x0c\x55\xa1\x8b\x5c\xcb\x61\x40\xe3\xec\x1e\xfe\x1e\xad\x03\x6c\x82\x2f\x5e\xbf\x4d\x8e\x39\x69\xf3\x68\xa1\xd5\x06\x50\x88\x55\x03\x1b\x3e\x8f\xf4\x31\xe4\x70\x18\x1d\x28\xed\x42\x52\xc4\xdb\x7a\xca\xee\xc3\x56\x5d\x4f\x13\xa0\x38\xe1\x64\x61\x4c\x0b\x20\xe5\xb8\xa1\xd5\x9f\xaf\xb6\x1b\xcf\x58\xff\x6e\xbd\x2e\xe0\x86\x07\xbb\xf7\xef\xaa\x8c\x8d\x62\xf5\xc1\xf6\x82\xdb\x85\x1b\x0b\x0c\xaa\x8e\xa0\x08\xd9\x30\xcf\x19\x00\x13\xbc\x62\x08\xbd\xa1\xf6\xe3\xae\x5c\xe9\x94\xde\xf3\x16\xe8\x1f\x28\x6e\x6b\x3d\xd0\x97\xf4\x79\xef\x76\xf3\xfc\xcd\x7b\x12\x96\xe6\xd9\xfb\x8b\xc3\x10\x88\x17\x62\xe9\x7d\x91\x58\xfd\x8e\x92\xe6\x39\x79\x0e\x92\x99\xbc\x87\xed\x39\xcc\x73\xda\x45\xc4\x54\xf4\x1d\x4c\x66\x07\x54\xeb\x50\xdc\xe6\xe9\xba\xc9\xb5\x12\xd3\xae\x7a\x41\x84\x95\x21\xbf\x4a\x7c\x58\x89\x2b\x81\x88\x50\x5c\xdb\x1b\x5d\x3f\x52\x33\xcf\x3f\x8b\xf8\xf0\xcb\x7a\x95\x27\x9a\x5b\xb4\x8b\x5f\xc2\xae\x0a\xaf\x70\xfe\x43\x1c\x26\xf8\xe4\xfd\x89\xbb\x3e\xec\xcb\xc0\x4f\xc5\x1d\xa1\x84\xe2\x06\xad\xbb\xb7\x64\xa2\x48\x8b\x08\x97\x10\x10\x9c\xe1\x7d\x9a\xe3\x5b\xfc\x8e\xb6\xc5\xe7\x51\xc0\x7b\x43\xc2\x71\x49\xcb\xc1\x1d\x97\x64\x1d\xca\xe1\x3c\xe5\x4a\x7a\x30\xb4\x72\xb6\x7a\x34\x35\xed\xaa\x55\xef\xe2\x0f\x3c\xdd\xc6\xd8\x59\xeb\xb3\xef\x59\x29\x78\x74\x06\xa9\x26\x38\x82\x95\xe3\xf3\x7f\x24\x91\xfe\x37\x00\x00\xff\xff\x43\xa3\x15\x02\xc3\x07\x00\x00"

func templatesFactoidListHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesFactoidListHtml,
		"templates/factoid-list.html",
	)
}

func templatesFactoidListHtml() (*asset, error) {
	bytes, err := templatesFactoidListHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/factoid-list.html", size: 1987, mode: os.FileMode(436), modTime: time.Unix(1481510073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHomeHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x92\x41\x6b\x1b\x31\x10\x85\xef\xf9\x15\xd3\x3d\xa7\x56\x9d\x63\x51\x04\xa1\x50\x1a\xe8\x42\x20\xa1\xd7\x30\x96\x66\x57\x13\x6b\xa5\x45\xd2\xae\x9b\x1a\xff\xf7\x22\xad\xed\x24\x04\xdf\x84\x66\xf4\xbd\x79\x4f\xb3\xdf\x1b\xea\xd8\x13\x34\x3a\xf8\x4c\x3e\x37\x87\xc3\x95\x34\x3c\x83\x76\x98\xd2\x6d\xbd\x46\xf6\x14\x1b\x75\x05\x00\xf0\xbe\x36\x62\x4f\x5f\x2d\xa1\x39\x57\x6b\x87\x5d\xab\x5f\x61\x20\x29\xec\x5a\xc9\x34\xa0\x73\x8a\x13\xec\x2c\x45\x82\x6c\x09\x2c\x61\xcc\xc0\x49\x8a\xa5\xb8\x70\x85\xe1\x59\x5d\x2d\xe7\x51\x3d\x59\x4e\xc0\xa9\xf6\xef\x68\x03\xec\x33\xc5\x0e\x35\x41\x17\x22\xb4\x18\x67\xf6\x2b\x29\xc6\xe3\x63\x7b\xa3\x24\x82\x8d\xd4\xdd\x36\xa2\x43\x9d\x03\x9b\xd4\xa8\x9f\xc7\x93\x14\xa8\xa4\xb0\x37\xea\x84\xff\xc3\xb4\x83\x14\xa6\xa8\xe9\x1a\x2c\xa7\x1c\xe2\xeb\x35\xa0\x37\x80\x93\xe1\x0c\x2e\xf4\xa9\x2a\x9d\x58\x97\xb4\x4a\x63\xa3\x7e\x87\xfe\x82\x46\x70\x66\x81\x85\xae\x7a\x79\x74\xa8\xb7\xa0\x2d\x7a\x4f\x2e\xc1\x88\x29\xd7\xfb\xf5\xb7\x2d\x0c\x94\x12\xf6\x04\x8e\x07\xce\x2b\xb9\x89\x6f\x99\x3e\x05\x98\x0b\x6e\x8c\x3c\x63\xa6\x33\xe0\x1a\x5e\xc3\x04\xc3\x94\x32\x6c\x08\x12\xf7\x9e\x0c\xb0\x87\x1d\x67\xbb\x68\x5d\x1a\x9c\xfd\xcc\x99\x52\xa3\x1e\x8e\xc8\x1f\x0b\x12\xee\x4b\x01\x33\x07\xff\xd9\xd2\x23\x39\xd2\xb9\xe6\xf4\x12\xd8\x43\x33\x4e\x1b\xc7\xba\xf9\x34\x17\x94\xcf\xfe\xf2\x41\xba\x0d\xe5\xfb\x03\xe8\x65\x35\x4e\xd0\xc9\xbd\xdb\x1c\xc7\x25\xca\xb3\x81\x7b\x9f\x23\x96\x37\x3d\xe5\x63\x72\x0f\x6d\xdd\x24\x5f\x7d\x5b\x9c\x09\x10\x74\x88\x91\x74\x99\x58\x0a\xc7\x1f\x71\x67\xc3\x36\xe7\xf1\xbb\x10\x3b\xde\xf2\xaa\xba\x08\x11\x07\x5c\xe9\x30\xd4\x3b\xd1\xe2\x5f\x1e\xf8\x1f\x3d\xdf\x75\x1d\xc7\x81\xcc\x73\x8b\x2f\x21\x72\xe6\x12\x52\x7b\xd7\x96\x30\x60\x0c\xce\xb1\xef\xdf\x74\xa4\x28\x06\x8e\xcb\xbb\xdf\x93\x37\x87\xc3\xff\x00\x00\x00\xff\xff\x76\xc3\x87\x61\x54\x03\x00\x00"

func templatesHomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHomeHtml,
		"templates/home.html",
	)
}

func templatesHomeHtml() (*asset, error) {
	bytes, err := templatesHomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/home.html", size: 852, mode: os.FileMode(436), modTime: time.Unix(1482217354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesInviteListHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x57\xef\x6e\xdb\x36\x10\xff\xee\xa7\xb8\xaa\x01\x2c\x63\x91\xdc\x2c\xdb\x30\xf8\x1f\xd6\xa5\x2d\x9a\x21\xeb\x8a\x26\xc5\x06\x0c\xfb\x70\x11\x4f\x12\x63\x9a\x14\x48\xda\x49\x26\x08\xd8\xd3\xec\xc1\xf6\x24\x03\x29\xc9\x96\x1d\x27\x75\x51\x34\x40\x22\x89\xbc\xfb\xdd\xef\xfe\x92\x29\x4b\x46\x29\x97\x04\x81\xb1\xf7\x82\x4c\x50\x55\xbd\x89\x7f\x9d\xf5\x00\x00\xe2\x45\x94\xe4\x28\x25\x09\x28\xfd\x82\xfb\x59\xa0\xce\xb8\x8c\x34\xcf\x72\x3b\x82\x17\xe3\xdd\x0d\x41\xe9\xf6\xfa\x35\x26\xf3\x4c\xab\xa5\x64\x51\xa2\x84\xd2\x23\x78\xce\x18\xeb\xec\x2b\xcd\x48\x8f\xe0\xa4\xb8\x03\x2e\x0d\x59\x78\x7e\x7a\x7a\xba\xbb\x1f\x69\x64\x7c\x69\x46\xf0\x43\x71\xe7\x7f\x5f\xb4\x36\xaa\x1d\xae\xd1\xad\xc6\xa2\x43\xb8\x50\x86\x5b\xae\xe4\x08\x34\x09\xb4\x7c\x45\x1b\xec\x02\x19\xe3\x32\x1b\xc1\xc9\xf7\xc5\xdd\x7e\x38\xc8\x4f\x1f\x7a\x6f\x55\xb1\xe5\x63\xaa\xa4\x8d\x0c\xff\x9b\x46\xf0\xed\x77\x3b\x48\x37\x8a\xcb\xe8\xda\xca\xbd\x94\xf0\xda\x28\xb1\xb4\x1d\x4a\x1e\xfa\x44\xd3\x62\xb3\xd4\xc4\x7a\xc3\xd1\xcb\xd1\x9d\x8d\xac\x46\x69\x52\xa5\x17\x23\x10\xea\x96\x74\x82\x86\x1e\x71\x23\x5e\x90\xc5\x0e\x87\x9a\xb2\x4b\xf6\x08\xb8\x45\xc1\x93\xc7\x15\x8d\xc1\x8c\x1e\xe8\x7a\x77\x4f\x7e\xdc\xb8\x3b\x19\x36\xc5\x53\x96\x24\x59\x55\xf5\x36\x05\x96\x28\x69\x49\x5a\x5f\x61\x8c\xaf\x20\x11\x68\xcc\xd4\x2f\x23\x97\xa4\x83\xd9\xd6\x7a\x81\x19\x45\x39\x21\xf3\x3b\x0e\x7d\x92\x9f\xcc\xde\x6b\xbe\x42\x4b\x70\x56\x33\x33\x93\x61\x7e\x32\x9b\x98\x05\x0a\x31\xfb\x45\x71\x09\xcb\x02\x72\xd2\xf4\x6c\x32\xac\x17\x7b\x93\x21\xe3\xab\x59\xaf\x37\x31\x94\xb8\x80\xd7\x58\x65\x09\x1a\x65\x46\x10\xb7\x48\x50\xd5\x6e\x77\x39\x6c\x22\x90\xa0\x66\xfe\x4f\x74\x2d\x54\x32\x0f\x80\xa1\xc5\x88\xb3\x69\x50\x96\xf1\xf9\xab\xaa\x6a\x38\x3e\x8a\xe0\x4b\xb2\x2b\x94\x9f\xce\xca\x32\x7e\x87\x0b\xaa\xaa\xc9\x30\x3f\xed\x6c\x99\x02\x65\x0b\xd0\x96\x4e\x47\xb5\x2c\x81\xa7\x70\x14\xbf\x53\xf6\x42\x65\x19\xb1\x73\x09\x51\xc3\x7e\x8d\x81\x2d\x80\x2b\xbb\x6b\x2b\x23\x46\x29\x2e\x85\x6d\x99\x4b\x4b\x1a\x13\x3b\x0d\x4e\x82\xd9\x85\xca\xe0\x5c\xc2\x1b\xae\x8d\x9d\x0c\xb1\x6b\x29\x02\x12\x86\xb6\xe0\xdd\x22\x4f\x01\x25\x83\xa3\xf8\x2d\xae\xc8\xc5\xfd\x15\x5a\x84\xf8\xe5\x0a\xb9\xc0\x6b\x41\x07\xf0\x29\x34\x5f\xa0\xbe\xdf\xc7\x67\xc2\x5b\xe1\x14\x21\xc5\xc8\x08\x4c\xe6\xc1\x6c\x32\xe4\x33\xf0\x49\x6e\x72\x76\x30\xd7\x1d\x9e\x07\x93\x03\xc6\x8d\x73\x87\x05\xb3\x97\x42\x13\xb2\x7b\x6f\x9f\xd8\xa7\x2d\xef\xc7\xbd\x45\x2d\xb9\xcc\xf6\x39\x7d\x96\x53\x32\x87\x37\xc8\x05\x31\x88\xe0\xa9\x18\x9c\x09\x9e\xcc\xc1\x2a\x4f\xe6\x21\x15\xc9\x1e\xc4\xe0\xb1\xb5\xce\xd2\x64\xe8\xca\xae\x53\x85\xc5\xba\x86\xc9\x62\x30\xfb\xa9\x2c\xe3\x8f\x86\x74\x5d\xb1\x90\x68\x42\x4b\x0c\xb8\x5c\x71\x4b\xa0\x24\x94\xa5\x26\x61\xf9\x82\x20\xbe\xe2\x0b\x32\x16\x17\x85\x2b\xed\x62\x3f\xa6\x1f\x28\x81\xeb\x81\x2b\xba\xb3\xbb\x82\x75\xd3\xee\xbc\x96\x65\x4b\x7a\x32\x5c\x77\x73\xb3\xef\x9b\xce\xf5\x63\x21\x30\xa1\x5c\x09\x46\xda\x04\xe0\xa7\xd1\x34\x60\xdc\x14\x02\xef\x47\x52\x49\x6a\xa7\xc9\x1e\x85\xc8\x77\x1b\xb6\x55\xdc\x6d\xd7\xaf\x5a\xbf\x5d\x77\x1f\xa5\x25\x54\xc6\xe5\x93\x94\x3e\xb7\xc5\x0f\x32\x5b\x90\x74\xe7\xe3\x21\x86\x3b\xed\xf2\x20\x04\x05\x97\xed\xd3\xcf\x7a\x1f\x8c\xdf\x95\x9e\x73\x99\xfd\xf7\xcf\xbf\x9f\xc7\x29\xe5\x92\x9b\xdc\xd9\x79\x82\x14\x97\xa9\xfa\x74\x2e\x3a\xbd\x7c\x90\xe9\xa5\x9c\x4b\x75\xfb\x74\x1e\xbe\x66\x97\x1f\x44\x92\xb4\x56\xfa\xe9\x8c\xb9\xc3\x4f\xef\x63\xf8\xda\xe9\x42\x98\x78\xa2\x89\x92\x46\x09\x1a\x7c\x9e\x79\xac\x67\xe5\x8d\x0f\xef\x21\x4d\xf4\xe9\x39\xdb\x76\x79\xf3\x30\x89\xe6\x85\x9d\xf5\x56\xa8\xc1\x58\xd4\xee\x20\xe4\xf2\xe3\x87\x0b\x98\x42\x59\xde\x18\x88\x2f\xf0\x5e\x2d\x6d\x7c\xe9\x36\x2f\x5d\x54\xdd\x66\xe0\x2e\xa1\x85\x19\x39\x13\x41\x55\x8d\xbd\xbe\x24\x62\x5e\xdd\xeb\xf2\x14\x9c\xfb\x29\x0a\x43\x03\x08\xbb\x87\xec\xa0\xaa\xac\x5e\x52\x59\xba\x61\x5f\x55\x5e\xa4\xb9\xe6\x8c\x7b\xe9\x52\xfa\x81\x04\xd7\x4b\x6b\x95\xf4\xc9\x0b\x69\x65\x07\xcd\x9d\xc9\x33\x2d\x50\xbe\x16\x30\x05\x5a\xd9\x98\x91\xa0\x0c\x2d\x5d\xa1\xce\xc8\x8e\xd7\x42\x8c\xaf\xbc\x4c\x2d\x1c\x17\xa8\x49\xda\xd7\x82\x16\x24\xed\xf6\xd7\x46\xa7\xb9\x63\x9c\xbf\x82\x69\xad\x1f\xbb\xbc\x1a\xb2\x31\x67\xe3\x9e\x17\xe3\x29\x84\x6b\x4f\x07\x9d\x8b\x1c\x53\xc9\xd2\x63\x0b\x95\xa0\xf7\x60\xba\x1d\xd2\xce\x25\x94\xec\x52\xcb\xee\x1d\xd1\x19\x3f\x42\xcf\xf7\x28\xac\x19\x0f\xe2\x94\x4b\x16\xf6\xb1\x3f\x18\xaf\x2d\x3f\x73\x42\x7f\xbe\xf8\x6b\xc3\xab\x29\xb9\x2e\x93\x6d\x78\xff\xc8\xc8\x9e\x5d\x7e\x78\x73\xa5\xe6\x24\xc3\x41\x6c\x73\x92\x61\x1b\xe9\xd0\xba\xd5\x2e\x80\x63\x53\xdf\x18\x0d\x4c\x41\xd2\x2d\xbc\xad\xbf\xc2\xc1\xc6\x89\x46\x20\x36\x64\xc3\xfe\x1f\x91\x83\x8f\x3c\x7e\xff\x18\x6a\xc4\xf1\x16\xa0\x2a\x9c\x31\x07\x58\x6e\x1d\xee\x0b\xb2\xb9\x62\x23\xe8\xbf\xff\xed\xf2\xaa\x7f\xbc\xb5\x97\x68\x62\x24\x2d\x47\x61\x46\xd0\x37\xb8\xa0\x48\x69\x9e\x71\xb9\x23\xd7\x70\x19\xb5\x2f\xeb\xcd\xaa\xc9\x5a\x4b\x62\xa9\x5d\x88\xfb\xc3\xfa\xb4\x35\xc3\x3e\x7c\xb3\x49\x7a\x47\xb6\x29\x1a\x3f\x63\xdf\x5e\xfd\xea\xda\x61\x9d\xdf\x8c\xda\xc2\xf9\xf9\xfe\x9c\x85\xfd\xc7\x26\x7d\x7f\xb0\xd1\xdf\xcd\x3d\xa4\x64\x93\x3c\x5c\x6a\x71\xdc\x06\x66\x37\x2b\x9a\x4c\x31\x80\xb2\x55\x70\x9f\xf1\x8d\x51\x32\x1c\x8c\xa1\x6a\x62\x5b\xed\x2a\x39\x81\x6e\x26\x7d\xcd\xb8\xc5\x58\xcd\x07\x3b\x81\xff\x22\x1f\xfd\x64\xdc\xef\xa1\x4f\x5c\x3d\xef\x62\xa1\xb2\x30\xf0\x93\x70\x14\x1c\x83\x67\xb7\x2d\xd8\xad\xd5\x4d\x3b\x7c\x31\xbd\xf6\x60\x7b\xc8\xb0\x3a\x86\x75\xb4\x48\xeb\x6e\x50\xbe\x56\x40\xba\xc1\x70\x26\xdb\xdc\x8d\x7b\x55\xef\x28\xec\xaf\xff\xab\xed\x0f\x62\x25\xc3\x7e\xe2\x46\x5e\xff\xb8\x3b\x00\x07\x63\x77\x53\x6b\x66\x75\x33\x2a\xff\x0f\x00\x00\xff\xff\xe7\x6a\x9a\xbe\x72\x10\x00\x00"

func templatesInviteListHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesInviteListHtml,
		"templates/invite-list.html",
	)
}

func templatesInviteListHtml() (*asset, error) {
	bytes, err := templatesInviteListHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/invite-list.html", size: 4210, mode: os.FileMode(436), modTime: time.Unix(1483413954, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLoginAltslackHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\x4d\x6b\xf4\x36\x10\xbe\xef\xaf\x18\xf6\xd4\x42\xd6\x26\x79\x7b\x28\x1b\xc5\x34\x04\x4a\x03\x5b\x52\xf2\x41\xe9\x71\x6c\x8d\x6d\x11\x79\x64\xa4\xf1\x26\x5b\xe3\xff\x5e\x24\x3b\x8d\x13\x08\xed\x7b\xd3\x4a\x23\x3d\x9f\xde\x71\xd4\x54\x1b\x26\xd8\x06\x39\x59\x0a\xdb\x69\xda\xa8\xb4\x2c\x36\x99\xe1\x20\x7e\xa8\xc4\x38\x0e\x30\x6e\x00\x00\x84\x5e\x65\x87\xd6\x34\xbc\x87\x8a\x58\xc8\x5f\xa6\xfd\xda\xb1\xec\x82\xf9\x9b\xf6\x70\xfe\x73\xff\x7a\xb9\x99\x3e\x5d\xef\x3d\x2d\x4f\xac\x46\x2f\x2e\xe6\x51\x95\x2f\x90\xe3\x48\xac\xa7\x69\xf3\x4e\xab\x72\x2c\xc4\x92\x78\x69\x73\x84\xca\x62\x08\x57\x69\x1b\x0d\x93\xdf\x16\x1f\xf6\x7b\x6c\x68\xd7\x12\xea\x74\x12\xe1\x54\x7b\x5e\x5c\x0f\xd2\x12\x8b\xa9\x50\x08\x5e\x8c\xb4\xf0\x60\xb1\x7a\x56\x79\x7b\x5e\x6c\x54\xae\xcd\x71\x9e\x1d\x47\x53\x43\x76\x70\x8d\xe1\x5b\x16\x8f\xbf\x1a\x1f\x04\xa6\x69\x7e\x68\x05\xb3\x96\xb6\xe0\xa4\x91\xbe\xf8\xcb\x0d\x50\x21\xb3\x13\x18\x02\x81\xb4\x26\xc0\xc0\x62\x2c\x9c\xdc\x00\x2d\x1e\x09\x14\x42\xeb\xa9\xbe\xda\x8e\x23\x64\x07\x3c\xb9\x41\xb2\x07\x41\x2f\x09\xf3\xe9\xfe\x00\xd3\xb4\x2d\x54\x59\x58\xd7\x34\xa4\xc1\xf0\xcc\x39\x1d\xab\xbc\x2c\x54\x8e\x45\xa6\xf2\x7e\x11\xb8\xe6\x4f\x36\xd0\xc2\x77\x16\x73\x6d\x3d\xa1\x3e\xdd\xb8\xae\xb7\x24\xf4\xfd\x62\xd0\x13\xe0\xfc\x08\xfc\x4b\x28\x83\xdb\x3a\x09\x7a\x21\x4f\x10\x88\x05\xda\xb8\x2a\x4f\x80\xd0\x93\xef\x4c\x08\xc6\x31\xf4\xde\x75\xbd\x9c\x41\x8a\xab\x92\x78\xc5\xcf\xde\x03\xea\xce\x70\xf8\x6f\x19\xff\x8f\xe9\xa3\x03\x0c\xc1\x55\x26\x26\x9c\x50\x92\x5b\x91\xf1\x9b\x7d\xb8\x00\x0f\x81\xfc\x19\x60\x58\xfd\x64\xec\x28\xc4\xd8\xa0\x6a\x91\x1b\x02\x64\x0d\x77\xb1\x35\x60\x02\xc4\x2c\xf1\x88\xc6\x62\x69\x09\x7e\xf8\x52\x0b\xd4\xce\x43\xe7\x3c\x81\xe1\xda\xf9\x0e\x23\xcf\x1f\xcf\x66\x9f\x8c\xb5\x10\xe9\x13\xea\xe8\x97\x06\x04\x8f\xac\x5d\x07\x95\xd3\xf1\x06\x20\x74\x14\x02\x36\xf4\xee\xc9\xdc\xdf\x6f\x31\x07\x0f\x37\x4e\xd3\x5e\xe5\xed\xb7\xb5\x70\x4f\x85\x8a\x0f\x14\xbf\x74\xe8\x8f\x51\x2a\x95\x3b\x5c\xd7\x7d\x1c\xb3\xfb\x04\xf4\xe8\x9e\x89\xa7\x49\xe5\x69\x5e\xe5\xf1\xee\xda\x42\x15\x3a\xb4\xb6\x78\x8c\x8d\x95\x38\x1b\xb5\x1f\xd1\x1a\x9d\x84\xc9\x0b\xb1\x9c\xa0\x33\x3c\x08\xc5\xdc\xe6\xf1\x8f\x5c\xfb\x42\xe1\x5b\x58\xa5\x30\x94\xc2\xbb\xde\x9b\x0e\xfd\x69\xbb\x94\xbe\x15\xe9\xc3\x3e\xcf\x7f\xba\x08\x55\xeb\x9c\x1d\x02\x66\x21\xba\x98\x55\xae\xcb\x17\x0b\x42\xbe\xe8\xc9\xb7\xc5\x8d\x35\xd5\x33\xfc\x16\xeb\x15\x63\xf9\x03\x83\x50\xfc\x02\x3e\x23\xff\xbe\x18\x10\x9d\x6e\xcc\x31\xd5\x00\x10\x9e\xee\x0f\x19\xdc\xf5\x51\x8e\x80\x38\xa8\x0d\x9b\xd0\x66\xf0\x67\x4b\x3c\x8f\x78\x02\xed\x98\xe6\xa0\x52\x09\xac\x7b\xfb\x74\x05\xcb\xaf\x2a\x9a\xfe\xa8\xd6\xeb\xe5\x78\xf9\xf9\x4f\x00\x00\x00\xff\xff\x1b\x28\x59\x72\x5a\x05\x00\x00"

func templatesLoginAltslackHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLoginAltslackHtml,
		"templates/login-altslack.html",
	)
}

func templatesLoginAltslackHtml() (*asset, error) {
	bytes, err := templatesLoginAltslackHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/login-altslack.html", size: 1370, mode: os.FileMode(436), modTime: time.Unix(1483415592, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLogsIndexHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x0c\xb4\x28\x72\xa9\x24\xdb\x59\xa4\x80\x56\x11\x8a\xee\x1e\x5a\x20\x5b\x2c\xba\x6d\x81\x1e\x47\xe2\x48\x62\x43\x91\x02\x49\xc9\x31\x08\xfd\xf7\x82\xfa\x88\x15\xd7\x41\x90\xa0\x5d\xfb\x42\xcd\x90\xef\xbd\x79\x33\x94\x9c\x63\x54\x72\x49\x10\x18\x7b\x14\x64\x82\x61\xd8\xa4\xe3\x32\xdb\x44\x45\x8d\x52\x92\x08\x73\xf5\x10\x16\x4a\x5a\xe4\x92\x34\xb8\x0d\x00\x00\xe3\xa6\x15\x78\x4c\xa0\x14\xf4\xf0\x61\x0c\xf9\x55\x58\x0a\x75\x48\x40\xab\x03\x1c\x34\xb6\x53\xe2\xef\xce\x58\x5e\x1e\x47\x0c\x92\x76\x3a\x13\x1a\x8b\xda\x7e\xd8\x0c\xcf\xf1\x64\xc0\x78\x3f\xb3\x35\xa8\x2b\x2e\x13\xb8\x6e\x67\xae\x29\x10\x6a\x5e\xd5\x36\x81\xdd\xd6\xc7\x5f\x40\x5a\xe3\xe5\x58\xdc\x57\x5a\x75\x92\x85\x85\x12\x4a\x27\xf0\xae\xdc\xfa\xff\x84\x9e\x2b\xcd\x48\x87\x1a\x19\xef\x4c\x02\x37\x0b\x6b\x8b\x8c\x71\x59\x25\xb0\x8d\x76\xed\xc3\x14\x7f\x81\x15\xcf\xfd\xca\x85\x2a\xee\x27\xb8\x03\x67\xb6\xf6\xea\xb7\xdf\x4d\x81\x45\xcb\xcd\xfe\xfa\x3a\xff\xe1\xad\x95\x46\x52\x85\x0d\xea\x9e\xcb\x99\x5b\xb5\x58\x70\x7b\xf4\xb2\x6f\x9e\x12\xed\xf7\xfb\x57\xa0\x2d\xb5\xbc\xf1\x74\xd2\x73\xc3\x2d\xb1\xcb\x28\x69\x3c\x8f\x9d\x73\x24\xd9\x30\x6c\x4e\xa3\x39\xcf\xcd\x38\x9b\xde\xd3\x42\xa0\x31\xb7\xc1\x23\x55\x90\x8d\x80\xeb\x5c\x8b\x15\x85\x35\x21\xf3\xd9\xb4\xde\x65\x1f\x27\x8d\x70\xa7\x2a\x93\xc6\xf5\x2e\x4b\x4d\x83\x42\x64\x3f\x51\x81\x9d\x21\xf8\x2a\xb0\xb8\x87\x56\x53\xc3\xbb\x06\xb8\x81\x9c\x0b\x41\x0c\x5a\xd2\xd0\x19\xd2\x69\x3c\xed\x4f\x63\xc6\xfb\x6c\x33\x11\xd6\xfb\xec\x4b\x97\x0b\x5e\xc0\x0c\xef\xa1\xf7\xff\x56\x73\xd1\xa0\x59\xb5\xff\x39\xa7\x51\x56\x04\xd1\x02\x33\x0c\x8f\xb9\x11\x67\xb4\xe6\x36\x18\xc7\x32\x81\xd0\x39\x41\x12\xa2\xcf\xd4\xe4\xa4\xcd\x30\xac\xa0\x96\x23\x67\x91\xfa\x7d\x96\x22\xd4\x9a\xca\xdb\x20\x16\xaa\x32\xb1\x73\xd1\x2f\x9f\xfc\xd1\x77\xce\x45\xbf\x62\x43\xc3\x90\xc6\x98\xa5\x71\xfd\xfe\xec\x6c\x9b\x39\x17\x7d\xe9\x74\xab\x0c\x45\x7f\xa2\xe8\xc6\xad\xed\xd9\xae\xf8\x09\xe9\xd9\xe3\xd2\xd3\x55\xea\xe4\xa0\xe6\x3d\x5a\xba\x60\xa1\x73\xc0\x4b\x88\xfe\x52\x9d\x9e\x37\x2d\x7b\x20\x5c\xc0\x5e\xe5\x72\x08\xb3\xcf\x97\x20\x5f\xeb\xf9\x42\xeb\x1c\x2f\x41\x2a\x0b\xd1\xcf\x68\x3e\x8f\xb3\x3e\x0c\xab\x2b\x38\x95\xfe\xbf\xb6\xe8\xa2\x84\xb4\xcd\x52\x6a\x32\x3f\xf0\x80\x9a\xc6\x3c\xf6\xc8\x05\xe6\x82\xa0\x54\x1a\x6c\xcd\x0d\xcc\xae\x41\x3e\x5f\x04\x6e\x81\x29\x32\xf2\xca\x42\x8d\x3d\xc1\x8f\x53\x1d\x51\x1a\x53\x93\xf9\xb6\xaf\x7b\xf9\xdf\xce\x08\x90\x64\xa7\xce\x9e\xb2\x3e\x23\x0c\xad\x3b\xe4\x7b\xe9\x67\xe3\x0e\x8f\xaa\xb3\xd1\xa7\x8f\x9d\xd6\x24\xed\x1f\x86\x74\x34\x5e\x65\xbf\x7a\xc4\x9a\x25\xfe\xae\xa0\xe7\x74\x00\x5b\x13\x78\x83\x47\x13\xda\x79\xfc\x66\x1f\xcc\xf7\xb0\x74\xe1\xca\xb9\x05\xff\xab\xff\x56\x4d\xb8\xbf\xdd\x41\xe0\x3f\x1d\xad\x49\x34\x21\x0b\x86\xe1\x2a\xab\x34\x4a\x0b\x58\x14\x64\x8c\xef\x50\xf4\xa4\x74\xaf\x75\xd4\xff\xad\xe4\x18\x5e\x49\xe0\xf2\x19\x25\x2b\x8f\x97\x67\xff\x62\x9d\xec\x9e\x9b\xfb\x4f\x00\x00\x00\xff\xff\xfc\x57\x79\x34\x17\x08\x00\x00"

func templatesLogsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLogsIndexHtml,
		"templates/logs-index.html",
	)
}

func templatesLogsIndexHtml() (*asset, error) {
	bytes, err := templatesLogsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/logs-index.html", size: 2071, mode: os.FileMode(436), modTime: time.Unix(1482197067, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUserManageHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4f\x6b\xdc\x3e\x10\xbd\xe7\x53\x0c\xfe\x1d\x72\xf9\x59\x26\x21\xa7\xa0\x88\x42\x72\x68\x61\xb7\x2c\x4d\x5b\xe8\x71\xd6\x1e\xdb\xa2\xb2\x64\x24\xd9\x6d\x10\xfa\xee\x45\xfe\xb3\xbb\xd9\xee\x25\x50\xb2\xa7\x95\x66\xf4\xe6\xcd\x7b\x33\x0e\xa1\xa2\x5a\x6a\x82\xac\x34\xda\x93\xf6\x59\x8c\x57\xbc\x92\x23\x94\x0a\x9d\x7b\x98\xae\x51\x6a\xb2\x99\xb8\x02\x00\x38\x8d\xf5\xd8\x50\xde\x12\x56\x29\xca\xdb\x1b\xf1\xcd\x91\x85\x9d\x35\xb5\x54\xc4\x8b\xf6\x46\x70\xd7\xa1\x52\x62\x8b\x1a\x1b\x82\xd2\x68\x4d\xa5\x97\x46\x3b\x40\x5d\x81\x32\x0d\x98\xc1\xf3\x62\xce\xe2\x45\x25\x47\x71\x35\x97\x69\x6f\xc5\xb3\xc2\xf2\x27\x2f\xda\xdb\xbf\x2b\x97\x2d\x6a\x4d\x2a\xdf\x9b\xdf\xf9\x39\xc3\xf4\x0b\xc1\xa2\x6e\x08\xd8\xe3\x9c\xe8\x62\x3c\xc4\x26\x1c\xe7\x5f\x14\x3d\x64\xc6\x56\x64\xef\x21\x0f\x41\x91\x06\xb6\xa5\x6e\x4f\xd6\xc5\x78\x02\xb5\x3e\x79\x7d\x33\x73\xbc\x13\x1c\xa1\xb5\x54\x3f\x64\x85\x32\x8d\x2b\x42\x60\x9f\x9e\xd2\xf3\xff\x42\x60\x9f\xb1\xa3\x18\x79\x81\x82\x17\xed\xdd\x85\xf7\xbd\x08\x81\xed\x06\xdb\x1b\x47\xec\x3b\xaa\x61\x4a\xef\xcf\x6a\x17\xaf\x8a\x9f\x1d\x43\x20\x5d\x2d\xcd\x9d\xeb\xb7\xb3\x72\x44\x4f\xb0\x6a\x70\x94\x32\x04\x90\x35\xb0\x1f\x66\xb0\x4b\xd2\x9a\x03\xf9\x0a\xf6\x26\xb5\x73\x58\xf4\xbe\x04\xf9\x56\xed\xd7\xb2\x21\xc8\x1a\xb4\xf1\xc0\x3e\xa2\xdb\xa2\x1d\xa5\x8e\x51\x9b\xbc\x9b\xfe\xae\xad\xbf\x8b\x55\x17\xa9\xf0\x5e\x70\xea\xc4\xc6\x34\x0e\xd0\xd2\x14\xc7\x11\xa5\xc2\xbd\x22\xa8\x8d\x05\xdf\x4a\x07\x8b\x7a\xb0\xa7\x12\x07\x47\x20\x3d\x54\x86\x9c\xbe\xf6\xd0\xe2\x48\xf0\x61\xee\x87\xf1\x82\x3a\x91\xec\x3f\xf5\xf4\xdf\xcf\x0b\x90\xae\x8e\x2e\x1f\xa3\x29\xa2\x1c\xad\x6e\x25\x4f\xd3\x8c\x6c\xf0\xc5\x0c\x9e\x3d\x3d\x0e\xd6\x92\xf6\x69\xc3\xd9\xb4\x98\xd3\xae\x1f\x70\x7a\xf1\xd5\xc0\x28\xe9\x17\xf8\x96\xd2\x62\xbb\x49\x80\x7e\x19\xc1\x45\x03\xf7\x3f\xac\x2e\x5c\x87\xb0\x62\x3f\x7b\xb4\x7e\xc6\xfc\xb2\x81\xac\xb1\x66\xe8\xdd\xbd\x25\xac\xb2\x18\xaf\x45\x63\x51\x7b\xc0\xb2\x24\xe7\x92\x43\xec\xd0\x72\xe2\x38\x71\x7e\x0f\x1a\x4e\x36\x1a\xa4\xbe\xc0\xe0\x44\xcf\xf5\x9c\x3e\xa2\xb3\xb4\x8b\x99\x7f\x02\x00\x00\xff\xff\x5d\xf8\x1a\x40\x68\x05\x00\x00"

func templatesUserManageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesUserManageHtml,
		"templates/user-manage.html",
	)
}

func templatesUserManageHtml() (*asset, error) {
	bytes, err := templatesUserManageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/user-manage.html", size: 1384, mode: os.FileMode(436), modTime: time.Unix(1482197067, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"layout.html":                   layoutHtml,
	"assets/styles.css":             assetsStylesCss,
	"templates/factoid-info.html":   templatesFactoidInfoHtml,
	"templates/factoid-list.html":   templatesFactoidListHtml,
	"templates/home.html":           templatesHomeHtml,
	"templates/invite-list.html":    templatesInviteListHtml,
	"templates/login-altslack.html": templatesLoginAltslackHtml,
	"templates/logs-index.html":     templatesLogsIndexHtml,
	"templates/user-manage.html":    templatesUserManageHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"styles.css": &bintree{assetsStylesCss, map[string]*bintree{}},
	}},
	"layout.html": &bintree{layoutHtml, map[string]*bintree{}},
	"templates": &bintree{nil, map[string]*bintree{
		"factoid-info.html":   &bintree{templatesFactoidInfoHtml, map[string]*bintree{}},
		"factoid-list.html":   &bintree{templatesFactoidListHtml, map[string]*bintree{}},
		"home.html":           &bintree{templatesHomeHtml, map[string]*bintree{}},
		"invite-list.html":    &bintree{templatesInviteListHtml, map[string]*bintree{}},
		"login-altslack.html": &bintree{templatesLoginAltslackHtml, map[string]*bintree{}},
		"logs-index.html":     &bintree{templatesLogsIndexHtml, map[string]*bintree{}},
		"user-manage.html":    &bintree{templatesUserManageHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

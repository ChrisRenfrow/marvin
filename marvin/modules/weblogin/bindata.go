// Code generated by go-bindata.
// sources:
// layout.html
// assets/styles.css
// templates/factoid-info.html
// templates/factoid-list.html
// templates/home.html
// templates/logs-index.html
// DO NOT EDIT!

package weblogin

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _layoutHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xdf\x73\xda\x38\x10\x7e\xcf\x5f\xa1\xea\x3a\x7d\xc9\x61\x0d\x90\xa6\x5c\x6b\x7c\x47\x43\xda\xd2\xd2\x26\x57\xf2\x63\xae\x2f\x37\x8b\xbd\xb6\x05\xb2\x44\x24\x99\xc0\x79\xfc\xbf\xdf\xf8\x17\x10\x4a\xae\xbd\x4e\x79\xb1\xac\x5d\x7f\xbb\xdf\x7e\xab\x15\x59\x46\x02\x0c\xb9\x44\x42\x05\xac\x55\x6a\x29\xc9\xf3\x23\xf7\xc9\xf0\xe2\xec\xea\xaf\xcb\x73\x12\xdb\x44\x78\x47\x6e\xf3\x40\x08\xbc\x23\x42\x08\xc9\x32\x32\x15\xca\x9f\x13\x6a\xb9\x15\x48\x89\x43\xf2\xdc\x2d\xd7\x5e\x96\xf1\x90\x38\x57\xc5\x3a\xcf\xb3\x6c\xbb\x42\x61\x30\xcf\x3f\x82\x5e\x72\x49\x6e\x71\x4a\x46\xd2\xa2\x0e\xc1\xc7\x2c\x43\x19\xe4\xb9\xcb\x1a\x04\x82\x32\x28\x32\x79\x18\x2b\xc0\x10\x52\x61\x5b\xc6\xae\x05\x9a\x22\x68\xab\xf6\x71\x05\x97\x73\xa2\x51\xf4\x69\x65\x8c\x11\x2d\x25\xb1\xc6\xb0\x4f\x63\x6b\x17\xe6\x25\x63\x09\xac\xfc\x40\x3a\x53\xa5\xac\xb1\x1a\x16\xc5\x8b\xaf\x12\xb6\xd9\x60\x5d\xa7\xeb\x9c\x32\xdf\x98\xed\x9e\x93\x70\xe9\xf8\xc6\xd0\x32\x4e\xf5\xe3\xd2\x62\xa4\xb9\x5d\xf7\xa9\x89\xa1\xdb\x3b\x69\xb5\xef\x7a\xc9\xd5\xfb\x8b\xc1\x64\xd5\x9b\xb5\x07\xe9\x31\x3c\xbf\x1d\xde\xc8\x4b\xde\x11\xf3\x37\xe1\xfd\xfd\xf9\x00\x7a\xf1\x70\x18\xcc\xbe\x88\xc5\x18\xa3\x55\x3c\xbb\xf9\x78\xde\x0e\xa3\xd9\xed\xe5\xdb\x64\xfe\x8f\x79\x41\x89\xaf\x95\x31\x4a\xf3\x88\xcb\x3e\x05\xa9\xe4\x3a\x51\xa9\xa1\x55\xb9\x5d\xe3\x6b\xbe\xb0\xc4\x68\x7f\x4b\xc7\x0f\xe4\xcc\x38\xbe\x50\x69\x10\x0a\xd0\x58\x72\x81\x19\xac\x98\xe0\x53\xc3\x66\x77\x29\xea\x35\xeb\x38\x1d\xa7\x5b\xbf\x94\x5c\x66\xdf\xa0\x32\x3a\x7d\xf3\xfc\xe2\xc3\xf9\xd9\xf8\xc6\x7e\x60\xaf\xc7\xc7\x3d\x3e\x19\x0f\xcf\xdf\xa9\xfb\xc9\x20\xbc\x56\x2f\x4e\xbf\x8c\x7f\x3b\x9e\xbf\x1d\x44\x57\x9f\x03\xfe\x7a\x3d\xfa\xf4\xe1\x3d\xdc\x5d\x5d\xbe\x63\x7f\xde\x7c\x9a\xb4\x6f\x86\xd3\xc7\xa9\xb8\xac\xa2\xe1\xed\x48\xf6\x50\xa1\x50\x49\x6b\x9c\x48\xa9\x48\x20\x2c\xb8\x29\x29\xf9\xc6\xfc\x1e\x42\xc2\xc5\xba\x3f\x10\x18\x69\x5c\xc3\xf1\x04\xa4\x39\x9e\x9c\xd1\xaf\x24\xf7\xbe\xdd\x0e\x0c\x8c\x41\x6b\x58\x65\x29\xb5\x6d\x9a\xba\x75\xb8\xef\xb6\xfd\x56\xb4\x71\xe3\xe3\xb2\xea\x3c\xb8\x53\x15\xac\xbd\xa3\xad\xbb\x84\xe5\x14\x74\xd3\x9e\xae\x84\x25\xf1\x05\x18\xd3\xaf\x2d\xa4\x7a\xb4\xb8\x5c\xa2\x36\xd8\xe4\x1c\xf0\x8d\x9f\xaf\xa4\x05\x2e\x51\xb7\x42\x91\xf2\xe0\x80\x47\x0d\x51\x64\x80\xba\xb6\x97\x3e\xb0\xe7\x31\xd5\x20\x83\x0d\x75\xea\x55\xc7\xcf\x65\x50\x63\xb2\x80\x2f\x77\xe0\x79\xd0\xdf\xe4\xbf\x49\x46\x08\x58\x18\x6c\xd2\x6e\xde\x77\xa3\xa6\x62\x27\x6c\xe3\x28\x61\xb9\xe3\x93\x65\xe4\x9e\xdb\xb8\x29\xe2\x53\x3f\xd5\x1a\xa5\x25\x2f\xfb\xc4\xf9\x54\x7e\x70\x56\xef\x94\x76\x0d\x32\xc2\xc6\x32\xb2\x98\x98\x46\x97\x1d\x40\x1e\x12\xbc\x2b\x9c\x12\xdc\x02\xb6\xf6\xfc\x5c\xc1\x9b\xe4\xc0\xb7\x7c\x89\xd4\x73\xa1\x2e\x48\x96\x39\xd7\x9f\xc7\x79\x4e\xbd\x2c\x2b\x61\x8a\x21\x04\x9e\xcb\x04\xf7\xf6\x82\xb5\x48\x31\xbf\x0e\xa1\xff\x28\xdc\xb6\xd5\x6a\x3a\xd5\xce\xc3\xe9\x57\x89\x94\x8a\xef\x28\x76\xb3\xd4\x3c\x8a\x2d\xdd\x0f\x58\x14\xcb\x99\x08\xf0\xe7\xd7\x06\xf5\x41\x1e\x0f\x36\xca\x4d\x9e\x44\x24\xc6\x02\xaf\x4f\xbb\x1d\x4a\xee\x79\x60\xe3\x6a\x59\xce\xa2\x2c\xdb\x42\x3a\x83\x25\x58\xd0\xa4\xdb\xc9\x73\xfa\x15\x54\xf9\x33\xda\x37\x68\x1f\xff\x8c\xb4\x57\xbf\x92\x43\xc6\xd3\x93\x3c\x27\x9d\x47\x8c\xed\x4e\x2f\xcf\xc9\xc9\x8a\x12\x76\x80\x42\xa3\xcd\x2f\xd4\xfb\x23\xcb\x9c\xba\xc9\xca\xef\xb7\x0a\x3d\x2c\xc5\x0f\xaa\xcf\x14\xa4\x36\x66\xa6\xc8\x8f\x19\x0b\xda\x52\xaf\x4c\x96\x8c\x55\x44\x46\xf2\x3f\x5b\x61\x0f\xf8\x99\xb0\xaf\xfa\xcf\x22\xfb\xea\x90\x8a\xbb\x1c\x46\xd2\x6a\x18\xab\x88\xcb\x9f\x24\xe9\xce\xf5\xe2\xf0\x02\xdc\x39\xe9\x38\xa1\x66\xa9\x41\x6d\x58\x82\x01\x4f\x93\xbf\xf7\x0a\xb9\x4d\x22\xcf\x9d\xd9\x02\xa3\xff\x2d\xc5\x2e\xc2\xcf\x16\xa4\x64\xd1\x08\x52\x06\xfa\x1e\x41\x0e\x1f\xc0\xdd\x79\x59\x2d\x5d\x26\x61\x59\x8c\xff\xcd\x57\xcd\xa4\x7b\x1a\x09\x35\x05\x51\x4e\xb8\xea\x5c\xd7\x17\x44\x31\xde\x51\x5a\x4a\x9c\xd7\x2a\x58\x0f\xc1\x42\x79\x9f\xc4\x6d\xef\x23\x37\x86\xcb\x88\xd4\x1e\x4f\x5c\x16\xb7\xcb\xab\x65\x7f\x34\xb8\xac\xba\x75\x5c\x56\xfd\x37\xdb\x58\xfe\x0d\x00\x00\xff\xff\x50\x73\xea\x16\xd2\x09\x00\x00"

func layoutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_layoutHtml,
		"layout.html",
	)
}

func layoutHtml() (*asset, error) {
	bytes, err := layoutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layout.html", size: 2514, mode: os.FileMode(420), modTime: time.Unix(1482042776, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsStylesCss = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xd1\x6e\xd3\x30\x14\x7d\xef\x57\x5c\x6d\x0f\x93\xba\xa5\x4d\xbb\x6e\x94\x4c\x4c\x1a\x05\x09\x24\xc4\x03\x9b\x78\x41\x3c\xdc\xd8\x37\x89\x35\xc7\x37\xb3\x9d\x75\x05\xed\xdf\x91\x9d\xb4\x2b\xa5\x9d\x78\x8c\x7d\xcf\xb9\xc7\xe7\x9c\x8c\x87\xf0\x89\x50\x92\x85\xe1\x78\x90\xb3\x5c\xc1\xef\x01\x00\x40\x8e\xe2\xbe\xb4\xdc\x1a\x99\x08\xd6\x6c\x33\x38\x2e\xa8\x10\x85\xb8\x1a\x3c\x0f\x46\x06\x1f\x73\xb4\x89\xc1\xc7\x6b\xad\xae\x55\x5d\xfe\xa8\x48\x95\x95\x7f\x77\x74\x3e\x3d\xfa\xd9\x53\xd4\x68\x4b\x65\x12\x1b\x2e\x32\xb8\x68\x9e\xae\xe2\xb1\x54\xae\xd1\xb8\xca\x40\x19\xad\x0c\x25\xb9\x66\x71\xff\x3f\xac\xa7\x80\x3d\xf3\x01\x8a\x70\xd5\xa0\x94\xca\x94\x89\xa6\xc2\x67\x90\x5e\x6d\x2b\xe9\xce\xa2\x90\xe7\xc1\x78\x08\x77\xdc\x00\x17\x20\xd8\x78\x32\x3e\x18\x30\x6a\xb0\xa4\xa4\xea\x0c\xa9\x26\xaf\xaf\x7b\xfe\x7b\xdc\xd5\xa8\x75\x8f\x28\xd8\xf8\xc4\xa9\x5f\x94\xc1\x64\xbe\x7e\xf8\xda\xc7\xf9\x7c\xbe\x47\xd6\x66\x2c\x62\x0b\xac\x95\x5e\x65\x70\x72\xa3\xa9\xb4\xb4\x42\xb8\x45\xe3\xe0\x76\x71\x72\x06\x0e\x8d\x4b\x1c\x59\x55\x04\x0d\xe1\x21\xb7\x24\xbc\x62\x93\xc1\x02\xb5\xe6\xd6\xbb\x40\xf4\x9e\xd9\x3b\x6f\xb1\x81\x0f\x2c\xe2\xc9\x82\x9b\x55\x4c\x03\xa6\xe9\x64\x92\x4c\xd3\xc9\x25\xdc\x2d\x95\xf7\x64\xcf\xe0\xb3\x11\xa3\x30\xf4\x45\x09\x32\x8e\x32\x58\x2c\xe0\xc6\x7b\xab\xf2\x36\x70\xc3\xf9\x28\x0d\x0e\x0d\xc6\xc3\x01\x0c\xb7\x16\xc5\xcf\xaf\xec\xe1\xa1\x55\x9e\x00\x35\x59\xef\xce\x20\x6f\x3d\x88\xd6\x79\xae\x01\x8d\x84\x8a\x74\x53\xb4\x1a\x0c\x7b\x72\x50\xb0\x85\x82\xf5\xbd\x03\x4b\x18\xe2\x02\x5f\x11\x48\x16\x6e\x14\xd8\xbe\xd1\x43\xab\x2c\x39\x40\xc8\xd1\x51\x24\xa8\x59\xaa\x42\x91\x05\xa1\xd1\xc5\xb1\xa8\x05\x16\x5c\xd7\x6c\xc0\xf9\x95\xee\x89\x43\x0a\x7e\xd5\x90\x8b\x81\xe6\x2e\x11\x9d\xd6\x18\x4d\x5f\x8f\x0c\xa6\x69\xe7\x77\x97\x41\xf7\xdd\xd5\x25\x67\x2b\xc9\x66\x30\x69\x9e\xc0\xb1\x56\x12\x8e\x89\xe8\xe5\x26\xe6\x95\x2c\x95\xf4\xd5\xa6\xd5\xfd\x8d\x45\xa9\x5a\x97\xc1\x79\x57\xb1\xed\xe5\xd5\x2c\xee\xef\x23\xf7\xdc\xf4\xe5\xec\x0f\x72\xf6\x9e\xeb\x4d\x39\xb7\x91\x4d\xa6\xd1\xf9\x44\x54\x4a\xcb\x6d\x8e\x35\x24\xdd\x05\x08\x96\x14\x07\xf7\xab\x8a\xcd\x0f\x2d\x20\x03\x6d\x03\xae\x41\x41\x90\x93\x5f\x12\x19\xa8\x5b\xed\x55\xa3\x09\x7a\xb2\x7f\x4c\x3c\x85\x5d\x4b\xb7\x9f\x94\x5c\xbc\xec\xf8\x8e\x56\x61\xa8\xce\x2e\x47\x22\xd1\x94\x64\xb7\x25\x46\x4b\xd7\xff\x87\xa0\xd9\x7c\x36\xdb\x79\xd5\x1a\xd4\xfb\xf8\xfa\xec\x12\xad\x09\xad\x3a\xb4\x01\xf1\xf2\x4d\x3a\x3f\x84\xda\x59\xb1\x7f\x58\x99\x82\x0f\xf2\x4f\xf2\x79\xfa\x96\xf6\x42\x76\xc8\x5f\x26\xc7\x43\xf8\x68\xe4\xe6\xc7\x82\xe1\xf8\x4f\x00\x00\x00\xff\xff\xe4\x31\x71\x04\x9b\x05\x00\x00"

func assetsStylesCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsStylesCss,
		"assets/styles.css",
	)
}

func assetsStylesCss() (*asset, error) {
	bytes, err := assetsStylesCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/styles.css", size: 1435, mode: os.FileMode(420), modTime: time.Unix(1481243193, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFactoidInfoHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x83\xd9\xeb\xda\xe4\x1a\xb4\x62\x61\x61\xa1\x50\x7a\x68\xd3\x73\x19\xa4\x97\x5a\xd4\x96\x8d\xa4\x24\x84\x41\xff\xbd\x44\x56\x92\xb6\xbe\x78\xf4\xe6\x7b\xe8\xf1\x24\x62\xb1\x77\x1e\xd4\xc6\x74\x1e\x11\xdb\x9c\x1b\x55\x46\xdd\x34\xaa\xaf\x93\x08\xbc\xcd\xb9\xb9\xd3\x66\xf6\x09\x3e\x15\xdc\xba\x23\x99\x91\x63\xfc\x53\x64\x76\x1e\xa1\xbd\x98\x4e\x2e\x0d\xd4\xfd\x67\x93\x66\x67\x7f\x90\x0b\xbf\xe3\xf7\x00\xb6\x85\x25\x22\x52\xc3\x46\x57\x76\x4b\x22\x57\xdf\x13\x4f\xc8\x59\xf5\xc3\x46\x37\xaa\xb7\xee\xa8\x9b\x15\x5f\xf4\xe3\x6c\x3e\x50\x60\xb7\xa7\xee\x21\xae\xe7\x9c\xcf\x88\x22\x18\x23\x72\xf6\x73\xcd\xae\xfa\x45\xdf\x7c\x1c\x13\xc1\xba\xb4\xa5\xbf\x35\xe5\x21\x22\xd0\xaf\x6e\x07\x9e\xa8\xbb\xec\x5f\x23\x42\xce\x22\xdd\x7a\xff\xb5\x01\xaa\x9f\xf3\x24\x62\x06\xf6\x1e\xe3\x9b\xe7\x09\xdf\xcc\xff\xd6\xc5\x17\x9e\x13\x89\x04\x8c\xc9\x4d\x58\x99\x9d\x9b\x10\x13\x4f\x4b\xcd\x56\xc3\x05\x5c\x1b\x8a\xf3\x21\x18\xb4\x5a\x99\xd9\x42\x8b\x74\xcf\x7c\x7a\x29\xda\xc5\x51\x44\xd5\x2f\x01\xb7\x5a\xee\xaf\x54\xfe\x9f\x01\x00\x00\xff\xff\xf6\x34\xd0\xe9\xdb\x01\x00\x00"

func templatesFactoidInfoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesFactoidInfoHtml,
		"templates/factoid-info.html",
	)
}

func templatesFactoidInfoHtml() (*asset, error) {
	bytes, err := templatesFactoidInfoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/factoid-info.html", size: 475, mode: os.FileMode(420), modTime: time.Unix(1481245502, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFactoidListHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x55\x4d\x6f\xdc\x36\x10\xbd\xeb\x57\x4c\x16\x45\xd0\x02\x2b\xa9\xf9\x38\x39\x8c\x90\x20\x40\x01\x03\x4e\x0f\xb5\x8d\xa2\xa7\x78\x56\x1a\x49\xac\xf9\xa1\x92\xd4\xae\x05\x42\xff\xbd\x20\x45\xad\xb5\x75\x72\xe9\x4d\x1a\xce\xcc\x7b\xf3\xe6\x89\xf2\xbe\xa1\x96\x2b\x82\x9d\x75\x93\x20\xbb\x9b\xe7\x8c\xc5\xc7\x2a\x1b\x45\xd1\x62\xed\x34\x6f\x72\xc1\xad\x03\x9f\x01\x00\x0c\xd8\x34\x5c\x75\x57\xf0\xeb\x87\x6c\x7e\x91\x23\x78\x4a\x0b\x6f\x79\x6c\x74\x05\x4a\x2b\xfa\x10\xa3\x12\x4d\xc7\x55\x2e\xa8\x75\x57\xf0\x76\x78\xba\x88\x1a\xde\xf5\x6b\x78\xce\x5e\xf4\x2d\x04\x5a\x97\x4b\xdd\xf0\x96\x53\x93\x60\x5a\xa1\xd1\x5d\x41\x2c\x0d\x55\xac\x4c\xe4\xbd\x27\xd5\xcc\x73\xf6\x3c\x60\xad\x95\x23\xe5\xe2\x84\x0d\x3f\x42\x2d\xd0\xda\x8f\x31\x8c\x5c\x91\xd9\x55\x17\xf1\x01\x3b\xca\x7b\xc2\x26\x9e\x04\x2c\xd6\xbf\xa9\x7e\x5b\x48\x59\x56\xf6\x6f\x2a\x66\x25\x0a\x51\x7d\x86\x13\x4e\xe0\x34\x58\xa7\x0d\x01\xaa\x06\x0c\x39\xc3\xe9\x48\xe0\xe8\xc9\xb1\x72\xc9\xcb\x58\xd9\xf0\xe3\x25\xca\xc1\xe6\x35\x0a\xa1\x47\x07\xcf\x8f\x39\x57\xad\x3e\x83\xbe\xaf\xee\x2d\x57\x1d\x6c\xa0\xdf\xa7\xb3\xa1\xba\xc5\x09\x58\xad\x1b\xaa\x5e\x25\xbd\x14\x4a\x62\x65\x0c\x01\x57\x80\x6a\x82\xba\x47\xa5\x48\xc0\xa9\x27\x43\xf0\x15\xcd\x91\x2b\xe0\x36\x50\x36\xa3\x02\x84\x54\x5a\xc0\x75\x0b\xae\xa7\xf5\x1d\x1c\x3e\x92\x05\x34\xdd\x28\x49\x39\xbb\x5f\x0c\x60\xf4\x91\x37\x14\x12\x25\x60\xeb\xc8\xc4\x9a\x80\xbb\x07\x3b\x60\x4d\xb9\xa5\x01\x0d\x3a\x6a\x0a\xb8\xeb\x69\x25\xb8\xb2\x62\x24\x2b\x39\x5a\xc7\x4a\x92\x15\x1c\x08\xd0\xc5\x0e\x47\x32\x13\x1c\xa8\xe3\x4a\x85\x79\x75\xe4\xb2\x18\x84\xac\xc5\x8e\x42\x37\x6e\x03\x73\x14\x56\x43\x50\x8b\x1a\x40\x38\xa0\xea\xf2\x75\x06\x56\x0e\x67\x75\xfe\xd2\x23\xd4\xa8\x96\xf4\x8b\x51\xe1\x30\x81\xc5\x29\xe0\x2c\xec\x3e\xc9\x45\x96\xf5\xbc\x23\x07\x2f\x15\x2d\xe0\xb3\x85\x03\xb5\xda\xd0\xfe\x2c\xc4\x59\x9f\x08\x8b\x16\x94\x36\x12\xc5\xc2\xe4\xff\xee\xfc\x4f\xc3\xdd\x0f\xb7\x7e\x6f\xa3\xfc\xff\xa1\x6e\x48\x92\x3c\x90\xd9\xf2\x86\xe4\xfa\x55\xfb\x5a\x4b\x19\x0c\x1a\xdc\x4a\x6e\xb3\xfa\xad\x6c\xd7\x2d\x4c\x7a\x04\x45\xd4\x5c\xd8\x21\xf5\x0a\xc5\xe9\xab\x01\x45\x27\xc1\x15\xd9\x3d\x34\x1a\x5c\xcf\xed\xd5\x32\xf5\x60\xa8\xfa\x01\x3b\x7a\x42\x39\x08\x82\xd7\x6f\xb2\x87\x87\x87\xec\xeb\x28\x1c\x0f\x3d\xb2\x2f\x4b\xfb\x10\x4d\x74\x59\x19\xfa\x7c\x8f\x96\x0c\x55\xa1\x8b\x5c\xcb\x61\x40\xe3\xec\x1e\xfe\x1e\xad\x03\x6c\x82\x2f\x5e\xbf\x4d\x8e\x39\x69\xf3\x68\xa1\xd5\x06\x50\x88\x55\x03\x1b\x3e\x8f\xf4\x31\xe4\x70\x18\x1d\x28\xed\x42\x52\xc4\xdb\x7a\xca\xee\xc3\x56\x5d\x4f\x13\xa0\x38\xe1\x64\x61\x4c\x0b\x20\xe5\xb8\xa1\xd5\x9f\xaf\xb6\x1b\xcf\x58\xff\x6e\xbd\x2e\xe0\x86\x07\xbb\xf7\xef\xaa\x8c\x8d\x62\xf5\xc1\xf6\x82\xdb\x85\x1b\x0b\x0c\xaa\x8e\xa0\x08\xd9\x30\xcf\x19\x00\x13\xbc\x62\x08\xbd\xa1\xf6\xe3\xae\x5c\xe9\x94\xde\xf3\x16\xe8\x1f\x28\x6e\x6b\x3d\xd0\x97\xf4\x79\xef\x76\xf3\xfc\xcd\x7b\x12\x96\xe6\xd9\xfb\x8b\xc3\x10\x88\x17\x62\xe9\x7d\x91\x58\xfd\x8e\x92\xe6\x39\x79\x0e\x92\x99\xbc\x87\xed\x39\xcc\x73\xda\x45\xc4\x54\xf4\x1d\x4c\x66\x07\x54\xeb\x50\xdc\xe6\xe9\xba\xc9\xb5\x12\xd3\xae\x7a\x41\x84\x95\x21\xbf\x4a\x7c\x58\x89\x2b\x81\x88\x50\x5c\xdb\x1b\x5d\x3f\x52\x33\xcf\x3f\x8b\xf8\xf0\xcb\x7a\x95\x27\x9a\x5b\xb4\x8b\x5f\xc2\xae\x0a\xaf\x70\xfe\x43\x1c\x26\xf8\xe4\xfd\x89\xbb\x3e\xec\xcb\xc0\x4f\xc5\x1d\xa1\x84\xe2\x06\xad\xbb\xb7\x64\xa2\x48\x8b\x08\x97\x10\x10\x9c\xe1\x7d\x9a\xe3\x5b\xfc\x8e\xb6\xc5\xe7\x51\xc0\x7b\x43\xc2\x71\x49\xcb\xc1\x1d\x97\x64\x1d\xca\xe1\x3c\xe5\x4a\x7a\x30\xb4\x72\xb6\x7a\x34\x35\xed\xaa\x55\xef\xe2\x0f\x3c\xdd\xc6\xd8\x59\xeb\xb3\xef\x59\x29\x78\x74\x06\xa9\x26\x38\x82\x95\xe3\xf3\x7f\x24\x91\xfe\x37\x00\x00\xff\xff\x43\xa3\x15\x02\xc3\x07\x00\x00"

func templatesFactoidListHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesFactoidListHtml,
		"templates/factoid-list.html",
	)
}

func templatesFactoidListHtml() (*asset, error) {
	bytes, err := templatesFactoidListHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/factoid-list.html", size: 1987, mode: os.FileMode(420), modTime: time.Unix(1481245557, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHomeHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x92\x4d\x8b\xdb\x30\x10\x86\xef\xf9\x15\x83\xcf\x69\xd4\xec\xb1\x78\x05\x4b\xa1\x74\xa1\x86\x85\x2e\xbd\x2e\x13\x79\x6c\x4d\x23\x4b\x46\x1a\x3b\x4d\x43\xfe\x7b\x91\xed\x64\x3f\x4a\x6e\x62\x3e\x9e\x79\xe7\xd5\x9c\x4e\x35\x35\xec\x09\x0a\x13\xbc\x90\x97\xe2\x7c\x5e\x95\x35\x8f\x60\x1c\xa6\x74\x3f\x85\x91\x3d\xc5\x42\xaf\x00\x00\xde\xe6\x7a\x6c\xe9\x93\x25\xac\xaf\xd9\xa9\xc2\x6e\xf5\xf7\xd0\x51\xa9\xec\x56\x97\xa9\x43\xe7\x34\x27\x38\x58\x8a\x04\x62\x09\x2c\x61\x14\xe0\x54\xaa\x39\x39\x73\x55\xcd\xa3\x5e\xcd\xef\x5e\x3f\x5b\x4e\xc0\x69\xaa\x3f\xd0\x0e\xd8\x0b\xc5\x06\x0d\x41\x13\x22\x54\x18\x47\xf6\x9b\x52\xf5\x4b\xb3\xbd\xd3\x25\x82\x8d\xd4\xdc\x17\xaa\x41\x23\x81\xeb\x54\xe8\x6f\xcb\xab\x54\xa8\x4b\x65\xef\xf4\x05\xff\x8b\xe9\x00\x29\x0c\xd1\xd0\x1a\x2c\x27\x09\xf1\xb8\x06\xf4\x35\xe0\x50\xb3\x80\x0b\x6d\x9a\x26\x5d\x58\xb7\x66\xe5\xc2\x42\xff\x08\xed\x8d\x19\xc1\xd5\x33\x2c\x34\xd3\x2e\x3f\x1d\x9a\x3d\x18\x8b\xde\x93\x4b\xd0\x63\x92\x29\xbe\xfd\xbc\x87\x8e\x52\xc2\x96\xc0\x71\xc7\xb2\x29\x77\xf1\xd5\xd3\xe7\x00\x63\xc6\xf5\x91\x47\x14\xba\x02\xd6\x70\x0c\x03\x74\x43\x12\xd8\x11\x24\x6e\x3d\xd5\xc0\x1e\x0e\x2c\x76\x9e\x75\x4b\x38\xfb\x91\x85\x52\xa1\x9f\x16\xe4\xd7\x19\x09\x8f\x39\x81\xc2\xc1\xff\xbf\x52\x85\x3e\x0b\x9c\xed\x87\x05\x01\x12\xb2\x8a\xf8\x51\xdc\x1a\x42\x04\xc1\x3d\x01\x42\x3f\xec\x1c\x1b\x77\x04\x1c\x91\x1d\xee\x1c\x2d\xdd\xb9\x19\x3f\x76\xbe\xd7\x5c\x85\x38\x95\x99\xf9\xa6\x2e\x6a\x06\xf7\xe6\xe4\x1c\xe7\x3f\xb8\x6e\xfe\xe8\x25\x62\xee\x69\x49\x16\xcb\x9f\xaa\xe9\x04\xfd\x64\x98\xc5\x31\xab\x32\x21\x46\x32\x79\xd5\x52\x39\x7e\x8f\xbb\x3a\x65\x45\xfa\x2f\x4a\x1d\x78\xcf\x1b\x72\x64\x24\x44\xec\x70\x63\x42\x37\xc5\x54\x85\x7f\xb8\xe3\xbf\xf4\xf2\xd0\x34\x1c\x3b\xaa\x5f\x2a\xfc\x1d\x22\x0b\x67\x77\xab\x87\x2a\xbb\x08\x7d\x70\x8e\x7d\xfb\x3a\xa7\x54\x79\x81\xe5\xea\x4f\x27\xf2\xf5\xf9\xfc\x2f\x00\x00\xff\xff\xef\xcd\xfc\xf5\x8d\x03\x00\x00"

func templatesHomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHomeHtml,
		"templates/home.html",
	)
}

func templatesHomeHtml() (*asset, error) {
	bytes, err := templatesHomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/home.html", size: 909, mode: os.FileMode(420), modTime: time.Unix(1482043355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLogsIndexHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x4d\x6f\xdc\x36\x10\xbd\xef\xaf\x18\x28\x28\x7c\xa9\x28\x7b\x1d\xb8\x80\x22\x0b\x45\xd3\x43\x0b\x38\x45\xd0\xb4\x05\x7a\x1c\x89\x23\x89\x35\x45\x0a\x24\xa5\xf5\x82\xd0\x7f\x2f\xa8\x0f\xaf\xbc\xdd\x20\x70\xd0\x76\xf7\x42\xcd\x90\xef\xbd\x79\x33\x94\xbc\xe7\x54\x09\x45\x10\x59\x77\x94\x64\xa3\x71\xdc\x65\xd3\x32\xdf\xb1\xb2\x41\xa5\x48\xc6\x85\x7e\x8a\x4b\xad\x1c\x0a\x45\x06\xfc\x0e\x00\x80\x0b\xdb\x49\x3c\xa6\x50\x49\x7a\x7a\x37\x85\xc2\x2a\xae\xa4\x3e\xa4\x60\xf4\x01\x0e\x06\xbb\x39\xf1\x57\x6f\x9d\xa8\x8e\x13\x06\x29\x37\x9f\x89\xad\x43\xe3\xde\xed\xc6\xcf\xf1\xe4\xc0\xc5\xb0\xb0\xb5\x68\x6a\xa1\x52\xb8\xed\x16\xae\x39\x10\x1b\x51\x37\x2e\x85\x9b\xeb\x10\xff\x02\xd2\x16\xaf\xc0\xf2\xb1\x36\xba\x57\x3c\x2e\xb5\xd4\x26\x85\x37\xd5\x75\xf8\xcf\xe8\x85\x36\x9c\x4c\x6c\x90\x8b\xde\xa6\x70\xb7\xb2\x76\xc8\xb9\x50\x75\x0a\xd7\xec\xa6\x7b\x9a\xe3\x5f\x60\xc5\x73\xbf\x0a\xa9\xcb\xc7\x19\xee\x20\xb8\x6b\x82\xfa\xeb\x6f\xe6\xc0\xaa\xe5\x6e\x7f\x7b\x5b\x7c\xf7\xb5\x95\x32\xa5\xe3\x16\xcd\x20\xd4\xc2\xad\x3b\x2c\x85\x3b\x06\xd9\x77\x2f\x89\xf6\xfb\xfd\x2b\xd0\xd6\x5a\xbe\xf2\x74\x3a\x08\x2b\x1c\xf1\xcb\x28\x59\xb2\x8c\x9d\xf7\xa4\xf8\x38\xee\x4e\xa3\xb9\xcc\xcd\x34\x9b\xc1\xd3\x52\xa2\xb5\xf7\xd1\x33\x55\x94\x4f\x80\xdb\x5c\x87\x35\xc5\x0d\x21\x0f\xd9\xac\xb9\xc9\xdf\xcf\x1a\xe1\x41\xd7\x36\x4b\x9a\x9b\x3c\xb3\x2d\x4a\x99\xff\x40\x25\xf6\x96\xe0\x93\xc4\xf2\x11\x3a\x43\xad\xe8\x5b\x10\x16\x0a\x21\x25\x71\xe8\xc8\x40\x6f\xc9\x64\xc9\xbc\x3f\x4b\xb8\x18\xf2\xdd\x4c\xd8\xec\xf3\x8f\x7d\x21\x45\x09\x0b\x7c\x80\xde\xff\x53\xcd\x45\x83\x16\xd5\xe1\xe7\xbd\x41\x55\x13\xb0\x15\x66\x1c\x9f\x73\x13\xce\x64\xcd\x7d\x34\x8d\x65\x0a\xb1\xf7\x92\x14\xb0\x0f\xd4\x16\x64\xec\x38\x6e\xa0\xd6\x23\x67\x91\xe6\x6d\x9e\x21\x34\x86\xaa\xfb\x28\x91\xba\xb6\x89\xf7\xec\xe7\x1f\xc3\xd1\x37\xde\xb3\x5f\xb0\xa5\x71\xcc\x12\xcc\xb3\xa4\x79\x7b\x76\xb6\xcb\xbd\x67\x1f\x7b\xd3\x69\x4b\xec\x0f\x94\xfd\xb4\xb5\x3b\xdb\x95\xbc\x20\x3d\x7b\x5c\x7b\xba\x49\x9d\x1c\x34\x62\x40\x47\x17\x2c\xf4\x1e\x44\x05\xec\x4f\xdd\x9b\x65\xd3\xba\x07\xe2\x15\xec\x55\x2e\xc7\xb0\xf8\x7c\x09\xf2\xb5\x9e\xaf\xb4\xde\x8b\x0a\x94\x76\xc0\x7e\x42\xfb\x61\x9a\xf5\x71\xdc\x5c\xc1\xb9\xf4\xff\xb4\x45\x17\x25\x64\x5d\x9e\x51\x9b\x87\x81\x07\x34\x34\xe5\x71\x40\x21\xb1\x90\x04\x95\x36\xe0\x1a\x61\x61\x71\x0d\x8a\xe5\x22\x08\x07\x5c\x93\x55\x57\x0e\x1a\x1c\x08\xbe\x9f\xeb\x60\x59\x42\x6d\x1e\xda\xbe\xed\xe5\xbf\x3b\x23\x40\x8a\x9f\x3a\x7b\xca\x86\x8c\xb4\xb4\xed\x50\xe8\x65\x98\x8d\xf7\xbd\x31\xa4\xdc\xef\x96\x0c\x9b\xae\x70\x58\x3d\x63\x2c\xd2\x7e\xd3\x30\x08\x3a\x80\x6b\x08\x82\xb1\x53\xf1\xdd\x32\x76\x4b\xfd\xf6\x5b\x58\xdd\xbf\xf2\x9e\x3d\xe0\x51\xf7\x8e\x7d\x0a\xdf\xa8\x19\xf7\xd7\x07\x88\xc2\x27\xa3\xb3\xa9\x21\xe4\xd1\x38\x5e\xe5\xb5\x41\xe5\x00\xcb\x92\xac\x0d\x9d\x61\x2f\x4a\x0e\x1a\x27\xdd\xff\x97\x1c\x2b\x6a\x05\x42\x7d\x46\xc9\xc6\xdb\xf5\x39\xbc\x50\x67\x9b\x97\xa6\xfe\x1d\x00\x00\xff\xff\x4d\xdd\x48\x4d\x0f\x08\x00\x00"

func templatesLogsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLogsIndexHtml,
		"templates/logs-index.html",
	)
}

func templatesLogsIndexHtml() (*asset, error) {
	bytes, err := templatesLogsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/logs-index.html", size: 2063, mode: os.FileMode(420), modTime: time.Unix(1482043402, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"layout.html":                 layoutHtml,
	"assets/styles.css":           assetsStylesCss,
	"templates/factoid-info.html": templatesFactoidInfoHtml,
	"templates/factoid-list.html": templatesFactoidListHtml,
	"templates/home.html":         templatesHomeHtml,
	"templates/logs-index.html":   templatesLogsIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"styles.css": &bintree{assetsStylesCss, map[string]*bintree{}},
	}},
	"layout.html": &bintree{layoutHtml, map[string]*bintree{}},
	"templates": &bintree{nil, map[string]*bintree{
		"factoid-info.html": &bintree{templatesFactoidInfoHtml, map[string]*bintree{}},
		"factoid-list.html": &bintree{templatesFactoidListHtml, map[string]*bintree{}},
		"home.html":         &bintree{templatesHomeHtml, map[string]*bintree{}},
		"logs-index.html":   &bintree{templatesLogsIndexHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

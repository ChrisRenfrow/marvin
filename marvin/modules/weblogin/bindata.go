// Code generated by go-bindata.
// sources:
// layout.html
// assets/styles.css
// templates/factoid-info.html
// templates/factoid-list.html
// templates/home.html
// templates/invite-list.html
// templates/logged-out.html
// templates/login-altslack.html
// templates/logs-index.html
// templates/user-manage.html
// templates/zone2.svg
// DO NOT EDIT!

package weblogin

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _layoutHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x57\x7b\x73\xda\x3a\x16\xff\x3f\x9f\xe2\xd4\x73\x67\x21\x93\xda\xbe\x49\xfa\xc8\x36\x86\x1d\x1a\x68\x93\x5b\x9a\x47\xa1\xf4\x6e\x77\x76\x76\x84\x7d\x6c\x0b\x64\x89\x48\x32\x84\xf5\xf8\xbb\xef\xc8\xc6\xd8\x50\x3a\x37\x7b\xe7\xe6\x1f\xa4\xf3\xfe\x9d\x97\x95\x2c\x83\x00\x43\xca\x11\x2c\x46\xd6\x22\xd5\x16\xe4\xf9\x91\xf7\xa2\x7f\x77\x35\xfe\xe7\xfd\x00\x62\x9d\xb0\xee\x91\x57\xfd\x20\x09\xba\x47\x00\x00\x59\x06\x53\x26\xfc\x39\x58\x9a\x6a\x86\x16\x38\x90\xe7\x5e\x71\xee\x66\x19\x0d\xc1\x19\x9b\x73\x9e\x67\x59\x7d\x42\xa6\x30\xcf\x3f\x13\xb9\xa4\x1c\xbe\xe1\x14\x6e\xb8\x46\x19\x12\x1f\xb3\x0c\x79\x90\xe7\x9e\x5b\x59\x00\xe4\x81\x89\x64\xd7\x57\x80\x21\x49\x99\xb6\x95\x5e\x33\x54\xc6\xa9\xbd\x91\xf1\x18\xe5\x73\x90\xc8\x3a\x56\xc9\x8c\x11\xb5\x05\xb1\xc4\xb0\x63\xc5\x5a\x2f\xd4\x3b\xd7\xf5\x03\x3e\x53\x8e\xcf\x44\x1a\x84\x8c\x48\x74\x7c\x91\xb8\x64\x46\x9e\x5c\x46\xa7\xca\xd5\x2b\xaa\x35\x4a\x7b\x2a\x84\x56\x5a\x92\x85\x7b\xee\x9c\x3b\x6f\x5c\x5f\x29\x77\x4b\x73\x12\xca\x1d\x5f\x29\xab\x70\x5b\xfe\x51\xae\x31\x92\x54\xaf\x3b\x96\x8a\xc9\xf9\xc5\x2b\xfb\xf4\xf1\x22\x19\xff\x76\xd7\x1b\x3d\x5d\xcc\x4e\x7b\xe9\x09\x79\xfd\xad\x3f\xe1\xf7\xf4\x8c\xcd\x3f\x84\xab\xd5\xa0\x47\x2e\xe2\x7e\x3f\x98\x7d\x67\x8b\x21\x46\x4f\xf1\x6c\xf2\x79\x70\x1a\x46\xb3\x6f\xf7\x1f\x93\xf9\x7f\xd5\x5b\x0b\x7c\x29\x94\x12\x92\x46\x94\x77\x2c\xc2\x05\x5f\x27\x22\x55\x56\xf7\x2f\x43\x1b\x0a\xae\x6d\xb2\x42\x25\x12\x74\x5f\x39\x6f\x9d\x5f\x0b\xa0\x4d\xf2\xf3\xb0\xae\x96\xe1\xef\x8b\xc7\xc5\xf7\xef\x93\x87\x8f\x9f\xde\x8c\x7b\xf1\xeb\xfb\x09\xfb\x78\x17\x3e\xdc\x5e\x8f\x44\xff\xec\x69\x3a\x38\x79\x98\xdf\x3f\x5d\xf5\x3e\xb0\xdb\x01\x2e\xc5\xe0\xfa\x7c\xc4\x7e\x55\x74\x3a\xf1\xef\x1e\x26\xfc\xf6\x8f\xb0\x2a\x5f\xd2\x85\x06\x25\xfd\x67\x63\x9b\x3d\xa6\x28\xd7\xee\x99\x73\xe6\x9c\x6f\x2e\x05\x96\xd9\x1f\x40\xb9\x79\xf3\xe1\xf5\xdd\xa7\xc1\xd5\x70\xa2\x3f\xb9\xef\x87\x27\x17\x74\x34\xec\x0f\xae\xc5\x6a\xd4\x0b\xbf\x8a\xb7\x6f\xbe\x0f\xff\x7e\x32\xff\xd8\x8b\xc6\x5f\x02\xfa\x7e\x7d\x73\xfb\xe9\x37\xf2\x38\xbe\xbf\x76\x1f\x26\xb7\xa3\xd3\x49\x7f\xfa\x73\x28\x9e\x5b\xc2\x68\xd6\x6f\xb7\x5c\x26\xf1\xca\x89\x84\x88\x18\x92\x05\x55\x05\x24\x5f\xa9\x7f\x84\x24\xa1\x6c\xdd\xe9\x31\x8c\x24\xae\xc9\xc9\x88\x70\x75\x32\xba\xb2\x7e\xac\xff\x9f\xef\x19\x97\x28\x85\x5a\xb9\x25\xa7\xa8\x79\x35\xe7\xf6\xe1\x51\xac\x47\xd0\x4c\x76\x25\xe3\x55\x28\xc3\x94\xfb\x9a\x0a\x0e\x11\xea\xab\xd1\x97\x0f\x63\x31\x47\xde\x3e\x86\xac\x30\x23\x51\xa7\x92\x43\x88\xda\x8f\xdb\x96\xab\x50\x29\x2a\xb8\xeb\x2b\x19\x3a\x33\x25\xb8\xf5\x12\xb2\x44\x04\xf8\x0e\x5a\x8a\x24\x68\x97\x98\x5a\x2f\xc1\x97\x18\x20\xd7\x94\x30\xb5\xc7\xcb\x8f\x9d\x6d\x69\x75\x8c\xbc\x5d\x45\xd0\x96\xa8\x16\xc7\x90\x55\x4e\xcd\xb5\x70\xd2\x3e\xbe\x84\xff\x4f\x4b\x1b\x10\x46\xe9\xf2\x28\xaf\x11\x2e\x84\xd2\x7d\xa2\x49\x3b\x95\xec\x25\x04\x44\x93\x97\x20\x16\x86\xa5\x2a\xbc\x34\x84\xf6\x8b\x2d\x6d\x73\x80\x0e\x64\xf9\x65\xcd\x37\x9a\xc7\x85\xfe\x3e\x67\xa3\xe0\x98\xf5\x8b\xb2\xb6\x50\x11\xa0\x03\x1c\x57\x70\x5d\xde\xda\xc7\x07\x54\x13\xd4\xb1\x08\x6a\xcd\xf2\x0e\x1d\x68\xdd\xdf\x8d\xc6\xad\x03\x1a\x8d\x54\xd7\x6a\x0d\xa2\xd1\x6d\x16\xe0\xb2\x59\xd9\xdd\xaa\x3b\xbb\xa9\x35\x65\x2e\x38\x55\x7a\xcc\xdf\x1e\x24\x47\xa1\x6e\xb7\x7e\xb7\x8d\x15\xbb\x10\x36\xd5\xdf\x2a\x5e\xfe\xa0\x37\x15\xc1\x1a\x3a\x70\x37\x9d\xa1\xaf\x9d\x39\xae\x55\xbb\x48\xa8\x93\x90\xc5\xd6\x35\xb4\xe7\x4d\x9f\x8d\x80\x91\xfb\x22\xc0\xaf\x5f\x6e\xae\x44\xb2\x10\x1c\xb9\x36\xa2\x27\xd0\xea\xb4\xe0\xe4\x10\xd7\x18\xff\xd7\xfc\xdf\x8d\x48\xf2\x63\x67\x26\x28\x6f\xb7\xfe\xd6\x6a\x50\x77\x5a\xbd\xe8\x90\xaa\x0f\x4a\x99\xbd\x66\x0a\xc4\x50\x44\x22\xd5\xdb\x51\xd9\x76\x57\x3d\x26\x01\x2a\x2d\xc5\xda\x0c\x49\x6e\x06\xa5\x28\xe5\x3b\x68\xf5\x07\xc3\xc1\x78\x60\x26\x61\x37\xdf\x4d\xc8\x81\xf0\xd3\x04\xb9\x76\x98\xf0\x89\xe1\x3a\x12\x99\x20\x41\x7b\x27\x9c\x7a\x5b\x79\x6e\xf9\xcd\xf7\x4c\x7e\xbb\x47\xf5\xfc\x73\xb2\x9c\x12\x59\x7d\x82\x3d\x4e\x96\xe0\x33\xa2\x54\x67\xc3\x81\xf2\xc7\xa6\x7c\x89\x52\x61\xb5\x84\x02\xba\x95\xf3\x05\xd7\x84\x72\x94\x76\xc8\x52\x1a\x1c\x90\xd8\x98\x28\x5b\x62\xc3\x2f\x64\xc8\x9e\xc4\x54\x12\x1e\x6c\x77\x99\xd5\x2d\x9f\x18\x9e\x4b\x36\x36\xdd\x80\x2e\x1b\xe6\x69\xd0\xd9\xc6\xbf\x0d\x86\x31\xb2\x50\x58\x85\x5d\xdd\x9b\x5e\x53\xd6\x70\x5b\x09\x72\xb2\x6c\xc8\x64\x19\xac\xa8\x8e\xab\xad\xf8\x8b\x9f\x4a\x89\x5c\xc3\xbb\x0e\x38\xb7\x85\xc2\xd5\x86\x52\xf0\x25\xe1\x11\x56\x9c\x1b\x8d\x89\xaa\x16\x6d\xc3\x20\x0d\x01\x1f\x8d\x50\x82\xb5\x41\x7b\x4f\xce\x63\xb4\x0a\x8e\xf8\x9a\x2e\xd1\xea\x7a\x64\x93\x90\x2c\x73\xbe\x7e\x19\xe6\xb9\xd5\xcd\xb2\xc2\x8c\x79\x68\x91\xae\xe7\x32\xda\xdd\x73\x66\x83\x79\xa3\x1d\xb2\xfe\x67\xcd\xd5\xdf\x8e\x0d\x9c\x92\xb2\xfb\xc2\x2b\x8b\x94\xb2\x67\x24\xbb\x3a\x4a\x1a\xc5\xda\xda\x77\x68\x92\xe5\xf4\x37\x39\xfe\xaa\x50\x3a\x37\x5c\x4b\x32\x14\x11\xe5\x07\x51\xed\x10\x0a\xe2\x0b\xdb\x86\x71\x4c\x15\x24\xc6\x03\x4c\x11\x56\x52\xf0\x08\x6c\xfb\x80\x30\x4d\x22\x88\xd1\x08\x76\xac\xf3\x33\xeb\x87\x47\x8a\x43\x8d\x7b\xe7\xd5\x99\x13\x4a\x37\x55\x28\x95\x9b\x60\x40\xd3\xe4\x3f\x59\xf6\xb3\x38\xf3\xdc\x99\x2d\x30\xb2\xc0\x3d\xe0\xb0\x2a\x42\x61\xac\xa8\xc0\x4f\xad\x6c\xdb\xbf\xce\xf0\x3e\xe0\xc3\x19\xd8\xfa\xd8\x5f\x38\xc5\xe0\xb0\x62\x3f\xd9\xa1\x90\x89\x05\x82\xfb\x8c\xfa\xf3\x8e\x55\xef\xad\xcb\xed\xca\x23\x4c\xe1\xa5\xd5\xf5\xb6\x9d\x19\x12\x08\x89\xbd\x10\x2b\x94\xb6\x08\x43\xf3\x2a\xa2\xdd\x67\x84\xf9\xec\xbe\x1c\x69\x22\x75\x91\x83\x4d\x87\x16\x67\x18\x8a\x08\x6e\xf8\xb3\x9b\xb4\xee\xc4\xe6\xe2\x28\x8f\x9e\xcb\xc9\xd2\xec\xc1\xad\x56\x35\xf2\xbf\x44\x4c\x4c\x09\x2b\x46\xbd\x6c\xf0\xcd\xa6\x34\x7b\x0e\xb9\xb6\xc0\x79\x2f\x82\xb5\xd9\xe5\xc5\x4b\x29\x3e\xed\x7e\xa6\x4a\x51\x1e\xc1\x46\xe2\x85\xe7\xc6\xa7\xc5\x8e\xdd\x9f\x11\xcf\x2d\xd7\xaf\xe7\x96\xff\x88\xd5\x9c\xff\x05\x00\x00\xff\xff\x0e\xe5\x48\xc2\xc0\x0d\x00\x00"

func layoutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_layoutHtml,
		"layout.html",
	)
}

func layoutHtml() (*asset, error) {
	bytes, err := layoutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layout.html", size: 3520, mode: os.FileMode(420), modTime: time.Unix(1483767535, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsStylesCss = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\xc1\x6e\xe3\x36\x10\xbd\xeb\x2b\x06\xbb\x28\xb6\xf5\x5a\xb6\x64\xd9\xb1\xac\xa0\x01\x76\x9d\x05\x5a\xa0\xe8\xa1\x59\xf4\x52\xf4\x30\x22\x47\x12\x11\x8a\xd4\x92\x94\x1d\x6f\x91\x7f\x2f\x44\xc9\x89\xa3\xda\x69\x8e\x1c\xbe\xf7\x66\x38\xf3\x86\xf3\x09\xfc\x42\xc8\xc9\xc0\x64\x1e\xe4\x9a\x1f\xe0\x9f\x00\x00\x20\x47\x76\x5f\x1a\xdd\x2a\x1e\x32\x2d\xb5\xc9\xe0\x7d\x41\x05\x2b\xd8\x75\xf0\x18\x28\xdc\xcd\x14\xee\x72\x34\xa1\x50\x3b\x32\x96\x2e\xb3\x96\xb7\xc9\x66\xf9\xf9\xba\xbf\xd6\x86\x93\x09\x0d\x72\xd1\xda\x0c\xa2\x3e\xda\x68\x2b\x9c\xd0\x2a\x83\x42\x3c\x10\xef\x83\x7b\xc1\x5d\x95\x41\x1c\x45\x3f\xf4\x81\xef\xa1\x50\x9c\x1e\x7c\x28\x7a\x21\x37\x40\x23\x88\x60\xd1\x3c\xbc\xb8\x1a\x8a\x30\x65\x8e\x3f\xae\xd7\xd3\xd5\x7a\xba\x5e\x4d\xa3\xd9\xea\xa7\xe0\x31\x18\xbf\xe0\x78\x56\xb8\xbb\x99\x21\x73\x62\x47\x37\x38\x85\x37\xc1\xb2\x42\xb3\xd6\xbe\x15\x5c\xe9\x1d\x99\xcb\x1d\x4b\xbe\x24\x71\xb2\xed\xdf\x51\x68\xe5\xc2\x3d\x89\xb2\x72\x19\xe4\x5a\xf2\xeb\x93\xca\x3b\x55\x29\x6e\x44\x5d\xfe\x55\x79\xc8\xcf\xef\x92\xc5\xbb\xbf\x07\xe5\x1a\x4d\x29\x54\x68\x7a\xee\xea\xd8\x19\x2e\x6c\x23\xf1\x90\x81\x50\x52\x28\x0a\x73\xa9\xd9\xfd\x5b\x54\x3f\x02\x0e\xca\x17\x24\xfc\x2c\x91\x73\xa1\xca\x50\x52\xe1\x9e\x06\x3c\x54\xd2\xc7\x7c\x21\x8f\xc1\x7c\x02\x5f\x75\x03\xba\x00\xa6\x95\x23\xe5\x3a\xff\xcd\x1a\x2c\x29\xac\x7a\x3f\xbe\x78\x85\xd3\x4d\x06\xeb\xa8\xe7\xbe\x80\x55\xf1\xeb\x55\x8d\xe0\xb6\x46\x29\x07\x86\x6f\xae\x15\xdf\x29\x83\x38\x3d\xf6\xe7\x38\x85\x34\x4d\xcf\x54\xff\x04\xf3\xdc\x02\x6b\x21\x0f\x19\x7c\xf8\x24\xa9\x34\x74\x40\xb8\x43\x65\xe1\x6e\xfb\x61\x0a\x16\x95\x0d\x2d\x19\x51\xf8\x1a\x72\xa7\xc2\xc6\x88\x1a\xcd\x2b\x1b\x96\xa4\x9b\x75\x7a\x7b\xce\xc1\xef\x97\xdb\xcd\x55\xba\x19\x4b\xfd\xaf\x95\x8a\xf5\xe6\xaa\x38\x2b\x98\x2c\x56\x7c\xb5\xea\x04\xbb\x59\xdc\x11\xeb\x57\x70\x8b\x52\xea\xd6\xd9\x8e\xf2\x59\x6b\x67\x9d\xc1\x06\x6e\x35\xf3\x91\xad\x6e\x0e\xde\x50\xb0\x88\xe2\x38\x5c\x44\xf1\x15\x7c\xdd\x0b\xe7\xc8\x4c\xe1\x57\xc5\x66\x1d\xe8\x37\xc1\x48\x59\xca\x60\xbb\x85\x4f\xce\x19\x91\xb7\x9d\x36\x24\xb3\xa8\x1b\x72\x30\x9f\x04\x30\x39\x49\xe4\x8f\xbf\x6b\x07\xdf\x5a\xe1\x08\x50\x92\x71\x76\x0a\x79\xeb\x80\xb5\xd6\xe9\x1a\x50\x71\xa8\x48\x36\x45\x2b\x41\x69\x47\x16\x0a\x6d\xa0\xd0\xf2\xde\x82\x21\xec\x1c\x07\xae\x22\xe0\x9a\xd9\x59\xa7\xf6\x07\x7d\x6b\x85\x21\x0b\x08\x39\x5a\xf2\x02\xb5\xe6\xa2\x10\x64\x80\x49\xb4\x1e\xe6\x6b\x81\xad\xae\x6b\xad\xc0\xba\x83\x1c\x84\x3b\x87\xb8\x43\x43\xd6\x7b\x32\xb7\x21\xeb\x6b\xf5\x7d\x1e\x1c\x9e\xc1\x22\xea\xbd\xd0\xfb\xa3\x3f\xf7\x8e\xef\x3b\x9d\x41\xdc\x3c\x80\xd5\x52\x70\x78\x4f\x44\xcf\x37\xde\x4b\xc7\x6f\x6b\x58\xcc\xd1\xd7\x98\x0c\x4e\x3f\x49\x5e\x2d\x7d\xfe\xd3\x85\x88\x9e\xf3\x87\xb9\x76\x4e\xd7\x4f\xfb\x75\xca\x6c\x32\x89\xd6\x85\xac\x12\x92\x9f\x6a\x1c\x29\xd1\x98\xc0\x34\xef\x7f\xf4\xf3\x55\xf9\xe5\xed\x5c\x40\x0a\xda\x06\x6c\x83\x8c\x20\x27\xb7\x27\x52\x50\xb7\xd2\x89\x46\x12\x0c\x62\xff\x69\xe2\x47\x18\xb7\xf4\xf4\x49\xe1\xea\x39\xc7\x9f\x68\x04\x76\xd6\x19\x6b\x84\x1c\x55\x39\xf8\xfe\xb4\xa5\x47\x6f\x33\x5a\xa6\xcb\xe5\xe8\x55\x47\xd2\xd0\xc7\xd7\xb1\x7b\x34\xaa\x73\xd5\xa5\x0c\x88\x57\xeb\x28\xbd\xc4\x1a\xa5\x38\x0f\x16\xaa\xd0\x17\xf5\xe3\x3c\x8d\x36\x74\x96\x32\x12\x7f\x46\xce\x27\xf0\x45\xf1\xa7\xc5\x82\xc9\xfc\xdf\x00\x00\x00\xff\xff\x28\x16\x25\xf6\xdd\x07\x00\x00"

func assetsStylesCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsStylesCss,
		"assets/styles.css",
	)
}

func assetsStylesCss() (*asset, error) {
	bytes, err := assetsStylesCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/styles.css", size: 2013, mode: os.FileMode(420), modTime: time.Unix(1484273927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFactoidInfoHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x83\xd9\xeb\xda\xe4\x1a\xb4\x62\x61\x61\xa1\x50\x7a\x68\xd3\x73\x19\xa4\x97\x5a\xd4\x96\x8d\xa4\x24\x84\x41\xff\xbd\x44\x56\x92\xb6\xbe\x78\xf4\xe6\x7b\xe8\xf1\x24\x62\xb1\x77\x1e\xd4\xc6\x74\x1e\x11\xdb\x9c\x1b\x55\x46\xdd\x34\xaa\xaf\x93\x08\xbc\xcd\xb9\xb9\xd3\x66\xf6\x09\x3e\x15\xdc\xba\x23\x99\x91\x63\xfc\x53\x64\x76\x1e\xa1\xbd\x98\x4e\x2e\x0d\xd4\xfd\x67\x93\x66\x67\x7f\x90\x0b\xbf\xe3\xf7\x00\xb6\x85\x25\x22\x52\xc3\x46\x57\x76\x4b\x22\x57\xdf\x13\x4f\xc8\x59\xf5\xc3\x46\x37\xaa\xb7\xee\xa8\x9b\x15\x5f\xf4\xe3\x6c\x3e\x50\x60\xb7\xa7\xee\x21\xae\xe7\x9c\xcf\x88\x22\x18\x23\x72\xf6\x73\xcd\xae\xfa\x45\xdf\x7c\x1c\x13\xc1\xba\xb4\xa5\xbf\x35\xe5\x21\x22\xd0\xaf\x6e\x07\x9e\xa8\xbb\xec\x5f\x23\x42\xce\x22\xdd\x7a\xff\xb5\x01\xaa\x9f\xf3\x24\x62\x06\xf6\x1e\xe3\x9b\xe7\x09\xdf\xcc\xff\xd6\xc5\x17\x9e\x13\x89\x04\x8c\xc9\x4d\x58\x99\x9d\x9b\x10\x13\x4f\x4b\xcd\x56\xc3\x05\x5c\x1b\x8a\xf3\x21\x18\xb4\x5a\x99\xd9\x42\x8b\x74\xcf\x7c\x7a\x29\xda\xc5\x51\x44\xd5\x2f\x01\xb7\x5a\xee\xaf\x54\xfe\x9f\x01\x00\x00\xff\xff\xf6\x34\xd0\xe9\xdb\x01\x00\x00"

func templatesFactoidInfoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesFactoidInfoHtml,
		"templates/factoid-info.html",
	)
}

func templatesFactoidInfoHtml() (*asset, error) {
	bytes, err := templatesFactoidInfoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/factoid-info.html", size: 475, mode: os.FileMode(420), modTime: time.Unix(1481245502, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFactoidListHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x55\x4d\x6f\xdc\x36\x10\xbd\xeb\x57\x4c\x16\x45\xd0\x02\x2b\xa9\xf9\x38\x39\x8c\x90\x20\x40\x01\x03\x4e\x0f\xb5\x8d\xa2\xa7\x78\x56\x1a\x49\xac\xf9\xa1\x92\xd4\xae\x05\x42\xff\xbd\x20\x45\xad\xb5\x75\x72\xe9\x4d\x1a\xce\xcc\x7b\xf3\xe6\x89\xf2\xbe\xa1\x96\x2b\x82\x9d\x75\x93\x20\xbb\x9b\xe7\x8c\xc5\xc7\x2a\x1b\x45\xd1\x62\xed\x34\x6f\x72\xc1\xad\x03\x9f\x01\x00\x0c\xd8\x34\x5c\x75\x57\xf0\xeb\x87\x6c\x7e\x91\x23\x78\x4a\x0b\x6f\x79\x6c\x74\x05\x4a\x2b\xfa\x10\xa3\x12\x4d\xc7\x55\x2e\xa8\x75\x57\xf0\x76\x78\xba\x88\x1a\xde\xf5\x6b\x78\xce\x5e\xf4\x2d\x04\x5a\x97\x4b\xdd\xf0\x96\x53\x93\x60\x5a\xa1\xd1\x5d\x41\x2c\x0d\x55\xac\x4c\xe4\xbd\x27\xd5\xcc\x73\xf6\x3c\x60\xad\x95\x23\xe5\xe2\x84\x0d\x3f\x42\x2d\xd0\xda\x8f\x31\x8c\x5c\x91\xd9\x55\x17\xf1\x01\x3b\xca\x7b\xc2\x26\x9e\x04\x2c\xd6\xbf\xa9\x7e\x5b\x48\x59\x56\xf6\x6f\x2a\x66\x25\x0a\x51\x7d\x86\x13\x4e\xe0\x34\x58\xa7\x0d\x01\xaa\x06\x0c\x39\xc3\xe9\x48\xe0\xe8\xc9\xb1\x72\xc9\xcb\x58\xd9\xf0\xe3\x25\xca\xc1\xe6\x35\x0a\xa1\x47\x07\xcf\x8f\x39\x57\xad\x3e\x83\xbe\xaf\xee\x2d\x57\x1d\x6c\xa0\xdf\xa7\xb3\xa1\xba\xc5\x09\x58\xad\x1b\xaa\x5e\x25\xbd\x14\x4a\x62\x65\x0c\x01\x57\x80\x6a\x82\xba\x47\xa5\x48\xc0\xa9\x27\x43\xf0\x15\xcd\x91\x2b\xe0\x36\x50\x36\xa3\x02\x84\x54\x5a\xc0\x75\x0b\xae\xa7\xf5\x1d\x1c\x3e\x92\x05\x34\xdd\x28\x49\x39\xbb\x5f\x0c\x60\xf4\x91\x37\x14\x12\x25\x60\xeb\xc8\xc4\x9a\x80\xbb\x07\x3b\x60\x4d\xb9\xa5\x01\x0d\x3a\x6a\x0a\xb8\xeb\x69\x25\xb8\xb2\x62\x24\x2b\x39\x5a\xc7\x4a\x92\x15\x1c\x08\xd0\xc5\x0e\x47\x32\x13\x1c\xa8\xe3\x4a\x85\x79\x75\xe4\xb2\x18\x84\xac\xc5\x8e\x42\x37\x6e\x03\x73\x14\x56\x43\x50\x8b\x1a\x40\x38\xa0\xea\xf2\x75\x06\x56\x0e\x67\x75\xfe\xd2\x23\xd4\xa8\x96\xf4\x8b\x51\xe1\x30\x81\xc5\x29\xe0\x2c\xec\x3e\xc9\x45\x96\xf5\xbc\x23\x07\x2f\x15\x2d\xe0\xb3\x85\x03\xb5\xda\xd0\xfe\x2c\xc4\x59\x9f\x08\x8b\x16\x94\x36\x12\xc5\xc2\xe4\xff\xee\xfc\x4f\xc3\xdd\x0f\xb7\x7e\x6f\xa3\xfc\xff\xa1\x6e\x48\x92\x3c\x90\xd9\xf2\x86\xe4\xfa\x55\xfb\x5a\x4b\x19\x0c\x1a\xdc\x4a\x6e\xb3\xfa\xad\x6c\xd7\x2d\x4c\x7a\x04\x45\xd4\x5c\xd8\x21\xf5\x0a\xc5\xe9\xab\x01\x45\x27\xc1\x15\xd9\x3d\x34\x1a\x5c\xcf\xed\xd5\x32\xf5\x60\xa8\xfa\x01\x3b\x7a\x42\x39\x08\x82\xd7\x6f\xb2\x87\x87\x87\xec\xeb\x28\x1c\x0f\x3d\xb2\x2f\x4b\xfb\x10\x4d\x74\x59\x19\xfa\x7c\x8f\x96\x0c\x55\xa1\x8b\x5c\xcb\x61\x40\xe3\xec\x1e\xfe\x1e\xad\x03\x6c\x82\x2f\x5e\xbf\x4d\x8e\x39\x69\xf3\x68\xa1\xd5\x06\x50\x88\x55\x03\x1b\x3e\x8f\xf4\x31\xe4\x70\x18\x1d\x28\xed\x42\x52\xc4\xdb\x7a\xca\xee\xc3\x56\x5d\x4f\x13\xa0\x38\xe1\x64\x61\x4c\x0b\x20\xe5\xb8\xa1\xd5\x9f\xaf\xb6\x1b\xcf\x58\xff\x6e\xbd\x2e\xe0\x86\x07\xbb\xf7\xef\xaa\x8c\x8d\x62\xf5\xc1\xf6\x82\xdb\x85\x1b\x0b\x0c\xaa\x8e\xa0\x08\xd9\x30\xcf\x19\x00\x13\xbc\x62\x08\xbd\xa1\xf6\xe3\xae\x5c\xe9\x94\xde\xf3\x16\xe8\x1f\x28\x6e\x6b\x3d\xd0\x97\xf4\x79\xef\x76\xf3\xfc\xcd\x7b\x12\x96\xe6\xd9\xfb\x8b\xc3\x10\x88\x17\x62\xe9\x7d\x91\x58\xfd\x8e\x92\xe6\x39\x79\x0e\x92\x99\xbc\x87\xed\x39\xcc\x73\xda\x45\xc4\x54\xf4\x1d\x4c\x66\x07\x54\xeb\x50\xdc\xe6\xe9\xba\xc9\xb5\x12\xd3\xae\x7a\x41\x84\x95\x21\xbf\x4a\x7c\x58\x89\x2b\x81\x88\x50\x5c\xdb\x1b\x5d\x3f\x52\x33\xcf\x3f\x8b\xf8\xf0\xcb\x7a\x95\x27\x9a\x5b\xb4\x8b\x5f\xc2\xae\x0a\xaf\x70\xfe\x43\x1c\x26\xf8\xe4\xfd\x89\xbb\x3e\xec\xcb\xc0\x4f\xc5\x1d\xa1\x84\xe2\x06\xad\xbb\xb7\x64\xa2\x48\x8b\x08\x97\x10\x10\x9c\xe1\x7d\x9a\xe3\x5b\xfc\x8e\xb6\xc5\xe7\x51\xc0\x7b\x43\xc2\x71\x49\xcb\xc1\x1d\x97\x64\x1d\xca\xe1\x3c\xe5\x4a\x7a\x30\xb4\x72\xb6\x7a\x34\x35\xed\xaa\x55\xef\xe2\x0f\x3c\xdd\xc6\xd8\x59\xeb\xb3\xef\x59\x29\x78\x74\x06\xa9\x26\x38\x82\x95\xe3\xf3\x7f\x24\x91\xfe\x37\x00\x00\xff\xff\x43\xa3\x15\x02\xc3\x07\x00\x00"

func templatesFactoidListHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesFactoidListHtml,
		"templates/factoid-list.html",
	)
}

func templatesFactoidListHtml() (*asset, error) {
	bytes, err := templatesFactoidListHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/factoid-list.html", size: 1987, mode: os.FileMode(420), modTime: time.Unix(1481245557, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHomeHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x92\x41\x6b\x1b\x31\x10\x85\xef\xf9\x15\xd3\x3d\xa7\x56\x9d\x63\x51\x04\xa1\x50\x1a\xe8\x42\x20\xa1\xd7\x30\x96\x66\x57\x13\x6b\xa5\x45\xd2\xae\x9b\x1a\xff\xf7\x22\xad\xed\x24\x04\xdf\x84\x66\xf4\xbd\x79\x4f\xb3\xdf\x1b\xea\xd8\x13\x34\x3a\xf8\x4c\x3e\x37\x87\xc3\x95\x34\x3c\x83\x76\x98\xd2\x6d\xbd\x46\xf6\x14\x1b\x75\x05\x00\xf0\xbe\x36\x62\x4f\x5f\x2d\xa1\x39\x57\x6b\x87\x5d\xab\x5f\x61\x20\x29\xec\x5a\xc9\x34\xa0\x73\x8a\x13\xec\x2c\x45\x82\x6c\x09\x2c\x61\xcc\xc0\x49\x8a\xa5\xb8\x70\x85\xe1\x59\x5d\x2d\xe7\x51\x3d\x59\x4e\xc0\xa9\xf6\xef\x68\x03\xec\x33\xc5\x0e\x35\x41\x17\x22\xb4\x18\x67\xf6\x2b\x29\xc6\xe3\x63\x7b\xa3\x24\x82\x8d\xd4\xdd\x36\xa2\x43\x9d\x03\x9b\xd4\xa8\x9f\xc7\x93\x14\xa8\xa4\xb0\x37\xea\x84\xff\xc3\xb4\x83\x14\xa6\xa8\xe9\x1a\x2c\xa7\x1c\xe2\xeb\x35\xa0\x37\x80\x93\xe1\x0c\x2e\xf4\xa9\x2a\x9d\x58\x97\xb4\x4a\x63\xa3\x7e\x87\xfe\x82\x46\x70\x66\x81\x85\xae\x7a\x79\x74\xa8\xb7\xa0\x2d\x7a\x4f\x2e\xc1\x88\x29\xd7\xfb\xf5\xb7\x2d\x0c\x94\x12\xf6\x04\x8e\x07\xce\x2b\xb9\x89\x6f\x99\x3e\x05\x98\x0b\x6e\x8c\x3c\x63\xa6\x33\xe0\x1a\x5e\xc3\x04\xc3\x94\x32\x6c\x08\x12\xf7\x9e\x0c\xb0\x87\x1d\x67\xbb\x68\x5d\x1a\x9c\xfd\xcc\x99\x52\xa3\x1e\x8e\xc8\x1f\x0b\x12\xee\x4b\x01\x33\x07\xff\xd9\xd2\x23\x39\xd2\xb9\xe6\xf4\x12\xd8\x43\x33\x4e\x1b\xc7\xba\xf9\x34\x17\x94\xcf\xfe\xf2\x41\xba\x0d\xe5\xfb\x03\xe8\x65\x35\x4e\xd0\xc9\xbd\xdb\x1c\xc7\x25\xca\xb3\x81\x7b\x9f\x23\x96\x37\x3d\xe5\x63\x72\x0f\x6d\xdd\x24\x5f\x7d\x5b\x9c\x09\x10\x74\x88\x91\x74\x99\x58\x0a\xc7\x1f\x71\x67\xc3\x36\xe7\xf1\xbb\x10\x3b\xde\xf2\xaa\xba\x08\x11\x07\x5c\xe9\x30\xd4\x3b\xd1\xe2\x5f\x1e\xf8\x1f\x3d\xdf\x75\x1d\xc7\x81\xcc\x73\x8b\x2f\x21\x72\xe6\x12\x52\x7b\xd7\x96\x30\x60\x0c\xce\xb1\xef\xdf\x74\xa4\x28\x06\x8e\xcb\xbb\xdf\x93\x37\x87\xc3\xff\x00\x00\x00\xff\xff\x76\xc3\x87\x61\x54\x03\x00\x00"

func templatesHomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHomeHtml,
		"templates/home.html",
	)
}

func templatesHomeHtml() (*asset, error) {
	bytes, err := templatesHomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/home.html", size: 852, mode: os.FileMode(420), modTime: time.Unix(1483755871, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesInviteListHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x58\xeb\x6e\xdb\x38\x16\xfe\xef\xa7\x38\x75\xbb\x63\x1b\x1b\xc9\x49\x2f\x83\x81\xad\x18\xd3\x4d\x5b\x4c\x16\xe9\xec\x60\x9a\x62\x7f\x0c\x06\x8b\x63\xe9\x48\x66\x42\x91\x02\x49\xf9\xb2\x82\x80\x7d\x9a\x7d\xb0\x7d\x92\x05\x29\xca\x96\x2f\x4d\x53\x14\x49\x7e\xd8\xa6\xce\x39\xdf\x77\x2e\xfc\x48\xbb\xaa\x12\x4a\x99\x20\xe8\x6b\xb3\xe1\xa4\xfb\x75\xdd\x8b\xdc\xdb\x59\x2f\xcc\x83\x78\x81\x42\x10\x87\xaa\x07\x00\x90\xa3\xca\x98\x98\xc0\x9b\x62\x0d\xaf\x8a\x35\x9c\x4f\xdd\x72\xca\x69\x1d\xcc\x51\x33\x3d\x81\x18\x79\x3c\x7c\x73\xfe\x17\x08\xe0\xc7\x62\x3d\xea\x18\x64\x4a\xae\x26\x70\x31\xed\xb9\xa5\x39\xc6\xf7\x99\x92\xa5\x48\x82\x58\x72\xa9\x26\xf0\x3c\x4d\xd3\xc6\x7c\x2e\x55\x42\x6a\x02\x17\xc5\x1a\xb4\xe4\x2c\x81\xe7\xe9\xb9\xfd\xef\x3e\x0e\x14\x26\xac\xd4\x13\x0b\xd3\xc6\x94\xeb\x40\x2f\x30\xb1\x38\xe7\xf0\xb2\x58\x3b\xa2\x2a\x9b\xe3\xf0\xfc\xcc\xfe\x87\x2f\x7f\x1c\x4d\x7b\x75\x27\xb1\x60\xa5\xb0\xf0\xd9\x15\x52\x33\xc3\xa4\x98\x80\x22\x8e\x86\x2d\xa9\xc1\x2b\x30\x49\x98\xc8\x26\x70\xf1\xc6\x42\x75\xdd\x61\xf1\x6a\xaf\x34\x81\x91\xc5\x64\x5b\x16\x29\x4c\xa0\xd9\xbf\x69\x02\x2f\x5f\x7b\xcf\x3b\xc9\x44\x30\x37\xe2\x08\x12\xe7\x5a\xf2\xd2\x78\x48\x17\xe6\x42\x51\xde\x7c\x54\x2c\x5b\x98\x16\xdf\x3d\xa7\xb5\x09\x8c\x42\xa1\x53\xa9\xf2\x09\x70\xb9\x22\x15\xa3\xa6\x03\x7a\x61\x4e\x06\x3d\x56\x43\xc7\x76\x76\x02\xcc\x20\x67\xf1\xb1\xb1\xd6\x98\xd1\x9e\xbd\xa3\x7f\xf1\x53\x9b\x38\xe5\x73\x52\x41\x2c\x4b\x61\x4e\x98\xbd\x6e\xf9\xb5\x2d\xfd\xc9\xfd\x59\x57\x4d\xb1\x4d\xf4\xb9\x07\xd3\xde\x3b\x61\xba\xe0\xb8\x99\xb8\x11\xe9\x0c\x4b\xca\x6d\x13\x95\x5c\x81\x6d\x50\xf3\xe0\xae\xd4\x86\xa5\x9b\x20\x96\xc2\x90\x30\x13\xd0\x05\xc6\x14\xcc\xc9\xac\x88\xc4\x74\x6f\x42\xcf\x21\xb0\x03\xfa\xf2\xbc\x21\x1e\x8d\xfd\x48\x57\x15\x89\xa4\xae\x7b\xbb\xb1\xf7\xd1\xdc\xdc\x27\x6c\x09\x31\x47\xad\x2f\xdd\x32\x32\x41\xaa\x3f\xdb\x5b\x2f\x30\xa3\x60\x41\x98\xb8\x27\x16\x32\x5a\x5c\xcc\x7e\x53\x6c\x89\x86\xe0\xca\x67\x17\x8d\x17\x17\xb3\x48\xe7\xc8\xf9\xec\xef\x92\x09\x28\x0b\x58\x90\xa2\x67\xd1\xb8\x59\xec\x45\xe3\x84\x2d\x7d\x80\x4e\xf8\xb9\x0e\x62\xe4\x5c\x96\x06\x76\x6f\x03\x26\x52\xe9\xd1\x1a\xc4\xd7\xb3\x2b\x45\x68\x98\xc8\xe0\x5a\x2c\x99\x21\x8b\xf8\xba\x63\x51\xcc\x6e\x25\x60\x92\xc0\x46\x96\x0a\x0a\x4f\xaf\xed\xb4\x91\x60\x16\x4c\x83\x4d\xe6\x0c\x52\xa6\xb4\x01\xe6\xe2\xc0\xcf\x39\xaa\x25\x13\x80\x22\x01\x8d\x1b\x18\xa6\x52\x01\xad\x31\x2f\x38\x8d\x26\xd1\xb8\xd8\x03\x89\x62\x99\xd0\xac\xf5\xc9\xf1\x9e\x02\x1f\x67\xa2\x65\x1c\xdb\x4d\xfc\x5c\xa1\x48\x64\x0e\x1f\x4a\x33\x97\xfc\x19\xbc\x55\x0a\x45\x46\x90\x61\x4e\xfa\x0c\x0c\xf2\x7b\xc0\xb9\x4d\xb8\xf1\x88\xc6\x2e\xe6\x21\xd2\xc7\x06\x62\xc5\x38\xb7\xbb\xc6\x00\x42\x3b\xae\x2e\x9b\x5d\x72\x1b\x59\x82\x2e\x28\x66\x29\xa3\x04\x86\x0d\x45\xcf\xc2\x07\x1f\xb9\xf4\x0a\x92\x05\x27\x88\x51\x80\xdd\x96\xc0\x04\x48\x41\x20\x53\x30\x2b\x09\x2b\xdc\xe8\x83\x7c\x25\x9f\x45\x9c\xcd\x3e\x91\xb0\x7a\x00\x28\x80\x72\x79\xc7\x40\x11\xba\xe1\x06\x29\xe0\x13\xc7\xf8\xbe\xa1\xe9\x2b\x61\x16\x94\x1f\x70\x0c\xa3\x31\x67\x9d\xc0\x9c\xcd\x6e\x3b\x19\x38\x6f\x2c\x0a\x42\x65\x43\x76\x5a\x75\x40\x3b\xe6\x2c\xbe\x77\x81\xe7\xa5\x31\xd6\x54\xc2\x9c\x3c\x70\xd2\xa0\x44\x63\xc9\xfd\x9c\x7d\xe7\xc8\xfd\xc3\x2c\x48\xc1\xb5\x48\xe5\xa9\x61\x53\x94\xcb\x25\x01\x6e\xb3\x48\x95\xcc\x1b\xee\x9c\x69\x73\x06\xa5\x26\xd8\x9f\x17\x45\x4b\xb9\x9d\x18\xdf\x1a\x08\x1a\x9f\x58\xe6\xb9\xcd\xd6\xd5\x22\x46\x11\x13\x07\x6c\x8b\x8a\xb6\xda\xfa\x54\xe3\x2d\x08\xb3\xc3\x1c\x1e\x0e\xd0\x75\xc7\x51\x93\x30\xd6\x1b\x8f\x76\x86\x83\x13\xd2\x80\x5e\xc8\x95\xdd\xb5\xae\xfe\x04\x2b\x9a\x03\x13\x86\x54\x8a\x31\x4d\x1d\x54\x5e\x6a\xd3\xb4\xbe\x25\xd2\x0e\x24\xf3\x63\xb0\xe3\xe0\x4b\xdf\x8b\xbc\x0c\x02\x4b\x2e\xfb\xad\x14\xfa\x32\x57\x15\x34\x3b\x23\x6c\x55\x04\xea\xfa\xa8\x5b\x5b\xb9\xee\x43\x82\x06\x03\x1b\xa8\xaa\xc2\xeb\x77\x75\xdd\x6d\xd7\x29\x0f\x77\xd6\xed\xf5\xf4\xd5\xac\xaa\xc2\x5f\x31\xa7\xba\x86\x48\x17\x6e\xa2\x1a\x9f\x8e\xce\xf7\x67\x11\x6b\xd7\x53\x84\x14\x83\x52\x5b\xf1\x8b\xc6\x6c\x06\x55\x15\x7e\x74\xb6\x57\xd6\xb4\xae\xa3\xb1\x0d\x33\x8b\xc6\x8b\x57\x1d\xa0\x6e\xe8\xf6\x04\xec\x10\xa9\x2a\x60\x29\xbc\x08\x7f\x95\xe6\x46\x66\x19\x25\xd7\x02\x02\x9f\xfb\x36\x06\x6e\xe7\xd5\x08\x98\x1b\x11\x24\x94\x62\xc9\x4d\x5b\x07\xdb\x1c\x8c\xcd\x65\xff\xa2\x3f\xbb\x91\x56\x17\xe1\x83\x15\xb6\x68\x8c\x5d\xa4\x00\x88\x6b\xda\x0b\x6f\x17\x59\xea\xf6\xd6\x8b\xf0\x17\x5c\x92\x55\xec\x77\x68\x10\xc2\xb7\x4b\x64\x1c\xe7\x9c\x1e\xc1\xa7\x50\x2c\x47\xb5\x39\xc5\xe7\xb0\x80\xda\x4e\x87\xaf\xa0\x3b\x1e\x7c\xc7\x1f\xcd\xf5\x80\xe7\xa3\x8b\x65\xcf\x5b\x9b\x4e\xf2\x30\xa7\xb7\x5c\x11\x26\x1b\xc7\x8d\x92\xaf\xb3\x3a\x8d\xb9\x42\x25\x98\xc8\x4e\x15\xe4\x6a\x41\xf1\x3d\x7c\x40\xc6\x29\x81\x00\x1e\xe2\x72\xd5\x68\x9c\x74\x64\x8e\xa9\x88\xe4\xa8\x3e\x5f\x5a\xeb\x2c\xf9\x31\xed\xe8\xc3\x6e\xf2\x0d\xf6\x67\x3f\x57\x55\xf8\x59\x93\xf2\x7b\x23\xb6\x87\x2d\x25\xad\xa2\x57\x95\x22\x6e\x58\x4e\x10\xde\xb2\x9c\xb4\xc1\xbc\xb0\xa3\x5f\x9c\x0e\xe8\x44\xa1\x6f\xb7\xda\x2d\xad\xcd\x17\x0d\x8b\x52\x15\x52\x37\x86\xbf\x35\xef\x0f\x6d\x3b\x02\xbe\x7b\x5b\x55\x6d\x76\xd1\xd8\xcb\xcb\xf6\x7a\xe1\x74\xc0\x4a\x44\xc1\x31\xa6\x85\xe4\x09\x29\xdd\x07\x77\x19\xba\xec\xb7\x97\x2f\x21\x05\xf5\x3b\x07\xc3\x81\x43\xe0\xb6\x2c\xb6\x5b\xa1\xab\x20\x4f\xba\x09\x0e\xcf\xab\x93\xb4\xb8\xcc\x98\x78\x90\xd2\xb7\xea\xc4\xa3\x60\x8b\xe6\x0e\xf0\x18\xe0\x87\xf6\x5c\xc1\x44\xfb\x2a\xb6\x9a\xfa\x4f\xa9\xee\x99\xc8\xfe\xf7\x9f\xff\x7e\x1b\xa7\x94\x09\xa6\x17\x16\xe7\x01\x52\xcd\xb9\xfe\xb5\x5e\x74\x36\xfd\xa3\xa0\x4b\x71\x2f\xe4\xea\xe1\x3e\x3c\xa5\x1c\x3c\x8a\x24\x29\x25\xd5\xc3\x1d\xb3\xe7\xaf\x3a\xc5\xf0\xbd\xf5\x85\x61\xec\x88\xc6\x52\x68\xc9\x69\xf4\x6d\xf0\xd8\x88\xea\x9d\x2b\xef\xf7\x0e\xce\xd7\xc5\xba\x55\x00\xff\xa2\x63\xc5\x0a\x33\xeb\x2d\x51\x81\x36\xa8\xec\x49\xcb\xc4\xe7\xdf\x6f\xe0\x12\xaa\xea\x4e\x43\x78\x83\x1b\x59\x9a\xf0\x93\x7d\xe8\xae\x2f\x9f\x7f\xbf\xa9\xeb\xa9\xf3\x10\x44\x89\x73\x70\xd6\x2c\x05\x5b\x8c\x14\xb9\xa6\x11\x0c\xbb\xe7\xf6\xa8\xae\x8d\x2a\xa9\xaa\xec\x19\x51\xd7\xce\xc4\x7f\xe7\x9a\xf6\xd2\x52\x34\xb7\x9f\xe6\xb6\xea\x5a\x39\xa4\xa5\x19\xf9\x2f\x83\x8e\x5b\x81\xe2\x3d\x87\x4b\xa0\xa5\x09\x13\xe2\x94\xa1\xa1\x5b\x54\x19\x99\xe9\xd6\x28\x61\x4b\x67\xd3\x18\x87\x05\x2a\x12\xe6\x3d\xa7\x9c\x84\xd9\xff\xb4\xf3\xf1\x97\xa0\xeb\x77\x70\xd9\xf8\x87\xb6\xcb\x9a\x4c\xc8\x12\xff\xfb\x01\x4b\x61\xb8\xcd\xb4\x25\x65\xff\x12\x19\x97\x2e\x36\x97\xb1\xbb\x42\x5a\xec\x6e\x11\xa7\x5b\x53\x45\xa6\x54\xfe\xcb\x68\xbd\x05\x7f\x81\x8e\xef\x8b\x61\xc3\x78\x14\xa6\x4c\x24\xc3\x01\x0e\xfc\x0f\x24\x16\xf9\x99\x35\xfa\xe3\xfc\xcf\x1d\x2f\x3f\x80\x5d\x26\xfb\xe1\xdd\x8b\x2f\x82\x53\x90\x5f\x6e\x3f\xda\x86\x6e\xf9\x66\xd4\x16\xe2\x6f\x9b\xeb\x64\x38\xf8\x92\x8e\x0d\x46\x3b\xff\x69\xfb\xcb\x84\xb1\x77\x8b\xe1\x60\xdc\x9c\x7a\x7a\x3c\x80\xbf\xee\xaa\x78\x06\x95\x0d\x30\x01\xdb\xee\x7a\x14\x9a\x05\x89\x61\xdb\xe0\xa1\x22\x5d\x1c\xd3\x06\xbb\x1c\xde\x69\x29\x86\x3e\xef\x23\x47\xfb\xb0\xeb\xe8\x0a\x63\x17\xff\x18\xc8\xfb\xc1\x9f\xa3\xdd\xa1\xbe\x77\xf9\xf8\xae\x1a\x38\x5d\x38\xae\x40\xfb\xe7\x77\x7b\xc8\x65\x36\xec\x3b\x1d\x98\xf4\xcf\xc0\x11\xdd\x19\xee\xae\x16\xee\x72\x64\x69\x5b\x0b\xd7\x4b\xf8\xe1\x07\xd8\x7e\x08\xbd\x0c\xfc\xab\xd1\x81\x27\x49\x68\x4f\x69\x4e\x27\xb6\xcf\xf7\x29\x48\xb4\xa7\xd1\x43\xf8\xf5\x19\x6c\x3b\x4f\x4a\x75\x1b\xff\x54\x1d\xed\x76\xd3\x42\xb6\x73\x38\xed\xd5\xbd\x17\xc3\xc1\xf6\x07\xba\xc1\x28\x94\x62\x38\x70\xdf\xb0\x07\x67\x5d\xc5\x1a\x4d\xed\x45\xcb\xcb\xa9\xd7\xb6\xff\x07\x00\x00\xff\xff\xe5\x59\xd5\xff\x46\x15\x00\x00"

func templatesInviteListHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesInviteListHtml,
		"templates/invite-list.html",
	)
}

func templatesInviteListHtml() (*asset, error) {
	bytes, err := templatesInviteListHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/invite-list.html", size: 5446, mode: os.FileMode(420), modTime: time.Unix(1484273230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLoggedOutHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\xcd\xaa\xc4\x20\x0c\x46\xf7\x3e\x45\x70\xdf\x96\xbb\xbb\xb4\x5e\xdf\xe3\x2e\x1d\x4d\x3b\x01\x89\xa5\xa6\xa5\x33\xe2\xbb\x0f\xc8\xfc\xed\xc2\x09\x9c\xf3\x95\x12\x70\x26\x46\xd0\x59\x6e\x11\xb3\xae\x55\x99\x76\x5a\xd5\x13\x67\xd9\x76\x2f\x94\x38\x43\x51\x00\x00\x82\xa7\x74\x2e\xd2\xc2\x23\x78\x64\xc1\x6d\x6a\x7c\x4e\x2c\x5d\xa6\x3b\x8e\xf0\xf3\xbb\x9e\x93\xaa\xca\x0c\x4f\x4f\x29\xc8\xa1\x56\xf5\x69\xf9\xc4\x82\x2c\x2d\x16\xe8\x00\x1f\x5d\xce\x7f\x0d\x3b\x62\xdc\xb4\x6d\x52\xb3\xbe\x3e\xdf\x4b\xb4\xfd\x4f\x3b\x5c\xdd\x81\x70\x41\x64\x88\x69\x59\x30\x40\xda\xa5\x37\xc3\x6a\x95\x19\x02\x1d\xef\xea\x23\x00\x00\xff\xff\x57\xa7\x8f\x55\xe1\x00\x00\x00"

func templatesLoggedOutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLoggedOutHtml,
		"templates/logged-out.html",
	)
}

func templatesLoggedOutHtml() (*asset, error) {
	bytes, err := templatesLoggedOutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/logged-out.html", size: 225, mode: os.FileMode(420), modTime: time.Unix(1483761904, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLoginAltslackHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x54\x61\x6b\xdc\x46\x10\xfd\x7e\xbf\x62\x38\x5a\x68\xc1\x27\xd5\x4e\x5a\x8a\xa3\x88\xa6\x86\x52\x83\xa1\x25\x71\x09\xfd\x38\xa7\x9d\xd3\x0e\x5e\xcd\x8a\xdd\xd1\x39\x57\xa1\xff\x5e\x76\x25\xbb\xba\x94\xd0\x94\x7c\x5b\xcd\xce\xce\x9b\xf7\xe6\x8d\xc6\xd1\xd0\x81\x85\x60\x1b\xf5\xe4\x28\x6e\xa7\x69\x53\xe5\x63\xbd\x29\x58\xa2\x86\xa1\x51\xf6\x12\x61\xdc\x00\x00\x28\x7d\xd0\x1d\x3a\x6e\xe5\x1a\x1a\x12\xa5\xf0\x2a\xc7\x0f\x5e\x74\x17\xf9\x2f\xba\x86\xcb\x1f\xfb\x0f\xaf\x36\xd3\x47\xcf\xfb\x40\x4b\x89\x55\xea\xd5\xd5\x92\xba\x57\xd9\xb5\x8c\xa2\xff\xce\xb9\xfc\xfe\xbb\xaf\x67\x0c\xc7\x42\x3b\x4b\xdc\x5a\x7d\x0a\x4f\x9b\xaa\x5c\xba\x1d\x47\x12\x33\x4d\x9b\x7f\x18\x35\x5e\x94\x44\x33\x25\xc3\x47\x68\x1c\xc6\xf8\x3a\x87\x91\x85\xc2\xb6\x3e\x8b\xf7\xd8\xa6\xf2\x68\xf2\x4d\x02\xac\xec\x65\xfd\x66\x50\x4b\xa2\xdc\xa0\x12\x3c\xb2\x5a\x78\xe7\xb0\x79\xa8\x4a\x7b\x59\x6f\xaa\xd2\xf0\x71\xce\x1d\x47\x3e\x40\x71\xe7\x5b\x96\x5b\xd1\x80\xbf\x70\x88\x0a\xd3\x34\x17\x5a\xc1\xac\x55\x59\x70\x72\x4a\x5f\xff\xe9\x07\x68\x50\xc4\x2b\x0c\x91\x40\x2d\x47\x18\x44\xd9\xc1\xc9\x0f\x60\xf1\x48\x50\x21\xd8\x40\x87\xd7\xdb\x71\x84\xaf\x8a\x3b\x3c\xf9\x41\x8b\x77\x8a\x41\x33\xe8\x1f\x6f\xef\x60\x9a\xb6\x75\xb5\xaf\x9d\x6f\x5b\x32\xc0\x32\x37\x9d\xaf\xab\x72\x5f\x57\x25\xd6\x45\x55\xf6\x67\xc8\x15\x3e\x75\xb7\x57\x81\x34\x8c\x3e\x70\x87\xe1\x04\xcf\x83\xd9\x7e\x16\xf0\x9d\x6f\xe1\x56\xe0\xfd\x0a\x12\xeb\x67\xb4\x33\xb9\xc8\x45\x5a\xe4\x99\xb5\x7b\xe3\x02\xa1\x39\xdd\xf8\xae\x77\xa4\xf4\xff\xb5\xc3\x40\x80\x73\x11\x78\xa6\x5f\xc0\xed\x21\xeb\xf7\x48\x81\x20\x92\x28\xd8\x74\xda\x9f\x00\xa1\xa7\xd0\x71\x8c\xec\x05\xfa\xe0\xbb\x5e\x2f\x20\xbb\xa3\xd1\xf4\x24\xcc\xa3\x06\x34\x1d\x4b\x2c\xfe\x93\xc6\xe7\x75\x7a\xef\x01\x63\xf4\x0d\x27\x43\x65\x94\x2c\x54\xea\xf8\x69\x58\xb8\x00\x0f\x91\xc2\x05\x60\x5c\x7d\x0a\x76\x14\x93\x4b\xa0\xb1\x28\x2d\x01\x8a\x81\xdf\x92\x49\x81\x23\x24\xeb\xe0\x11\xd9\xe1\xde\x11\x7c\xf3\x49\x2e\x70\xf0\x01\x3a\x1f\x08\x58\x0e\x3e\x74\x98\xfa\xfc\xf6\x62\xd6\x89\x9d\x83\xd4\x3e\xa1\x49\x7a\x19\x40\x08\x28\xc6\x77\xd0\x78\x93\x5e\x00\x42\x47\x31\x62\x4b\x1f\x19\xc9\xbe\x48\x73\x08\x70\xe3\x0d\x5d\x57\xa5\x7d\xb1\x26\x1e\xa8\xae\x52\x81\xfa\xa7\x0e\xc3\x31\x51\xa5\xfd\x0e\xd7\xdb\x35\x8e\xc5\xdb\x0c\x74\xef\x1f\x48\xa6\x29\x07\xc8\x70\xa0\x46\x7f\xfe\xe1\xe5\x34\x55\x65\x2e\x50\x95\xa9\xd8\x99\x7f\x63\x87\xce\xd5\xf7\x69\x63\x34\x3d\x4e\x62\x1c\xd1\xb1\xc9\x4c\xf5\x91\x44\x4f\xd0\xb1\x0c\x4a\x69\x90\x73\xfa\x17\x6c\x81\x55\xed\xe3\x75\x59\xbe\xbc\x8a\x8d\xf5\xde\x0d\x11\x8b\x98\x04\x2e\x1a\xdf\x95\x8b\x3a\xb1\x5c\xa8\x96\xdb\xfa\xc6\x71\xf3\x00\xbf\x26\xe7\xa5\x89\xfd\x8e\x51\xe9\x6c\x37\x96\x1e\xde\x5b\x92\x3c\x86\x64\x66\xe3\x85\x2e\x20\x90\xf3\x68\xe6\xdf\x81\xe2\xfe\x53\x3e\xcc\x3f\xbf\xf5\x79\xb9\x5e\x3e\xff\x0e\x00\x00\xff\xff\xac\x33\x74\xe1\xe9\x05\x00\x00"

func templatesLoginAltslackHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLoginAltslackHtml,
		"templates/login-altslack.html",
	)
}

func templatesLoginAltslackHtml() (*asset, error) {
	bytes, err := templatesLoginAltslackHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/login-altslack.html", size: 1513, mode: os.FileMode(420), modTime: time.Unix(1483761714, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLogsIndexHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x0c\xb4\x28\x72\xa9\x24\xdb\x59\xa4\x80\x56\x11\x8a\xee\x1e\x5a\x20\x5b\x2c\xba\x6d\x81\x1e\x47\xe2\x48\x62\x43\x91\x02\x49\xc9\x31\x08\xfd\xf7\x82\xfa\x88\x15\xd7\x41\x90\xa0\x5d\xfb\x42\xcd\x90\xef\xbd\x79\x33\x94\x9c\x63\x54\x72\x49\x10\x18\x7b\x14\x64\x82\x61\xd8\xa4\xe3\x32\xdb\x44\x45\x8d\x52\x92\x08\x73\xf5\x10\x16\x4a\x5a\xe4\x92\x34\xb8\x0d\x00\x00\xe3\xa6\x15\x78\x4c\xa0\x14\xf4\xf0\x61\x0c\xf9\x55\x58\x0a\x75\x48\x40\xab\x03\x1c\x34\xb6\x53\xe2\xef\xce\x58\x5e\x1e\x47\x0c\x92\x76\x3a\x13\x1a\x8b\xda\x7e\xd8\x0c\xcf\xf1\x64\xc0\x78\x3f\xb3\x35\xa8\x2b\x2e\x13\xb8\x6e\x67\xae\x29\x10\x6a\x5e\xd5\x36\x81\xdd\xd6\xc7\x5f\x40\x5a\xe3\xe5\x58\xdc\x57\x5a\x75\x92\x85\x85\x12\x4a\x27\xf0\xae\xdc\xfa\xff\x84\x9e\x2b\xcd\x48\x87\x1a\x19\xef\x4c\x02\x37\x0b\x6b\x8b\x8c\x71\x59\x25\xb0\x8d\x76\xed\xc3\x14\x7f\x81\x15\xcf\xfd\xca\x85\x2a\xee\x27\xb8\x03\x67\xb6\xf6\xea\xb7\xdf\x4d\x81\x45\xcb\xcd\xfe\xfa\x3a\xff\xe1\xad\x95\x46\x52\x85\x0d\xea\x9e\xcb\x99\x5b\xb5\x58\x70\x7b\xf4\xb2\x6f\x9e\x12\xed\xf7\xfb\x57\xa0\x2d\xb5\xbc\xf1\x74\xd2\x73\xc3\x2d\xb1\xcb\x28\x69\x3c\x8f\x9d\x73\x24\xd9\x30\x6c\x4e\xa3\x39\xcf\xcd\x38\x9b\xde\xd3\x42\xa0\x31\xb7\xc1\x23\x55\x90\x8d\x80\xeb\x5c\x8b\x15\x85\x35\x21\xf3\xd9\xb4\xde\x65\x1f\x27\x8d\x70\xa7\x2a\x93\xc6\xf5\x2e\x4b\x4d\x83\x42\x64\x3f\x51\x81\x9d\x21\xf8\x2a\xb0\xb8\x87\x56\x53\xc3\xbb\x06\xb8\x81\x9c\x0b\x41\x0c\x5a\xd2\xd0\x19\xd2\x69\x3c\xed\x4f\x63\xc6\xfb\x6c\x33\x11\xd6\xfb\xec\x4b\x97\x0b\x5e\xc0\x0c\xef\xa1\xf7\xff\x56\x73\xd1\xa0\x59\xb5\xff\x39\xa7\x51\x56\x04\xd1\x02\x33\x0c\x8f\xb9\x11\x67\xb4\xe6\x36\x18\xc7\x32\x81\xd0\x39\x41\x12\xa2\xcf\xd4\xe4\xa4\xcd\x30\xac\xa0\x96\x23\x67\x91\xfa\x7d\x96\x22\xd4\x9a\xca\xdb\x20\x16\xaa\x32\xb1\x73\xd1\x2f\x9f\xfc\xd1\x77\xce\x45\xbf\x62\x43\xc3\x90\xc6\x98\xa5\x71\xfd\xfe\xec\x6c\x9b\x39\x17\x7d\xe9\x74\xab\x0c\x45\x7f\xa2\xe8\xc6\xad\xed\xd9\xae\xf8\x09\xe9\xd9\xe3\xd2\xd3\x55\xea\xe4\xa0\xe6\x3d\x5a\xba\x60\xa1\x73\xc0\x4b\x88\xfe\x52\x9d\x9e\x37\x2d\x7b\x20\x5c\xc0\x5e\xe5\x72\x08\xb3\xcf\x97\x20\x5f\xeb\xf9\x42\xeb\x1c\x2f\x41\x2a\x0b\xd1\xcf\x68\x3e\x8f\xb3\x3e\x0c\xab\x2b\x38\x95\xfe\xbf\xb6\xe8\xa2\x84\xb4\xcd\x52\x6a\x32\x3f\xf0\x80\x9a\xc6\x3c\xf6\xc8\x05\xe6\x82\xa0\x54\x1a\x6c\xcd\x0d\xcc\xae\x41\x3e\x5f\x04\x6e\x81\x29\x32\xf2\xca\x42\x8d\x3d\xc1\x8f\x53\x1d\x51\x1a\x53\x93\xf9\xb6\xaf\x7b\xf9\xdf\xce\x08\x90\x64\xa7\xce\x9e\xb2\x3e\x23\x0c\xad\x3b\xe4\x7b\xe9\x67\xe3\x0e\x8f\xaa\xb3\xd1\xa7\x8f\x9d\xd6\x24\xed\x1f\x86\x74\x34\x5e\x65\xbf\x7a\xc4\x9a\x25\xfe\xae\xa0\xe7\x74\x00\x5b\x13\x78\x83\x47\x13\xda\x79\xfc\x66\x1f\xcc\xf7\xb0\x74\xe1\xca\xb9\x05\xff\xab\xff\x56\x4d\xb8\xbf\xdd\x41\xe0\x3f\x1d\xad\x49\x34\x21\x0b\x86\xe1\x2a\xab\x34\x4a\x0b\x58\x14\x64\x8c\xef\x50\xf4\xa4\x74\xaf\x75\xd4\xff\xad\xe4\x18\x5e\x49\xe0\xf2\x19\x25\x2b\x8f\x97\x67\xff\x62\x9d\xec\x9e\x9b\xfb\x4f\x00\x00\x00\xff\xff\xfc\x57\x79\x34\x17\x08\x00\x00"

func templatesLogsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLogsIndexHtml,
		"templates/logs-index.html",
	)
}

func templatesLogsIndexHtml() (*asset, error) {
	bytes, err := templatesLogsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/logs-index.html", size: 2071, mode: os.FileMode(420), modTime: time.Unix(1482044464, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUserManageHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x91\x41\x6b\xe3\x30\x10\x85\xef\xf9\x15\x83\xf7\x6c\x8b\x84\x9c\x16\x45\x97\xdd\x4b\xa0\x69\x03\xa5\xbd\x8f\xad\x89\x65\xaa\x8c\x8c\xa4\x84\x16\xa1\xff\x5e\x1c\xdb\x25\x31\xd5\x45\x68\xde\xbc\xf9\xe6\xa1\x94\x34\x9d\x3a\x26\x28\x1a\xc7\x91\x38\x16\x39\xaf\xa4\xee\xae\xd0\x58\x0c\x61\x77\x2b\x63\xc7\xe4\x0b\xb5\x02\x00\xb8\xd7\x7a\x6c\xa9\x34\x84\x7a\x50\xa5\x59\xab\xb7\x40\x1e\x8e\xde\x9d\x3a\x4b\x52\x98\xb5\x92\xe1\x8c\xd6\xaa\x03\x32\xb6\x04\x8d\x63\xa6\x26\x76\x8e\x03\x20\x6b\xb0\xae\x05\x77\x89\x52\x8c\x5d\x52\xe8\xee\xaa\x56\x23\xa6\x57\x12\x67\x4e\x1d\x19\xea\xc8\xa5\x46\x6e\x07\xd4\x93\x6b\xe1\x65\xf0\xa1\x92\xa2\x9f\xf6\x32\x1b\xb5\xe7\xe8\x51\x0a\xb3\x99\x87\x98\x8d\x7a\xb5\xd8\x7c\x8c\xb5\xe5\xfa\x8d\x41\x66\xb2\x65\xed\x3e\xcb\x65\xcc\xe1\xa4\xe4\x07\x20\x54\xff\xc6\xc6\x90\xf3\x8f\x76\x9b\x13\xe2\x97\xa5\x5d\xe1\xbc\x26\xff\x17\xca\x94\x2c\x31\x54\x07\x3a\xd7\xe4\x43\xce\x77\xa3\x66\xcb\x63\x65\xdc\x71\x3b\x24\x35\x9e\x4e\xbb\x42\x58\xd7\x06\x91\x52\xb5\xff\x3f\xd8\xff\xa4\x54\x3d\xe3\x99\x72\x1e\xa3\x9a\xed\x2f\xfe\x5e\xa5\x54\x1d\x2f\xbe\x77\x81\xaa\x77\xb4\x97\x5b\x7b\xbf\x60\x8b\x07\xf8\xe2\x99\x12\xb1\x9e\xc2\xcd\x9f\x30\xdd\x93\xf4\x1d\x00\x00\xff\xff\x20\xfd\x23\x5f\x27\x02\x00\x00"

func templatesUserManageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesUserManageHtml,
		"templates/user-manage.html",
	)
}

func templatesUserManageHtml() (*asset, error) {
	bytes, err := templatesUserManageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/user-manage.html", size: 551, mode: os.FileMode(420), modTime: time.Unix(1483761454, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesZone2Svg = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5b\x6f\x8f\xda\xb8\x13\x7e\xbf\x9f\x62\xea\xbe\x29\x92\x8d\xff\x24\x31\xa1\x82\x7d\xf1\x5b\xaa\xd5\x4f\x3a\xdd\x55\xea\x5e\x4f\xf7\x92\x83\x2c\xa0\x06\x82\x92\x2c\xec\xb5\xea\x77\x3f\x19\x76\x17\xd2\xc4\x10\xc0\x8e\xf6\x7a\x56\x25\x94\xa8\xf1\x78\x66\xfc\xcc\x3c\xf6\x93\x6c\xef\xcd\xe0\xb7\x9b\xbb\x3f\x3f\x7e\x80\x6c\x35\x81\x8f\xbf\xff\xef\x97\xff\xdf\x00\x22\x94\xfe\xe1\xdd\x50\x3a\xb8\x1b\xc0\xa7\xcf\xb7\xc0\xdb\x9c\xd2\x0f\xbf\x22\x40\xd3\x3c\x5f\xbe\xa7\x74\xbd\x5e\xb7\xd7\x5e\x3b\x49\x27\xf4\x36\x1d\x2e\xa7\xb3\x51\x46\x3f\x7d\xbe\xa5\xea\xc1\xc1\xdd\x80\x66\xab\x09\xe7\xed\x71\x3e\x46\xd7\x57\x3d\x65\x79\x15\xa5\xd9\x2c\x59\xf4\x11\x6f\x73\x04\x8f\xf3\x78\x91\xf5\x2b\x8c\x09\xc6\x98\x1a\xfc\xf4\xc8\xfb\xc7\x78\xb6\xf8\x52\xf5\x20\xef\x76\xbb\x74\xf3\xbf\x08\xa6\xd1\x6c\x32\xcd\xfb\xc8\xef\x30\x04\xeb\xd9\x38\x9f\xf6\x91\x60\x0c\x5d\x5f\x01\x00\xf4\xc6\xd1\x7d\xb6\xbd\xdc\xdc\x2e\x87\xf9\x14\x66\xe3\x3e\xca\xd3\x25\x82\xfb\x59\x1c\xf7\xd1\xdb\x88\xa9\x7f\x08\xb2\x3c\x4d\xbe\x44\xe4\xc9\x08\x43\x30\xee\xa3\x79\x88\x59\x4c\xfc\xed\x8f\x1f\x33\xec\xc7\xea\xc6\xc7\xc4\xff\x8a\x68\x95\xe5\xd1\xb0\xa6\xe5\x40\x19\xe5\x55\x96\x63\x86\x09\xd7\x99\x4f\xe6\x08\xf2\x74\xb8\xc8\xee\x93\x74\xde\x47\xd9\x68\x18\x47\xef\x44\xeb\x79\xce\xd1\x43\x9a\x46\x8b\xfc\x26\x89\x93\x54\x33\xb1\xc0\x0c\x62\x22\xb0\x80\x98\x63\x0e\xb1\xc0\x44\x80\x7e\xba\xd5\xa5\xf3\x31\x35\x9f\xa7\x7e\x18\xe6\xed\x00\x62\xa2\x6e\x5e\x26\xec\xd1\xdd\x22\xf5\xd2\x68\x94\xc3\xe3\x66\xe8\xdf\x9b\xdf\xbd\x25\x2d\xae\xf5\xf3\xe8\xc9\xbe\x77\x9b\xcb\x78\x98\x47\xef\xb8\xcf\x30\x67\x2d\xb4\x89\xe2\xaf\x68\x31\x9a\x92\x34\x59\x73\xb4\x17\xa4\x66\x24\xc3\x01\x6b\x41\x9a\xe4\xea\x46\x74\x58\x6b\x6f\xcc\x66\xdc\x43\x16\xc1\x34\x8d\xee\xfb\xe8\xed\x66\xb1\xcb\xd9\x69\x07\xad\x3d\xcf\x77\x8e\x0b\x56\xc8\x32\x9d\xec\xdd\x3c\x47\x2e\xb6\xa1\xfb\x7b\xc3\xf8\x2e\x0f\xea\xb2\x08\x2e\x7a\x3c\xa2\xa0\x10\x92\x0a\x68\x3f\x86\x4d\x29\x94\x62\x20\x87\x83\xa8\xf6\xdd\xdf\xfa\x2e\x0c\xfa\xee\x31\x2c\x1a\x5e\x8e\xdd\x85\x0e\x5b\x9c\x61\x59\xc2\x96\x40\x15\x19\x79\xc1\xb1\xa9\x7c\x30\x86\xbd\x5d\x3e\xba\x16\x17\x53\x58\x59\x4c\x7e\x2a\x10\xcf\x71\x3d\xd8\xba\xce\x0d\xba\x1e\x16\x5c\xef\xbe\x16\x18\x72\x56\xc2\xa1\x57\xa3\xc7\x49\x86\x8b\xeb\x60\x27\x96\x92\x31\x45\x5e\xca\xd9\x88\x7f\x15\xa9\xb7\xe4\x48\x13\x99\xc0\x72\x67\x5f\xee\xcc\xcb\x53\xac\x0b\x8d\xf5\x10\x8b\xcb\x8d\x7b\x1a\xe3\x12\x73\x03\xd6\x7d\x8d\x75\x81\xc3\xe3\xc6\x8b\x35\xa1\x41\x40\xa7\xd0\x57\x2b\xf0\x7c\x71\x07\xab\x88\x71\x55\x08\x32\xd0\x06\x59\x23\x83\xb5\x82\x94\x05\xe2\x3b\x5c\xb4\x67\x75\xce\xa2\xb5\x37\x84\xc0\xb7\x6f\x30\x4a\xe6\xcb\x87\x3c\x4a\xe1\x39\x50\x89\x80\x70\x1f\x48\x08\xdf\xbf\x03\x21\xf5\x61\x20\x35\x19\x22\xdc\xc7\xa4\x06\x12\x8e\xd9\xef\x68\xed\x87\x98\x98\xc0\x71\xa8\x9b\x40\xd9\xf7\x2f\xb7\xdf\xd5\x06\x20\x30\xe1\x06\x6b\x45\x1e\xde\x83\x98\x29\x16\x1d\x7e\xd4\x48\x01\xa2\x06\x7a\x8a\x05\xa6\xc6\xd9\xaf\x30\x59\x93\x49\xce\xa1\xf7\xfa\x4c\x62\x97\x4a\xb8\x55\x2e\xe1\x76\xc9\x84\xdb\x67\x93\x80\xe1\xce\x21\x18\xd8\x27\x13\xae\xeb\x95\xe6\xb0\xee\x31\x1c\x9e\xcb\x26\x70\x06\x9d\x1c\x5a\x52\x7d\xe7\x36\xc3\x0c\x42\xd7\x3a\x8c\x51\x03\xd7\xd1\xbf\x29\x6e\xe0\x5a\xf2\x31\x4a\x0e\xfe\xb1\x3d\x46\x03\xd8\xd7\xd1\xa0\x51\xec\x7b\xae\xcf\xff\xf4\x7d\xbe\x7c\x94\xe6\x5b\xd8\x06\x26\x25\x8c\x52\xc1\x58\x52\x30\xcc\x0b\x18\xea\xd8\x7c\x02\xf4\x5f\xca\x05\xcc\x09\x83\xd6\xb4\x35\x9b\x2b\x71\x86\x30\x78\xd4\x7b\x51\xa0\x63\x1e\x36\x2c\x63\x18\x6e\x13\xe7\x17\x6e\x7d\x73\x17\xf4\xc8\x0b\xda\xd6\x09\x82\x56\xa5\x9e\xe5\xd7\xd2\xec\x9b\x16\x89\xab\x4a\xd3\xa4\xde\xe8\x31\xcc\x1a\x94\x4a\x99\x41\xd7\x65\x63\x6d\xa5\x63\xbe\xc3\xcb\xd2\x46\xc7\x6a\xde\x4d\xbe\xe6\xf1\x1a\x23\xd6\x27\xbc\x7b\x46\x99\xb5\x91\xb4\xdb\xd8\xcd\xfc\x78\x28\xb4\x9b\xf4\x8e\x59\xc4\xc8\x06\xc1\x2e\xcd\xbe\x8f\x91\xaf\xf0\x7d\x0c\x88\x32\x81\x05\x8e\xc0\x1c\x81\x39\x02\xfb\xd9\x09\xec\xdf\xcb\x60\x8e\xc2\x1c\x85\xbd\x9c\xc0\xaa\x18\x4c\xd6\xfc\xa4\xa0\x89\x6f\x0a\xaa\x97\x47\x5a\x69\xa4\x0d\x75\xa3\x8e\xf9\x9a\x2e\xbf\x97\xb3\x5a\x16\xa7\x56\x74\xcd\xbd\x54\xb7\x84\xc4\x4e\x0d\x24\x36\x27\x0c\x55\xe7\xc4\x49\xa6\x3f\x4a\xa6\xf6\x71\xf8\x1f\x13\x47\x6b\x38\xdf\xc8\x66\xc4\x33\x0f\xf5\x8a\xb7\xac\x96\xf2\x7e\x66\xef\x7a\x0d\x6d\xd7\x0e\x63\x34\xd4\x63\xec\x70\x75\xa3\x7b\x8f\x7a\x1b\xa9\x32\x7d\x85\x55\xdf\x08\xbb\x13\xac\x3b\xc1\xba\x13\xac\x3b\xc1\xba\x13\xac\x29\x11\xd6\x0b\x4b\x9d\xb7\xeb\x44\x58\x27\xc2\x3a\x0a\x73\x14\xe6\x28\xcc\x51\xd8\x2b\xa7\xb0\x6a\x06\xe3\x4c\xff\x07\x86\x4e\xb0\x71\x82\x4d\x95\xeb\x4e\x39\xa8\xe1\x7c\xf3\xca\xc1\x55\x8f\x66\xab\xc9\xf5\xd5\x3f\x01\x00\x00\xff\xff\xd6\x99\x04\x40\x81\x41\x00\x00"

func templatesZone2SvgBytes() ([]byte, error) {
	return bindataRead(
		_templatesZone2Svg,
		"templates/zone2.svg",
	)
}

func templatesZone2Svg() (*asset, error) {
	bytes, err := templatesZone2SvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/zone2.svg", size: 16769, mode: os.FileMode(420), modTime: time.Unix(1484028435, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"layout.html":                   layoutHtml,
	"assets/styles.css":             assetsStylesCss,
	"templates/factoid-info.html":   templatesFactoidInfoHtml,
	"templates/factoid-list.html":   templatesFactoidListHtml,
	"templates/home.html":           templatesHomeHtml,
	"templates/invite-list.html":    templatesInviteListHtml,
	"templates/logged-out.html":     templatesLoggedOutHtml,
	"templates/login-altslack.html": templatesLoginAltslackHtml,
	"templates/logs-index.html":     templatesLogsIndexHtml,
	"templates/user-manage.html":    templatesUserManageHtml,
	"templates/zone2.svg":           templatesZone2Svg,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"styles.css": &bintree{assetsStylesCss, map[string]*bintree{}},
	}},
	"layout.html": &bintree{layoutHtml, map[string]*bintree{}},
	"templates": &bintree{nil, map[string]*bintree{
		"factoid-info.html":   &bintree{templatesFactoidInfoHtml, map[string]*bintree{}},
		"factoid-list.html":   &bintree{templatesFactoidListHtml, map[string]*bintree{}},
		"home.html":           &bintree{templatesHomeHtml, map[string]*bintree{}},
		"invite-list.html":    &bintree{templatesInviteListHtml, map[string]*bintree{}},
		"logged-out.html":     &bintree{templatesLoggedOutHtml, map[string]*bintree{}},
		"login-altslack.html": &bintree{templatesLoginAltslackHtml, map[string]*bintree{}},
		"logs-index.html":     &bintree{templatesLogsIndexHtml, map[string]*bintree{}},
		"user-manage.html":    &bintree{templatesUserManageHtml, map[string]*bintree{}},
		"zone2.svg":           &bintree{templatesZone2Svg, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

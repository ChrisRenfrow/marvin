// Code generated by go-bindata.
// sources:
// layout.html
// assets/styles.css
// templates/factoid-info.html
// templates/factoid-list.html
// templates/home.html
// templates/invite-list.html
// templates/logged-out.html
// templates/login-altslack.html
// templates/logs-index.html
// templates/user-manage.html
// DO NOT EDIT!

package weblogin

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _layoutHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x57\x7d\x73\xda\x38\x1a\xff\x3f\x9f\x42\xf5\xec\x1c\x30\xc4\xf2\x26\xe9\x4b\xae\x31\xdc\xd0\x40\x1b\xb6\x34\x2f\x85\xd2\xbd\xdc\xdc\xdc\x08\xfb\xb1\x2d\x90\x25\x22\xc9\x10\xce\xe3\xef\x7e\x23\x1b\x1b\x43\xe9\x6c\x6e\x67\xf3\x0f\xd2\xf3\xfe\x7b\xde\xac\xa4\x29\xf2\x21\xa0\x1c\x90\xc5\xc8\x46\x24\xda\x42\x59\x76\xe2\xbe\xea\xdf\x5d\x4f\xfe\x79\x3f\x40\x91\x8e\x59\xf7\xc4\x2d\x7f\x80\xf8\xdd\x13\x84\x10\x4a\x53\x34\x63\xc2\x5b\x20\x4b\x53\xcd\xc0\x42\x18\x65\x99\x9b\x9f\xbb\x69\x4a\x03\x84\x27\xe6\x9c\x65\x69\xba\x3b\x01\x53\x90\x65\x5f\x88\x5c\x51\x8e\xbe\xc3\x0c\x0d\xb9\x06\x19\x10\x0f\xd2\x14\xb8\x9f\x65\xae\x53\x5a\x40\xc0\x7d\x13\xc9\xbe\x2f\x1f\x02\x92\x30\x6d\x2b\xbd\x61\xa0\x8c\x53\x7b\x2b\xe3\x32\xca\x17\x48\x02\xeb\x58\x05\x33\x02\xd0\x16\x8a\x24\x04\x1d\x2b\xd2\x7a\xa9\xde\x3b\x8e\xe7\xf3\xb9\xc2\x1e\x13\x89\x1f\x30\x22\x01\x7b\x22\x76\xc8\x9c\x3c\x3b\x8c\xce\x94\xa3\xd7\x54\x6b\x90\xf6\x4c\x08\xad\xb4\x24\x4b\xe7\x02\x5f\xe0\xb7\x8e\xa7\x94\x53\xd1\x70\x4c\x39\xf6\x94\xb2\x72\xb7\xc5\x1f\xe5\x1a\x42\x49\xf5\xa6\x63\xa9\x88\x5c\x5c\xbe\xb6\xcf\x9e\x2e\xe3\xc9\x6f\x77\xbd\xf1\xf3\xe5\xfc\xac\x97\xb4\xc9\x9b\xef\xfd\x29\xbf\xa7\xe7\x6c\xf1\x31\x58\xaf\x07\x3d\x72\x19\xf5\xfb\xfe\xfc\x91\x2d\x47\x10\x3e\x47\xf3\xe9\x97\xc1\x59\x10\xce\xbf\xdf\x7f\x8a\x17\xff\x55\xef\x2c\xe4\x49\xa1\x94\x90\x34\xa4\xbc\x63\x11\x2e\xf8\x26\x16\x89\xb2\xba\x7f\x19\xda\x40\x70\x6d\x93\x35\x28\x11\x83\xf3\x1a\xbf\xc3\xbf\xe6\x40\xeb\xe4\x97\x61\x5d\xaf\x82\xdf\x97\x4f\xcb\xc7\xc7\xe9\xc3\xa7\xcf\x6f\x27\xbd\xe8\xcd\xfd\x94\x7d\xba\x0b\x1e\x6e\x6f\xc6\xa2\x7f\xfe\x3c\x1b\xb4\x1f\x16\xf7\xcf\xd7\xbd\x8f\xec\x76\x00\x2b\x31\xb8\xb9\x18\xb3\x5f\x15\x9d\x4d\xbd\xbb\x87\x29\xbf\xfd\x23\xac\xca\x93\x74\xa9\x91\x92\xde\x8b\xb1\xcd\x9f\x12\x90\x1b\xe7\x1c\x9f\xe3\x8b\xed\x25\xc7\x32\xff\x03\x28\xc3\xb7\x1f\xdf\xdc\x7d\x1e\x5c\x8f\xa6\xfa\xb3\xf3\x61\xd4\xbe\xa4\xe3\x51\x7f\x70\x23\xd6\xe3\x5e\xf0\x4d\xbc\x7b\xfb\x38\xfa\x7b\x7b\xf1\xa9\x17\x4e\xbe\xfa\xf4\xc3\x66\x78\xfb\xf9\x37\xf2\x34\xb9\xbf\x71\x1e\xa6\xb7\xe3\xb3\x69\x7f\xf6\x73\x28\xae\x53\xc0\xa8\xd7\x6f\xbf\x5c\x26\xf1\x0a\x87\x42\x84\x0c\xc8\x92\xaa\x1c\x92\xa7\xd4\x3f\x02\x12\x53\xb6\xe9\xf4\x18\x84\x12\x36\xa4\x3d\x26\x5c\xb5\xc7\xd7\xd6\x8f\xf5\xff\xf3\x3d\xe3\x10\xa5\x40\x2b\xa7\xe0\xe4\x35\x2f\xe7\xdc\x3e\x3e\x8a\xbb\x11\x34\x93\x5d\xca\xb8\x25\xca\x20\xe1\x9e\xa6\x82\xa3\x10\xf4\xf5\xf8\xeb\xc7\x89\x58\x00\x6f\xb6\x50\x9a\x9b\x91\xa0\x13\xc9\x51\x00\xda\x8b\x9a\x96\xa3\x40\x29\x2a\xb8\xe3\x29\x19\xe0\xb9\x12\xdc\x3a\x45\x69\x2c\x7c\x78\x8f\x1a\x8a\xc4\x60\x17\x98\x1a\xa7\xc8\x93\xe0\x03\xd7\x94\x30\x75\xc0\xcb\x5a\xb8\x2a\xad\x8e\x80\x37\xcb\x08\x9a\x12\xd4\xb2\x85\xd2\xd2\xa9\xb9\xe6\x4e\x9a\xad\x2b\xf4\xff\x69\x69\x03\xc2\x28\x5d\x9d\x64\x3b\x84\x4b\xa1\x74\x9f\x68\xd2\x4c\x24\x3b\x45\x3e\xd1\xe4\x14\x89\xa5\x61\xa9\x12\x2f\x0d\x50\xf3\x55\x45\xdb\x1e\x50\x07\xa5\xd9\xd5\x8e\x6f\x34\x5b\xb9\xfe\x21\x67\xab\x80\xcd\xfa\x05\xb9\xb3\x50\x12\x50\x07\x71\x58\xa3\x9b\xe2\xd6\x6c\x1d\x51\x8d\x41\x47\xc2\xdf\x69\x16\x77\xd4\x41\x8d\xfb\xbb\xf1\xa4\x71\x44\xa3\x96\xea\x9d\x5a\x8d\x68\x74\xeb\x05\xb8\xaa\x57\x76\xbf\xea\x78\x3f\xb5\xa6\xcc\x39\xa7\x4c\x8f\xf9\x3b\x80\x84\x15\xe8\x66\xe3\x77\xdb\x58\xb1\x73\x61\x53\xfd\x4a\xf1\xea\x07\xbd\x99\xf0\x37\xa8\x83\xee\x66\x73\xf0\x34\x5e\xc0\x46\x35\xf3\x84\xe2\x98\x2c\x2b\xd7\xa8\xb9\xa8\xfb\xac\x05\x0c\xdc\x13\x3e\x7c\xfb\x3a\xbc\x16\xf1\x52\x70\xe0\xda\x88\xb6\x51\xa3\xd3\x40\xed\x63\x5c\x63\xfc\x5f\x8b\x7f\xd7\x22\xc9\x5a\x78\x2e\x28\x6f\x36\xfe\xd6\xa8\x51\xf7\x5a\x3d\xef\x90\xb2\x0f\x0a\x99\x83\x66\xf2\xc5\x48\x84\x22\xd1\xd5\xa8\x54\xdd\xb5\x1b\x13\x1f\x94\x96\x62\x63\x86\x24\x33\x83\x92\x97\xf2\x3d\x6a\xf4\x07\xa3\xc1\x64\x60\x26\x61\x3f\xdf\x75\xc8\xbe\xf0\x92\x18\xb8\xc6\x4c\x78\xc4\x70\xb1\x04\x26\x88\xdf\xdc\x0b\x67\xb7\xad\x5c\xa7\xf8\xe6\xbb\x26\xbf\xdd\x93\xdd\xfc\x73\xb2\x9a\x11\x59\x7e\x82\x5d\x4e\x56\xc8\x63\x44\xa9\xce\x96\x83\x8a\x1f\x9b\xf2\x15\x48\x05\xe5\x12\xf2\x69\x25\xe7\x09\xae\x09\xe5\x20\xed\x80\x25\xd4\x3f\x22\xb1\x35\x51\xb4\xc4\x96\x9f\xcb\x90\x03\x89\x99\x24\xdc\xaf\x76\x99\xd5\x2d\x9e\x18\xae\x43\xb6\x36\x1d\x9f\xae\x6a\xe6\xa9\xdf\xa9\xe2\xaf\x82\x61\x8c\x2c\x15\x94\x61\x97\xf7\xba\xd7\x84\xd5\xdc\x96\x82\x9c\xac\x6a\x32\x69\x8a\xd6\x54\x47\xe5\x56\xfc\xc5\x4b\xa4\x04\xae\xd1\xfb\x0e\xc2\xb7\xb9\xc2\xf5\x96\x92\xf3\x25\xe1\x21\x94\x9c\xa1\x86\x58\x95\x8b\xb6\x66\x90\x06\x08\x9e\x8c\x50\x0c\x3b\x83\xf6\x81\x9c\xcb\x68\x19\x1c\xf1\x34\x5d\x81\xd5\x75\xc9\x36\x21\x69\x8a\xbf\x7d\x1d\x65\x99\xd5\x4d\xd3\xdc\x8c\x79\x68\x91\xae\xeb\x30\xda\x3d\x70\x66\x23\xf3\x46\x3b\x66\xfd\xcf\x9a\xdb\x7d\x3b\xb6\x70\x0a\xca\xfe\x0b\xaf\x28\x52\xc2\x5e\x90\xec\xf2\x28\x69\x18\x69\xeb\xd0\xa1\x49\x16\xee\x6f\x73\xfc\x4d\x81\xc4\x43\xae\x25\x19\x89\x90\xf2\xa3\xa8\xf6\x08\x39\xf1\x95\x6d\xa3\x49\x44\x15\x8a\x8d\x07\x34\x03\xb4\x96\x82\x87\xc8\xb6\x8f\x08\xd3\x38\x44\x11\x18\xc1\x8e\x75\x71\x6e\xfd\xf0\x48\xc1\xd4\xb8\xc7\xaf\xcf\x71\x20\x9d\x44\x81\x54\x4e\x0c\x3e\x4d\xe2\xff\xa4\xe9\xcf\xe2\xcc\x32\x3c\x5f\x42\x68\x21\xe7\x88\xc3\xb2\x08\xb9\xb1\xbc\x02\x3f\xb5\x52\xb5\xff\x2e\xc3\x87\x80\x8f\x67\xa0\xf2\x71\xb8\x70\xf2\xc1\x61\xf9\x7e\xb2\x03\x21\x63\x0b\x09\xee\x31\xea\x2d\x3a\xd6\x6e\x6f\x59\x5d\xb7\x6a\xc5\x80\xa0\x80\xd8\x4b\xb1\x06\x69\x8b\x20\x30\xcf\x20\xda\x7d\x41\x5c\x2f\x6e\xc4\xb1\x26\x52\xe7\xa0\xb7\x2d\x99\x9f\xd1\x48\x84\x68\xc8\x5f\xdc\x95\xbb\xd6\xab\x6f\x8a\xe2\xe8\x3a\x9c\xac\xcc\xe2\xab\xb4\xca\x19\xff\x25\x64\x62\x46\x58\x3e\xdb\x45\x47\x6f\x57\xa3\x59\x6c\xc0\xb5\x85\xf0\x07\xe1\x6f\xcc\xf2\xce\x9f\x46\xd1\x59\xf7\x0b\x55\x8a\xf2\x10\x6d\x25\x5e\xb9\x4e\x74\x96\x2f\xd5\xc3\xa1\x70\x9d\x62\xdf\xba\xf5\x57\x63\xb5\xbb\x43\xd0\x03\x06\xe6\xf8\x61\x33\xf4\x9b\x8d\x5a\x49\x1a\x2d\x4c\x7c\x7f\xb0\x02\xae\x47\x54\x69\xe0\x20\x9b\x8d\xbc\x46\x8d\xd3\xea\xe3\xd2\xba\xda\xdf\xf0\xf9\x3f\x77\x95\xf3\xff\x05\x00\x00\xff\xff\x5d\xee\xe1\x79\x13\x0e\x00\x00"

func layoutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_layoutHtml,
		"layout.html",
	)
}

func layoutHtml() (*asset, error) {
	bytes, err := layoutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layout.html", size: 3603, mode: os.FileMode(420), modTime: time.Unix(1483767371, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsStylesCss = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xd1\x6e\xd3\x30\x14\x7d\xef\x57\x5c\x6d\x0f\x93\xba\xa5\x4d\xbb\x6e\x94\x4c\x4c\x1a\x05\x09\x24\xc4\x03\x9b\x78\x41\x3c\xdc\xd8\x37\x89\x35\xc7\x37\xb3\x9d\x75\x05\xed\xdf\x91\x9d\xb4\x2b\xa5\x9d\x78\x8c\x7d\xcf\xb9\xc7\xe7\x9c\x8c\x87\xf0\x89\x50\x92\x85\xe1\x78\x90\xb3\x5c\xc1\xef\x01\x00\x40\x8e\xe2\xbe\xb4\xdc\x1a\x99\x08\xd6\x6c\x33\x38\x2e\xa8\x10\x85\xb8\x1a\x3c\x0f\x46\x06\x1f\x73\xb4\x89\xc1\xc7\x6b\xad\xae\x55\x5d\xfe\xa8\x48\x95\x95\x7f\x77\x74\x3e\x3d\xfa\xd9\x53\xd4\x68\x4b\x65\x12\x1b\x2e\x32\xb8\x68\x9e\xae\xe2\xb1\x54\xae\xd1\xb8\xca\x40\x19\xad\x0c\x25\xb9\x66\x71\xff\x3f\xac\xa7\x80\x3d\xf3\x01\x8a\x70\xd5\xa0\x94\xca\x94\x89\xa6\xc2\x67\x90\x5e\x6d\x2b\xe9\xce\xa2\x90\xe7\xc1\x78\x08\x77\xdc\x00\x17\x20\xd8\x78\x32\x3e\x18\x30\x6a\xb0\xa4\xa4\xea\x0c\xa9\x26\xaf\xaf\x7b\xfe\x7b\xdc\xd5\xa8\x75\x8f\x28\xd8\xf8\xc4\xa9\x5f\x94\xc1\x64\xbe\x7e\xf8\xda\xc7\xf9\x7c\xbe\x47\xd6\x66\x2c\x62\x0b\xac\x95\x5e\x65\x70\x72\xa3\xa9\xb4\xb4\x42\xb8\x45\xe3\xe0\x76\x71\x72\x06\x0e\x8d\x4b\x1c\x59\x55\x04\x0d\xe1\x21\xb7\x24\xbc\x62\x93\xc1\x02\xb5\xe6\xd6\xbb\x40\xf4\x9e\xd9\x3b\x6f\xb1\x81\x0f\x2c\xe2\xc9\x82\x9b\x55\x4c\x03\xa6\xe9\x64\x92\x4c\xd3\xc9\x25\xdc\x2d\x95\xf7\x64\xcf\xe0\xb3\x11\xa3\x30\xf4\x45\x09\x32\x8e\x32\x58\x2c\xe0\xc6\x7b\xab\xf2\x36\x70\xc3\xf9\x28\x0d\x0e\x0d\xc6\xc3\x01\x0c\xb7\x16\xc5\xcf\xaf\xec\xe1\xa1\x55\x9e\x00\x35\x59\xef\xce\x20\x6f\x3d\x88\xd6\x79\xae\x01\x8d\x84\x8a\x74\x53\xb4\x1a\x0c\x7b\x72\x50\xb0\x85\x82\xf5\xbd\x03\x4b\x18\xe2\x02\x5f\x11\x48\x16\x6e\x14\xd8\xbe\xd1\x43\xab\x2c\x39\x40\xc8\xd1\x51\x24\xa8\x59\xaa\x42\x91\x05\xa1\xd1\xc5\xb1\xa8\x05\x16\x5c\xd7\x6c\xc0\xf9\x95\xee\x89\x43\x0a\x7e\xd5\x90\x8b\x81\xe6\x2e\x11\x9d\xd6\x18\x4d\x5f\x8f\x0c\xa6\x69\xe7\x77\x97\x41\xf7\xdd\xd5\x25\x67\x2b\xc9\x66\x30\x69\x9e\xc0\xb1\x56\x12\x8e\x89\xe8\xe5\x26\xe6\x95\x2c\x95\xf4\xd5\xa6\xd5\xfd\x8d\x45\xa9\x5a\x97\xc1\x79\x57\xb1\xed\xe5\xd5\x2c\xee\xef\x23\xf7\xdc\xf4\xe5\xec\x0f\x72\xf6\x9e\xeb\x4d\x39\xb7\x91\x4d\xa6\xd1\xf9\x44\x54\x4a\xcb\x6d\x8e\x35\x24\xdd\x05\x08\x96\x14\x07\xf7\xab\x8a\xcd\x0f\x2d\x20\x03\x6d\x03\xae\x41\x41\x90\x93\x5f\x12\x19\xa8\x5b\xed\x55\xa3\x09\x7a\xb2\x7f\x4c\x3c\x85\x5d\x4b\xb7\x9f\x94\x5c\xbc\xec\xf8\x8e\x56\x61\xa8\xce\x2e\x47\x22\xd1\x94\x64\xb7\x25\x46\x4b\xd7\xff\x87\xa0\xd9\x7c\x36\xdb\x79\xd5\x1a\xd4\xfb\xf8\xfa\xec\x12\xad\x09\xad\x3a\xb4\x01\xf1\xf2\x4d\x3a\x3f\x84\xda\x59\xb1\x7f\x58\x99\x82\x0f\xf2\x4f\xf2\x79\xfa\x96\xf6\x42\x76\xc8\x5f\x26\xc7\x43\xf8\x68\xe4\xe6\xc7\x82\xe1\xf8\x4f\x00\x00\x00\xff\xff\xe4\x31\x71\x04\x9b\x05\x00\x00"

func assetsStylesCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsStylesCss,
		"assets/styles.css",
	)
}

func assetsStylesCss() (*asset, error) {
	bytes, err := assetsStylesCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/styles.css", size: 1435, mode: os.FileMode(420), modTime: time.Unix(1481243193, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFactoidInfoHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x83\xd9\xeb\xda\xe4\x1a\xb4\x62\x61\x61\xa1\x50\x7a\x68\xd3\x73\x19\xa4\x97\x5a\xd4\x96\x8d\xa4\x24\x84\x41\xff\xbd\x44\x56\x92\xb6\xbe\x78\xf4\xe6\x7b\xe8\xf1\x24\x62\xb1\x77\x1e\xd4\xc6\x74\x1e\x11\xdb\x9c\x1b\x55\x46\xdd\x34\xaa\xaf\x93\x08\xbc\xcd\xb9\xb9\xd3\x66\xf6\x09\x3e\x15\xdc\xba\x23\x99\x91\x63\xfc\x53\x64\x76\x1e\xa1\xbd\x98\x4e\x2e\x0d\xd4\xfd\x67\x93\x66\x67\x7f\x90\x0b\xbf\xe3\xf7\x00\xb6\x85\x25\x22\x52\xc3\x46\x57\x76\x4b\x22\x57\xdf\x13\x4f\xc8\x59\xf5\xc3\x46\x37\xaa\xb7\xee\xa8\x9b\x15\x5f\xf4\xe3\x6c\x3e\x50\x60\xb7\xa7\xee\x21\xae\xe7\x9c\xcf\x88\x22\x18\x23\x72\xf6\x73\xcd\xae\xfa\x45\xdf\x7c\x1c\x13\xc1\xba\xb4\xa5\xbf\x35\xe5\x21\x22\xd0\xaf\x6e\x07\x9e\xa8\xbb\xec\x5f\x23\x42\xce\x22\xdd\x7a\xff\xb5\x01\xaa\x9f\xf3\x24\x62\x06\xf6\x1e\xe3\x9b\xe7\x09\xdf\xcc\xff\xd6\xc5\x17\x9e\x13\x89\x04\x8c\xc9\x4d\x58\x99\x9d\x9b\x10\x13\x4f\x4b\xcd\x56\xc3\x05\x5c\x1b\x8a\xf3\x21\x18\xb4\x5a\x99\xd9\x42\x8b\x74\xcf\x7c\x7a\x29\xda\xc5\x51\x44\xd5\x2f\x01\xb7\x5a\xee\xaf\x54\xfe\x9f\x01\x00\x00\xff\xff\xf6\x34\xd0\xe9\xdb\x01\x00\x00"

func templatesFactoidInfoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesFactoidInfoHtml,
		"templates/factoid-info.html",
	)
}

func templatesFactoidInfoHtml() (*asset, error) {
	bytes, err := templatesFactoidInfoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/factoid-info.html", size: 475, mode: os.FileMode(420), modTime: time.Unix(1481245502, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFactoidListHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x55\x4d\x6f\xdc\x36\x10\xbd\xeb\x57\x4c\x16\x45\xd0\x02\x2b\xa9\xf9\x38\x39\x8c\x90\x20\x40\x01\x03\x4e\x0f\xb5\x8d\xa2\xa7\x78\x56\x1a\x49\xac\xf9\xa1\x92\xd4\xae\x05\x42\xff\xbd\x20\x45\xad\xb5\x75\x72\xe9\x4d\x1a\xce\xcc\x7b\xf3\xe6\x89\xf2\xbe\xa1\x96\x2b\x82\x9d\x75\x93\x20\xbb\x9b\xe7\x8c\xc5\xc7\x2a\x1b\x45\xd1\x62\xed\x34\x6f\x72\xc1\xad\x03\x9f\x01\x00\x0c\xd8\x34\x5c\x75\x57\xf0\xeb\x87\x6c\x7e\x91\x23\x78\x4a\x0b\x6f\x79\x6c\x74\x05\x4a\x2b\xfa\x10\xa3\x12\x4d\xc7\x55\x2e\xa8\x75\x57\xf0\x76\x78\xba\x88\x1a\xde\xf5\x6b\x78\xce\x5e\xf4\x2d\x04\x5a\x97\x4b\xdd\xf0\x96\x53\x93\x60\x5a\xa1\xd1\x5d\x41\x2c\x0d\x55\xac\x4c\xe4\xbd\x27\xd5\xcc\x73\xf6\x3c\x60\xad\x95\x23\xe5\xe2\x84\x0d\x3f\x42\x2d\xd0\xda\x8f\x31\x8c\x5c\x91\xd9\x55\x17\xf1\x01\x3b\xca\x7b\xc2\x26\x9e\x04\x2c\xd6\xbf\xa9\x7e\x5b\x48\x59\x56\xf6\x6f\x2a\x66\x25\x0a\x51\x7d\x86\x13\x4e\xe0\x34\x58\xa7\x0d\x01\xaa\x06\x0c\x39\xc3\xe9\x48\xe0\xe8\xc9\xb1\x72\xc9\xcb\x58\xd9\xf0\xe3\x25\xca\xc1\xe6\x35\x0a\xa1\x47\x07\xcf\x8f\x39\x57\xad\x3e\x83\xbe\xaf\xee\x2d\x57\x1d\x6c\xa0\xdf\xa7\xb3\xa1\xba\xc5\x09\x58\xad\x1b\xaa\x5e\x25\xbd\x14\x4a\x62\x65\x0c\x01\x57\x80\x6a\x82\xba\x47\xa5\x48\xc0\xa9\x27\x43\xf0\x15\xcd\x91\x2b\xe0\x36\x50\x36\xa3\x02\x84\x54\x5a\xc0\x75\x0b\xae\xa7\xf5\x1d\x1c\x3e\x92\x05\x34\xdd\x28\x49\x39\xbb\x5f\x0c\x60\xf4\x91\x37\x14\x12\x25\x60\xeb\xc8\xc4\x9a\x80\xbb\x07\x3b\x60\x4d\xb9\xa5\x01\x0d\x3a\x6a\x0a\xb8\xeb\x69\x25\xb8\xb2\x62\x24\x2b\x39\x5a\xc7\x4a\x92\x15\x1c\x08\xd0\xc5\x0e\x47\x32\x13\x1c\xa8\xe3\x4a\x85\x79\x75\xe4\xb2\x18\x84\xac\xc5\x8e\x42\x37\x6e\x03\x73\x14\x56\x43\x50\x8b\x1a\x40\x38\xa0\xea\xf2\x75\x06\x56\x0e\x67\x75\xfe\xd2\x23\xd4\xa8\x96\xf4\x8b\x51\xe1\x30\x81\xc5\x29\xe0\x2c\xec\x3e\xc9\x45\x96\xf5\xbc\x23\x07\x2f\x15\x2d\xe0\xb3\x85\x03\xb5\xda\xd0\xfe\x2c\xc4\x59\x9f\x08\x8b\x16\x94\x36\x12\xc5\xc2\xe4\xff\xee\xfc\x4f\xc3\xdd\x0f\xb7\x7e\x6f\xa3\xfc\xff\xa1\x6e\x48\x92\x3c\x90\xd9\xf2\x86\xe4\xfa\x55\xfb\x5a\x4b\x19\x0c\x1a\xdc\x4a\x6e\xb3\xfa\xad\x6c\xd7\x2d\x4c\x7a\x04\x45\xd4\x5c\xd8\x21\xf5\x0a\xc5\xe9\xab\x01\x45\x27\xc1\x15\xd9\x3d\x34\x1a\x5c\xcf\xed\xd5\x32\xf5\x60\xa8\xfa\x01\x3b\x7a\x42\x39\x08\x82\xd7\x6f\xb2\x87\x87\x87\xec\xeb\x28\x1c\x0f\x3d\xb2\x2f\x4b\xfb\x10\x4d\x74\x59\x19\xfa\x7c\x8f\x96\x0c\x55\xa1\x8b\x5c\xcb\x61\x40\xe3\xec\x1e\xfe\x1e\xad\x03\x6c\x82\x2f\x5e\xbf\x4d\x8e\x39\x69\xf3\x68\xa1\xd5\x06\x50\x88\x55\x03\x1b\x3e\x8f\xf4\x31\xe4\x70\x18\x1d\x28\xed\x42\x52\xc4\xdb\x7a\xca\xee\xc3\x56\x5d\x4f\x13\xa0\x38\xe1\x64\x61\x4c\x0b\x20\xe5\xb8\xa1\xd5\x9f\xaf\xb6\x1b\xcf\x58\xff\x6e\xbd\x2e\xe0\x86\x07\xbb\xf7\xef\xaa\x8c\x8d\x62\xf5\xc1\xf6\x82\xdb\x85\x1b\x0b\x0c\xaa\x8e\xa0\x08\xd9\x30\xcf\x19\x00\x13\xbc\x62\x08\xbd\xa1\xf6\xe3\xae\x5c\xe9\x94\xde\xf3\x16\xe8\x1f\x28\x6e\x6b\x3d\xd0\x97\xf4\x79\xef\x76\xf3\xfc\xcd\x7b\x12\x96\xe6\xd9\xfb\x8b\xc3\x10\x88\x17\x62\xe9\x7d\x91\x58\xfd\x8e\x92\xe6\x39\x79\x0e\x92\x99\xbc\x87\xed\x39\xcc\x73\xda\x45\xc4\x54\xf4\x1d\x4c\x66\x07\x54\xeb\x50\xdc\xe6\xe9\xba\xc9\xb5\x12\xd3\xae\x7a\x41\x84\x95\x21\xbf\x4a\x7c\x58\x89\x2b\x81\x88\x50\x5c\xdb\x1b\x5d\x3f\x52\x33\xcf\x3f\x8b\xf8\xf0\xcb\x7a\x95\x27\x9a\x5b\xb4\x8b\x5f\xc2\xae\x0a\xaf\x70\xfe\x43\x1c\x26\xf8\xe4\xfd\x89\xbb\x3e\xec\xcb\xc0\x4f\xc5\x1d\xa1\x84\xe2\x06\xad\xbb\xb7\x64\xa2\x48\x8b\x08\x97\x10\x10\x9c\xe1\x7d\x9a\xe3\x5b\xfc\x8e\xb6\xc5\xe7\x51\xc0\x7b\x43\xc2\x71\x49\xcb\xc1\x1d\x97\x64\x1d\xca\xe1\x3c\xe5\x4a\x7a\x30\xb4\x72\xb6\x7a\x34\x35\xed\xaa\x55\xef\xe2\x0f\x3c\xdd\xc6\xd8\x59\xeb\xb3\xef\x59\x29\x78\x74\x06\xa9\x26\x38\x82\x95\xe3\xf3\x7f\x24\x91\xfe\x37\x00\x00\xff\xff\x43\xa3\x15\x02\xc3\x07\x00\x00"

func templatesFactoidListHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesFactoidListHtml,
		"templates/factoid-list.html",
	)
}

func templatesFactoidListHtml() (*asset, error) {
	bytes, err := templatesFactoidListHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/factoid-list.html", size: 1987, mode: os.FileMode(420), modTime: time.Unix(1481245557, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHomeHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x92\x41\x6b\x1b\x31\x10\x85\xef\xf9\x15\xd3\x3d\xa7\x56\x9d\x63\x51\x04\xa1\x50\x1a\xe8\x42\x20\xa1\xd7\x30\x96\x66\x57\x13\x6b\xa5\x45\xd2\xae\x9b\x1a\xff\xf7\x22\xad\xed\x24\x04\xdf\x84\x66\xf4\xbd\x79\x4f\xb3\xdf\x1b\xea\xd8\x13\x34\x3a\xf8\x4c\x3e\x37\x87\xc3\x95\x34\x3c\x83\x76\x98\xd2\x6d\xbd\x46\xf6\x14\x1b\x75\x05\x00\xf0\xbe\x36\x62\x4f\x5f\x2d\xa1\x39\x57\x6b\x87\x5d\xab\x5f\x61\x20\x29\xec\x5a\xc9\x34\xa0\x73\x8a\x13\xec\x2c\x45\x82\x6c\x09\x2c\x61\xcc\xc0\x49\x8a\xa5\xb8\x70\x85\xe1\x59\x5d\x2d\xe7\x51\x3d\x59\x4e\xc0\xa9\xf6\xef\x68\x03\xec\x33\xc5\x0e\x35\x41\x17\x22\xb4\x18\x67\xf6\x2b\x29\xc6\xe3\x63\x7b\xa3\x24\x82\x8d\xd4\xdd\x36\xa2\x43\x9d\x03\x9b\xd4\xa8\x9f\xc7\x93\x14\xa8\xa4\xb0\x37\xea\x84\xff\xc3\xb4\x83\x14\xa6\xa8\xe9\x1a\x2c\xa7\x1c\xe2\xeb\x35\xa0\x37\x80\x93\xe1\x0c\x2e\xf4\xa9\x2a\x9d\x58\x97\xb4\x4a\x63\xa3\x7e\x87\xfe\x82\x46\x70\x66\x81\x85\xae\x7a\x79\x74\xa8\xb7\xa0\x2d\x7a\x4f\x2e\xc1\x88\x29\xd7\xfb\xf5\xb7\x2d\x0c\x94\x12\xf6\x04\x8e\x07\xce\x2b\xb9\x89\x6f\x99\x3e\x05\x98\x0b\x6e\x8c\x3c\x63\xa6\x33\xe0\x1a\x5e\xc3\x04\xc3\x94\x32\x6c\x08\x12\xf7\x9e\x0c\xb0\x87\x1d\x67\xbb\x68\x5d\x1a\x9c\xfd\xcc\x99\x52\xa3\x1e\x8e\xc8\x1f\x0b\x12\xee\x4b\x01\x33\x07\xff\xd9\xd2\x23\x39\xd2\xb9\xe6\xf4\x12\xd8\x43\x33\x4e\x1b\xc7\xba\xf9\x34\x17\x94\xcf\xfe\xf2\x41\xba\x0d\xe5\xfb\x03\xe8\x65\x35\x4e\xd0\xc9\xbd\xdb\x1c\xc7\x25\xca\xb3\x81\x7b\x9f\x23\x96\x37\x3d\xe5\x63\x72\x0f\x6d\xdd\x24\x5f\x7d\x5b\x9c\x09\x10\x74\x88\x91\x74\x99\x58\x0a\xc7\x1f\x71\x67\xc3\x36\xe7\xf1\xbb\x10\x3b\xde\xf2\xaa\xba\x08\x11\x07\x5c\xe9\x30\xd4\x3b\xd1\xe2\x5f\x1e\xf8\x1f\x3d\xdf\x75\x1d\xc7\x81\xcc\x73\x8b\x2f\x21\x72\xe6\x12\x52\x7b\xd7\x96\x30\x60\x0c\xce\xb1\xef\xdf\x74\xa4\x28\x06\x8e\xcb\xbb\xdf\x93\x37\x87\xc3\xff\x00\x00\x00\xff\xff\x76\xc3\x87\x61\x54\x03\x00\x00"

func templatesHomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHomeHtml,
		"templates/home.html",
	)
}

func templatesHomeHtml() (*asset, error) {
	bytes, err := templatesHomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/home.html", size: 852, mode: os.FileMode(420), modTime: time.Unix(1483755871, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesInviteListHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x58\x6d\x6f\xe3\xb8\x11\xfe\xee\x5f\x31\xeb\x0d\xce\x36\x1a\xc9\x97\x66\x5b\x14\x8e\x22\xdc\x76\x5f\x70\x29\x72\xd7\xe2\x36\x8b\x7e\x38\x2c\x8a\xb1\x38\x92\x19\x53\xa4\x40\x52\x76\x5c\x41\x40\x7f\x4d\x7f\x58\x7f\x49\x41\x4a\xb2\xe5\x97\x64\xb3\x58\x24\x1f\xd6\x36\x39\x2f\xcf\xcc\x3c\x33\x24\xb7\xaa\x18\xa5\x5c\x12\x0c\x8d\xdd\x08\x32\xc3\xba\x1e\x44\xfe\x6b\x3c\x00\x00\x08\xf3\x20\x59\xa0\x94\x24\xa0\xf2\x0b\xee\x2f\x47\x9d\x71\x19\x68\x9e\x2d\xec\x0c\x7e\xbc\x3a\xdc\x10\x94\xee\xaf\xcf\x31\x59\x66\x5a\x95\x92\x05\x89\x12\x4a\xcf\xe0\x35\x11\xf5\xf6\x95\x66\xa4\x67\x70\x51\x3c\x00\x97\x86\x2c\xbc\xbe\xbc\xbc\x3c\xdc\x0f\x34\x32\x5e\x9a\x19\xfc\xb9\x78\x38\xf2\x69\x55\x31\x83\x3f\x75\x1b\xf5\x01\xf8\x60\xad\xb1\xe8\x45\x50\x28\xc3\x2d\x57\x72\x06\x9a\x04\x5a\xbe\xea\x81\x29\x90\x31\x2e\xb3\x19\x5c\x3c\x6a\x0e\x16\x97\xc7\xe9\xf0\x08\x7a\x41\xa7\x4a\xda\xc0\xf0\x7f\xd3\x0c\xfe\xf8\xe6\xc0\xd2\xbd\xe2\x32\x98\x5b\x79\x12\x12\xce\x8d\x12\xa5\xed\x41\xf2\xa6\x2f\x34\xe5\xbb\xa5\x36\xf9\x3b\x8c\x5e\x8e\x1e\x6c\x60\x35\x4a\x93\x2a\x9d\xcf\x40\xa8\x35\xe9\x04\x0d\x3d\x12\x46\x98\x93\xc5\x1e\x86\x06\xb2\xab\xfe\x0c\xb8\x45\xc1\x93\xc7\x15\x8d\xc1\x8c\x8e\x74\x7d\xb8\x17\x7f\xd9\x85\x1b\x4d\x5b\x36\x55\x15\x49\x56\xd7\x83\x1d\xe3\x12\x25\x2d\x49\xeb\x29\xc7\xf8\x0a\x12\x81\xc6\x5c\xfb\x65\xe4\x92\xf4\x30\xde\x5b\x2f\x30\xa3\x60\x41\xc8\xfc\x8e\xb3\x1e\x2d\x2e\xe2\x7f\x68\xbe\x42\x4b\xf0\xae\x41\x66\xa2\xe9\xe2\x22\x8e\x4c\x8e\x42\xc4\x7f\x53\x5c\x42\x59\xc0\x82\x34\xbd\x8a\xa6\xcd\xe2\x20\x9a\x32\xbe\x6a\x0d\xf4\xcc\xcf\x4d\x90\xa0\x10\xaa\xb4\xb0\xfb\x1a\x70\x99\xaa\xd6\x5b\xe3\xf1\x4d\xfc\x4e\x13\x5a\x2e\x33\xb8\x91\x2b\x6e\xc9\x79\x7c\xd3\x93\x28\xe2\x3b\x05\xc8\x18\x6c\x54\xa9\xa1\x68\xe1\x75\x89\xb3\x0a\xec\x82\x1b\x70\xc1\x9c\x43\xca\xb5\xb1\xc0\xbd\x1d\xf8\x29\x47\xbd\xe2\x12\x50\x32\x30\xb8\x81\x71\xaa\x34\xd0\x03\xe6\x85\xa0\xc9\x2c\x9a\x16\x7b\x4e\xa2\x44\x31\x8a\x3b\x9d\x1c\x97\x14\xb4\x76\x66\x46\x25\x89\xeb\xa6\xd7\x1a\x25\x53\x39\x7c\x2c\xed\x5c\x89\x57\xf0\x56\x6b\x94\x19\x41\x86\x39\x99\x73\xb0\x28\x96\x80\x73\x17\x70\xa3\x11\x4d\xbd\xcd\x43\x4f\xbf\x34\x2e\xd6\x5c\x08\x47\x52\x0b\x08\x5d\xf5\x7d\x34\xbb\xe0\x36\xaa\x04\x53\x50\xc2\x53\x4e\x0c\xc6\x0d\xc4\x16\x45\x6b\x7c\xe2\xc3\x2b\x48\x15\x82\x20\x41\x09\xae\x13\x80\x4b\x50\x92\x40\xa5\x60\xd7\x0a\xd6\xb8\x31\x07\xf1\x2a\x11\x47\x82\xc7\x9f\x48\xba\xd6\x04\x94\x40\xb9\xba\xe7\xa0\x09\x13\xd7\x34\xa0\x24\x7c\x12\x98\x2c\x1b\x98\x6d\x26\xec\x82\xf2\x03\x8c\x61\x34\x15\xbc\x67\x58\xf0\xf8\xae\x17\x81\xd7\xc6\xa2\x20\xd4\xce\x64\xaf\x54\x07\xb0\x13\xc1\x93\xa5\x37\x3c\x2f\xad\x75\xa2\x0a\xe6\xd4\x3a\x66\x8d\x97\x68\xaa\x44\xcb\xb3\xef\xa4\xdc\xdf\xed\x82\x34\xdc\xc8\x54\x9d\x22\x9b\xa6\x5c\xad\x08\x70\x1b\x45\xaa\x55\xde\x60\x17\xdc\xd8\x73\x28\x0d\xc1\x3e\x5f\x34\xad\xd4\x96\x31\x6d\x69\x20\x68\x74\x12\x95\xe7\x2e\x5a\x9f\x8b\x04\x65\x42\x02\xb0\x4b\x2a\xba\x6c\x9b\x53\x85\x77\x4e\xb8\x23\x73\x78\x48\xa0\x9b\x9e\xa2\x21\x69\x9d\x36\x1e\x75\x86\x77\x27\x95\x05\xb3\x50\x6b\xd7\xb5\x3e\xff\x04\x6b\x9a\x03\x97\x96\x74\x8a\x09\x5d\x79\x57\x79\x69\x6c\x53\xfa\x0e\x48\x47\x48\xde\xd2\x60\x87\xa1\x4d\xfd\x20\x32\xe4\x99\xd2\xac\x56\x15\x34\xbd\x10\x76\x73\x03\xea\xfa\xa8\x3e\xbb\x79\x97\xa0\x66\xfe\x9f\x60\x2e\x54\xb2\x1c\x02\x43\x8b\x01\x67\xd7\xc3\xaa\x0a\x6f\xde\xd7\x75\xbf\x60\xa7\x2c\xf8\x03\x68\xaf\xaa\x97\x71\x55\x85\xbf\x62\x4e\x75\x1d\x4d\x17\x97\xbd\x2d\x53\x78\x82\x79\x03\xdd\x41\xd1\x53\xad\x2a\xe0\x29\x9c\x85\xbf\x2a\x7b\xab\xb2\x8c\xd8\x8d\x84\xa0\x45\xbf\xb5\x81\x5b\x8e\x59\x09\x73\x2b\x03\x46\x29\x96\xc2\x76\xc8\x5d\x42\x31\xb1\xd7\xc3\x8b\x61\x7c\xab\xdc\x2c\x83\x8f\x6e\x18\x45\x53\xec\x7b\x0a\x80\x84\xa1\x3d\xf3\x6e\x91\xa7\xbe\x1f\xce\xc2\x9f\x71\x45\x6e\xca\xbe\x47\x8b\x10\xbe\x5d\x21\x17\x38\x17\xf4\x0c\x3c\x85\xe6\x39\xea\xcd\x29\x3c\x11\xef\x84\x53\x84\x14\x03\xe3\x2a\x3a\x8c\xa3\x29\x8f\xc1\x8f\xf4\xb6\x66\xcf\xc6\x7a\x80\xf3\xd9\xc9\x02\xc6\x8d\x0b\x87\x3d\x8d\xe9\xad\xd0\x84\x6c\xe3\xb1\x11\xfb\x3a\xaa\xd3\x3e\xd7\xa8\x25\x97\xd9\xa9\x84\xbc\x5b\x50\xb2\x84\x8f\xc8\x05\x31\x08\xe0\x29\x2c\xef\x9a\xb9\xa4\x3c\x98\x63\x28\x92\x1d\xe5\xe7\xb1\xb5\xde\x52\x34\x75\x94\xec\xf7\xf4\x96\xdf\x64\x71\x18\xff\x54\x55\xe1\x67\x43\xba\x61\x33\x24\xee\x80\x24\xd6\x4d\x61\x25\xa1\xaa\x34\x09\xcb\x73\x82\xf0\x8e\xe7\x64\x2c\xe6\x85\xa3\x7d\x71\xda\xa6\xef\xe5\xa1\xeb\x8f\x3b\x7a\xb0\x87\x82\xbd\x59\xba\xfb\x5a\x55\x1d\xe8\x68\xba\xed\xf4\x76\xdf\x37\xa4\xeb\xd5\x42\x60\x42\x0b\x25\x18\x69\x33\x04\x7f\x2f\xb9\x1e\x32\x6e\x0a\x81\x9b\x99\x54\x92\x86\xbd\x19\x7d\xa0\x10\xf8\x4e\xc4\x8e\xe1\xfd\x56\x7e\x51\x6e\x1f\x1e\x1d\x27\x61\x09\x95\x71\xf9\x24\xa4\x6f\x6d\xff\x67\xb9\x2d\x9a\xe3\xf8\x39\x8e\x9f\x6a\xa5\x82\xcb\xee\xd3\xdf\xfa\x7c\x32\xfe\xa9\xf4\x92\xcb\xec\x7f\xff\xf9\xef\xb7\x61\x4a\xb9\xe4\x66\xe1\xfc\x3c\x01\xaa\x39\x62\xbf\x56\x8b\x5e\x2f\x3f\xcb\x75\x29\x97\x52\xad\x9f\xae\xc3\x4b\x76\xf9\xb3\x40\x92\xd6\x4a\x3f\x5d\x31\x77\x30\xea\x53\x08\x3f\x38\x5d\x18\x27\x1e\x68\xa2\xa4\x51\x82\x26\xdf\xe6\x1e\x9b\x59\x79\xef\xd3\xfb\xbd\xc4\xf9\xfa\x0c\xee\x26\x40\xfb\x61\x12\xcd\x0b\x1b\x0f\x56\xa8\xc1\x58\xd4\xee\x00\xe5\xf2\xf3\x6f\xb7\x70\x0d\x55\x75\x6f\x20\xbc\xc5\x8d\x2a\x6d\xf8\xc9\x6d\xfa\x9b\xc4\xe7\xdf\x6e\xeb\xfa\xca\x6b\x48\x22\xe6\x15\xbc\x34\x4f\xc1\x25\x23\x45\x61\x68\x02\xe3\xfe\x71\x3c\xa9\x6b\xab\x4b\xaa\x2a\x37\xfa\xeb\xda\x8b\xb4\xcf\x9f\xab\x41\x5a\xca\xe6\xca\xda\x5c\x1c\x7d\x29\xc7\xb4\xb2\x93\xf6\x2d\xe5\xb1\x15\x28\x3f\x08\xb8\x06\x5a\xd9\x90\x91\xa0\x0c\x2d\xdd\xa1\xce\xc8\x5e\x6d\x85\x18\x5f\x79\x99\x46\x38\x2c\x50\x93\xb4\x1f\x04\xe5\x24\xed\xfe\xaf\x9d\x4e\x7b\x1b\xb9\x79\x0f\xd7\x8d\x7e\xe8\xaa\x6c\xc8\x86\x9c\x5d\x0d\xbc\x18\x4f\x61\xbc\x8d\x74\xd2\x7b\xe0\x31\x95\x94\xde\xb6\x50\x89\xbf\xcd\x39\xdf\xfd\x24\xf6\x1e\xa7\x64\x4b\x2d\xfb\x6f\x47\xe7\xfc\x0c\x3d\xde\xb3\x71\x83\x78\x12\xa6\x5c\xb2\xf1\x08\x47\x93\xab\xad\xe7\x57\x4e\xe8\xf7\x1f\xbf\xec\x70\xb5\x04\xec\x23\xd9\x37\xef\x3f\xda\x24\xf8\x09\xf2\xf3\xdd\x2f\xae\xa0\x5b\xbc\x19\x75\x89\xf8\xeb\xe6\x86\x8d\x47\x8f\xcd\xb1\xd1\x64\xa7\xdf\x18\x77\xcf\x1d\x77\x65\x18\x8f\xa6\xcd\x61\x66\xa6\x23\xf8\xc3\x2e\x8b\xe7\x50\x39\x03\x33\x70\xe5\xae\x27\xa1\x5d\x90\x1c\x77\x05\x1e\x6b\x32\xc5\x31\x6c\x70\xcb\xe1\xbd\x51\x72\xdc\xc6\x7d\xa4\xe8\x36\xfb\x8a\x3e\x31\x6e\xf1\xf7\x91\x5a\x8e\xbe\x4c\x76\x67\xf5\xde\x9d\xe2\xbb\x72\xe0\xe7\xc2\x71\x06\xba\xbf\xb6\xdb\x43\xa1\xb2\xf1\xd0\xcf\x81\xd9\xf0\x1c\x3c\xd0\x9d\xe0\xee\xc6\xe0\xef\x3c\x0e\xb6\x93\xf0\xb5\x84\x1f\x7e\x80\xed\x8f\xb0\x1d\x03\xff\x6a\xe6\xc0\x8b\x04\xb4\x37\x69\x4e\x07\xb6\x8f\xf7\x25\x40\x74\xa7\xd1\x53\xfe\xeb\x73\xd8\x56\x9e\xb4\xee\x17\xfe\xa5\x2a\xda\xaf\xa6\x73\xd9\xf1\xf0\x6a\x50\x0f\xce\xc6\xa3\xed\x7f\x4f\x8d\x26\xa1\x92\xe3\x91\x7f\xec\x8e\xce\xfb\x13\x6b\x72\xe5\x2e\x5a\xed\x38\x6d\x67\xdb\xff\x03\x00\x00\xff\xff\xb6\xf3\xa6\x3f\x4c\x14\x00\x00"

func templatesInviteListHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesInviteListHtml,
		"templates/invite-list.html",
	)
}

func templatesInviteListHtml() (*asset, error) {
	bytes, err := templatesInviteListHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/invite-list.html", size: 5196, mode: os.FileMode(420), modTime: time.Unix(1483767112, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLoggedOutHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\xcd\xaa\xc4\x20\x0c\x46\xf7\x3e\x45\x70\xdf\x96\xbb\xbb\xb4\x5e\xdf\xe3\x2e\x1d\x4d\x3b\x01\x89\xa5\xa6\xa5\x33\xe2\xbb\x0f\xc8\xfc\xed\xc2\x09\x9c\xf3\x95\x12\x70\x26\x46\xd0\x59\x6e\x11\xb3\xae\x55\x99\x76\x5a\xd5\x13\x67\xd9\x76\x2f\x94\x38\x43\x51\x00\x00\x82\xa7\x74\x2e\xd2\xc2\x23\x78\x64\xc1\x6d\x6a\x7c\x4e\x2c\x5d\xa6\x3b\x8e\xf0\xf3\xbb\x9e\x93\xaa\xca\x0c\x4f\x4f\x29\xc8\xa1\x56\xf5\x69\xf9\xc4\x82\x2c\x2d\x16\xe8\x00\x1f\x5d\xce\x7f\x0d\x3b\x62\xdc\xb4\x6d\x52\xb3\xbe\x3e\xdf\x4b\xb4\xfd\x4f\x3b\x5c\xdd\x81\x70\x41\x64\x88\x69\x59\x30\x40\xda\xa5\x37\xc3\x6a\x95\x19\x02\x1d\xef\xea\x23\x00\x00\xff\xff\x57\xa7\x8f\x55\xe1\x00\x00\x00"

func templatesLoggedOutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLoggedOutHtml,
		"templates/logged-out.html",
	)
}

func templatesLoggedOutHtml() (*asset, error) {
	bytes, err := templatesLoggedOutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/logged-out.html", size: 225, mode: os.FileMode(420), modTime: time.Unix(1483761904, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLoginAltslackHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x54\x61\x6b\xdc\x46\x10\xfd\x7e\xbf\x62\x38\x5a\x68\xc1\x27\xd5\x4e\x5a\x8a\xa3\x88\xa6\x86\x52\x83\xa1\x25\x71\x09\xfd\x38\xa7\x9d\xd3\x0e\x5e\xcd\x8a\xdd\xd1\x39\x57\xa1\xff\x5e\x76\x25\xbb\xba\x94\xd0\x94\x7c\x5b\xcd\xce\xce\x9b\xf7\xe6\x8d\xc6\xd1\xd0\x81\x85\x60\x1b\xf5\xe4\x28\x6e\xa7\x69\x53\xe5\x63\xbd\x29\x58\xa2\x86\xa1\x51\xf6\x12\x61\xdc\x00\x00\x28\x7d\xd0\x1d\x3a\x6e\xe5\x1a\x1a\x12\xa5\xf0\x2a\xc7\x0f\x5e\x74\x17\xf9\x2f\xba\x86\xcb\x1f\xfb\x0f\xaf\x36\xd3\x47\xcf\xfb\x40\x4b\x89\x55\xea\xd5\xd5\x92\xba\x57\xd9\xb5\x8c\xa2\xff\xce\xb9\xfc\xfe\xbb\xaf\x67\x0c\xc7\x42\x3b\x4b\xdc\x5a\x7d\x0a\x4f\x9b\xaa\x5c\xba\x1d\x47\x12\x33\x4d\x9b\x7f\x18\x35\x5e\x94\x44\x33\x25\xc3\x47\x68\x1c\xc6\xf8\x3a\x87\x91\x85\xc2\xb6\x3e\x8b\xf7\xd8\xa6\xf2\x68\xf2\x4d\x02\xac\xec\x65\xfd\x66\x50\x4b\xa2\xdc\xa0\x12\x3c\xb2\x5a\x78\xe7\xb0\x79\xa8\x4a\x7b\x59\x6f\xaa\xd2\xf0\x71\xce\x1d\x47\x3e\x40\x71\xe7\x5b\x96\x5b\xd1\x80\xbf\x70\x88\x0a\xd3\x34\x17\x5a\xc1\xac\x55\x59\x70\x72\x4a\x5f\xff\xe9\x07\x68\x50\xc4\x2b\x0c\x91\x40\x2d\x47\x18\x44\xd9\xc1\xc9\x0f\x60\xf1\x48\x50\x21\xd8\x40\x87\xd7\xdb\x71\x84\xaf\x8a\x3b\x3c\xf9\x41\x8b\x77\x8a\x41\x33\xe8\x1f\x6f\xef\x60\x9a\xb6\x75\xb5\xaf\x9d\x6f\x5b\x32\xc0\x32\x37\x9d\xaf\xab\x72\x5f\x57\x25\xd6\x45\x55\xf6\x67\xc8\x15\x3e\x75\xb7\x57\x81\x34\x8c\x3e\x70\x87\xe1\x04\xcf\x83\xd9\x7e\x16\xf0\x9d\x6f\xe1\x56\xe0\xfd\x0a\x12\xeb\x67\xb4\x33\xb9\xc8\x45\x5a\xe4\x99\xb5\x7b\xe3\x02\xa1\x39\xdd\xf8\xae\x77\xa4\xf4\xff\xb5\xc3\x40\x80\x73\x11\x78\xa6\x5f\xc0\xed\x21\xeb\xf7\x48\x81\x20\x92\x28\xd8\x74\xda\x9f\x00\xa1\xa7\xd0\x71\x8c\xec\x05\xfa\xe0\xbb\x5e\x2f\x20\xbb\xa3\xd1\xf4\x24\xcc\xa3\x06\x34\x1d\x4b\x2c\xfe\x93\xc6\xe7\x75\x7a\xef\x01\x63\xf4\x0d\x27\x43\x65\x94\x2c\x54\xea\xf8\x69\x58\xb8\x00\x0f\x91\xc2\x05\x60\x5c\x7d\x0a\x76\x14\x93\x4b\xa0\xb1\x28\x2d\x01\x8a\x81\xdf\x92\x49\x81\x23\x24\xeb\xe0\x11\xd9\xe1\xde\x11\x7c\xf3\x49\x2e\x70\xf0\x01\x3a\x1f\x08\x58\x0e\x3e\x74\x98\xfa\xfc\xf6\x62\xd6\x89\x9d\x83\xd4\x3e\xa1\x49\x7a\x19\x40\x08\x28\xc6\x77\xd0\x78\x93\x5e\x00\x42\x47\x31\x62\x4b\x1f\x19\xc9\xbe\x48\x73\x08\x70\xe3\x0d\x5d\x57\xa5\x7d\xb1\x26\x1e\xa8\xae\x52\x81\xfa\xa7\x0e\xc3\x31\x51\xa5\xfd\x0e\xd7\xdb\x35\x8e\xc5\xdb\x0c\x74\xef\x1f\x48\xa6\x29\x07\xc8\x70\xa0\x46\x7f\xfe\xe1\xe5\x34\x55\x65\x2e\x50\x95\xa9\xd8\x99\x7f\x63\x87\xce\xd5\xf7\x69\x63\x34\x3d\x4e\x62\x1c\xd1\xb1\xc9\x4c\xf5\x91\x44\x4f\xd0\xb1\x0c\x4a\x69\x90\x73\xfa\x17\x6c\x81\x55\xed\xe3\x75\x59\xbe\xbc\x8a\x8d\xf5\xde\x0d\x11\x8b\x98\x04\x2e\x1a\xdf\x95\x8b\x3a\xb1\x5c\xa8\x96\xdb\xfa\xc6\x71\xf3\x00\xbf\x26\xe7\xa5\x89\xfd\x8e\x51\xe9\x6c\x37\x96\x1e\xde\x5b\x92\x3c\x86\x64\x66\xe3\x85\x2e\x20\x90\xf3\x68\xe6\xdf\x81\xe2\xfe\x53\x3e\xcc\x3f\xbf\xf5\x79\xb9\x5e\x3e\xff\x0e\x00\x00\xff\xff\xac\x33\x74\xe1\xe9\x05\x00\x00"

func templatesLoginAltslackHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLoginAltslackHtml,
		"templates/login-altslack.html",
	)
}

func templatesLoginAltslackHtml() (*asset, error) {
	bytes, err := templatesLoginAltslackHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/login-altslack.html", size: 1513, mode: os.FileMode(420), modTime: time.Unix(1483761714, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLogsIndexHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x0c\xb4\x28\x72\xa9\x24\xdb\x59\xa4\x80\x56\x11\x8a\xee\x1e\x5a\x20\x5b\x2c\xba\x6d\x81\x1e\x47\xe2\x48\x62\x43\x91\x02\x49\xc9\x31\x08\xfd\xf7\x82\xfa\x88\x15\xd7\x41\x90\xa0\x5d\xfb\x42\xcd\x90\xef\xbd\x79\x33\x94\x9c\x63\x54\x72\x49\x10\x18\x7b\x14\x64\x82\x61\xd8\xa4\xe3\x32\xdb\x44\x45\x8d\x52\x92\x08\x73\xf5\x10\x16\x4a\x5a\xe4\x92\x34\xb8\x0d\x00\x00\xe3\xa6\x15\x78\x4c\xa0\x14\xf4\xf0\x61\x0c\xf9\x55\x58\x0a\x75\x48\x40\xab\x03\x1c\x34\xb6\x53\xe2\xef\xce\x58\x5e\x1e\x47\x0c\x92\x76\x3a\x13\x1a\x8b\xda\x7e\xd8\x0c\xcf\xf1\x64\xc0\x78\x3f\xb3\x35\xa8\x2b\x2e\x13\xb8\x6e\x67\xae\x29\x10\x6a\x5e\xd5\x36\x81\xdd\xd6\xc7\x5f\x40\x5a\xe3\xe5\x58\xdc\x57\x5a\x75\x92\x85\x85\x12\x4a\x27\xf0\xae\xdc\xfa\xff\x84\x9e\x2b\xcd\x48\x87\x1a\x19\xef\x4c\x02\x37\x0b\x6b\x8b\x8c\x71\x59\x25\xb0\x8d\x76\xed\xc3\x14\x7f\x81\x15\xcf\xfd\xca\x85\x2a\xee\x27\xb8\x03\x67\xb6\xf6\xea\xb7\xdf\x4d\x81\x45\xcb\xcd\xfe\xfa\x3a\xff\xe1\xad\x95\x46\x52\x85\x0d\xea\x9e\xcb\x99\x5b\xb5\x58\x70\x7b\xf4\xb2\x6f\x9e\x12\xed\xf7\xfb\x57\xa0\x2d\xb5\xbc\xf1\x74\xd2\x73\xc3\x2d\xb1\xcb\x28\x69\x3c\x8f\x9d\x73\x24\xd9\x30\x6c\x4e\xa3\x39\xcf\xcd\x38\x9b\xde\xd3\x42\xa0\x31\xb7\xc1\x23\x55\x90\x8d\x80\xeb\x5c\x8b\x15\x85\x35\x21\xf3\xd9\xb4\xde\x65\x1f\x27\x8d\x70\xa7\x2a\x93\xc6\xf5\x2e\x4b\x4d\x83\x42\x64\x3f\x51\x81\x9d\x21\xf8\x2a\xb0\xb8\x87\x56\x53\xc3\xbb\x06\xb8\x81\x9c\x0b\x41\x0c\x5a\xd2\xd0\x19\xd2\x69\x3c\xed\x4f\x63\xc6\xfb\x6c\x33\x11\xd6\xfb\xec\x4b\x97\x0b\x5e\xc0\x0c\xef\xa1\xf7\xff\x56\x73\xd1\xa0\x59\xb5\xff\x39\xa7\x51\x56\x04\xd1\x02\x33\x0c\x8f\xb9\x11\x67\xb4\xe6\x36\x18\xc7\x32\x81\xd0\x39\x41\x12\xa2\xcf\xd4\xe4\xa4\xcd\x30\xac\xa0\x96\x23\x67\x91\xfa\x7d\x96\x22\xd4\x9a\xca\xdb\x20\x16\xaa\x32\xb1\x73\xd1\x2f\x9f\xfc\xd1\x77\xce\x45\xbf\x62\x43\xc3\x90\xc6\x98\xa5\x71\xfd\xfe\xec\x6c\x9b\x39\x17\x7d\xe9\x74\xab\x0c\x45\x7f\xa2\xe8\xc6\xad\xed\xd9\xae\xf8\x09\xe9\xd9\xe3\xd2\xd3\x55\xea\xe4\xa0\xe6\x3d\x5a\xba\x60\xa1\x73\xc0\x4b\x88\xfe\x52\x9d\x9e\x37\x2d\x7b\x20\x5c\xc0\x5e\xe5\x72\x08\xb3\xcf\x97\x20\x5f\xeb\xf9\x42\xeb\x1c\x2f\x41\x2a\x0b\xd1\xcf\x68\x3e\x8f\xb3\x3e\x0c\xab\x2b\x38\x95\xfe\xbf\xb6\xe8\xa2\x84\xb4\xcd\x52\x6a\x32\x3f\xf0\x80\x9a\xc6\x3c\xf6\xc8\x05\xe6\x82\xa0\x54\x1a\x6c\xcd\x0d\xcc\xae\x41\x3e\x5f\x04\x6e\x81\x29\x32\xf2\xca\x42\x8d\x3d\xc1\x8f\x53\x1d\x51\x1a\x53\x93\xf9\xb6\xaf\x7b\xf9\xdf\xce\x08\x90\x64\xa7\xce\x9e\xb2\x3e\x23\x0c\xad\x3b\xe4\x7b\xe9\x67\xe3\x0e\x8f\xaa\xb3\xd1\xa7\x8f\x9d\xd6\x24\xed\x1f\x86\x74\x34\x5e\x65\xbf\x7a\xc4\x9a\x25\xfe\xae\xa0\xe7\x74\x00\x5b\x13\x78\x83\x47\x13\xda\x79\xfc\x66\x1f\xcc\xf7\xb0\x74\xe1\xca\xb9\x05\xff\xab\xff\x56\x4d\xb8\xbf\xdd\x41\xe0\x3f\x1d\xad\x49\x34\x21\x0b\x86\xe1\x2a\xab\x34\x4a\x0b\x58\x14\x64\x8c\xef\x50\xf4\xa4\x74\xaf\x75\xd4\xff\xad\xe4\x18\x5e\x49\xe0\xf2\x19\x25\x2b\x8f\x97\x67\xff\x62\x9d\xec\x9e\x9b\xfb\x4f\x00\x00\x00\xff\xff\xfc\x57\x79\x34\x17\x08\x00\x00"

func templatesLogsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLogsIndexHtml,
		"templates/logs-index.html",
	)
}

func templatesLogsIndexHtml() (*asset, error) {
	bytes, err := templatesLogsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/logs-index.html", size: 2071, mode: os.FileMode(420), modTime: time.Unix(1482044464, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUserManageHtml = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x91\x41\x6b\xe3\x30\x10\x85\xef\xf9\x15\x83\xf7\x6c\x8b\x84\x9c\x16\x45\x97\xdd\x4b\xa0\x69\x03\xa5\xbd\x8f\xad\x89\x65\xaa\x8c\x8c\xa4\x84\x16\xa1\xff\x5e\x1c\xdb\x25\x31\xd5\x45\x68\xde\xbc\xf9\xe6\xa1\x94\x34\x9d\x3a\x26\x28\x1a\xc7\x91\x38\x16\x39\xaf\xa4\xee\xae\xd0\x58\x0c\x61\x77\x2b\x63\xc7\xe4\x0b\xb5\x02\x00\xb8\xd7\x7a\x6c\xa9\x34\x84\x7a\x50\xa5\x59\xab\xb7\x40\x1e\x8e\xde\x9d\x3a\x4b\x52\x98\xb5\x92\xe1\x8c\xd6\xaa\x03\x32\xb6\x04\x8d\x63\xa6\x26\x76\x8e\x03\x20\x6b\xb0\xae\x05\x77\x89\x52\x8c\x5d\x52\xe8\xee\xaa\x56\x23\xa6\x57\x12\x67\x4e\x1d\x19\xea\xc8\xa5\x46\x6e\x07\xd4\x93\x6b\xe1\x65\xf0\xa1\x92\xa2\x9f\xf6\x32\x1b\xb5\xe7\xe8\x51\x0a\xb3\x99\x87\x98\x8d\x7a\xb5\xd8\x7c\x8c\xb5\xe5\xfa\x8d\x41\x66\xb2\x65\xed\x3e\xcb\x65\xcc\xe1\xa4\xe4\x07\x20\x54\xff\xc6\xc6\x90\xf3\x8f\x76\x9b\x13\xe2\x97\xa5\x5d\xe1\xbc\x26\xff\x17\xca\x94\x2c\x31\x54\x07\x3a\xd7\xe4\x43\xce\x77\xa3\x66\xcb\x63\x65\xdc\x71\x3b\x24\x35\x9e\x4e\xbb\x42\x58\xd7\x06\x91\x52\xb5\xff\x3f\xd8\xff\xa4\x54\x3d\xe3\x99\x72\x1e\xa3\x9a\xed\x2f\xfe\x5e\xa5\x54\x1d\x2f\xbe\x77\x81\xaa\x77\xb4\x97\x5b\x7b\xbf\x60\x8b\x07\xf8\xe2\x99\x12\xb1\x9e\xc2\xcd\x9f\x30\xdd\x93\xf4\x1d\x00\x00\xff\xff\x20\xfd\x23\x5f\x27\x02\x00\x00"

func templatesUserManageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesUserManageHtml,
		"templates/user-manage.html",
	)
}

func templatesUserManageHtml() (*asset, error) {
	bytes, err := templatesUserManageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/user-manage.html", size: 551, mode: os.FileMode(420), modTime: time.Unix(1483761454, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"layout.html":                   layoutHtml,
	"assets/styles.css":             assetsStylesCss,
	"templates/factoid-info.html":   templatesFactoidInfoHtml,
	"templates/factoid-list.html":   templatesFactoidListHtml,
	"templates/home.html":           templatesHomeHtml,
	"templates/invite-list.html":    templatesInviteListHtml,
	"templates/logged-out.html":     templatesLoggedOutHtml,
	"templates/login-altslack.html": templatesLoginAltslackHtml,
	"templates/logs-index.html":     templatesLogsIndexHtml,
	"templates/user-manage.html":    templatesUserManageHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"styles.css": &bintree{assetsStylesCss, map[string]*bintree{}},
	}},
	"layout.html": &bintree{layoutHtml, map[string]*bintree{}},
	"templates": &bintree{nil, map[string]*bintree{
		"factoid-info.html":   &bintree{templatesFactoidInfoHtml, map[string]*bintree{}},
		"factoid-list.html":   &bintree{templatesFactoidListHtml, map[string]*bintree{}},
		"home.html":           &bintree{templatesHomeHtml, map[string]*bintree{}},
		"invite-list.html":    &bintree{templatesInviteListHtml, map[string]*bintree{}},
		"logged-out.html":     &bintree{templatesLoggedOutHtml, map[string]*bintree{}},
		"login-altslack.html": &bintree{templatesLoginAltslackHtml, map[string]*bintree{}},
		"logs-index.html":     &bintree{templatesLogsIndexHtml, map[string]*bintree{}},
		"user-manage.html":    &bintree{templatesUserManageHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
